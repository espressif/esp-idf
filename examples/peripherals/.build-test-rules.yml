# Documentation: .gitlab/ci/README.md#manifest-file-to-control-the-buildtest-apps

.i2c_dependencies: &i2c_dependencies
  depends_filepatterns:
    # components
    - examples/system/console/advanced/components/**/*
    - components/driver/i2c/**/*
    - components/driver/Kconfig

examples/peripherals/adc/continuous_read:
  disable:
    - if: SOC_ADC_DMA_SUPPORTED != 1

examples/peripherals/adc/oneshot_read:
  disable:
    - if: SOC_ADC_SUPPORTED != 1

examples/peripherals/analog_comparator:
  disable:
    - if: SOC_ANA_CMPR_SUPPORTED != 1

examples/peripherals/dac:
  disable:
    - if: SOC_DAC_SUPPORTED != 1

examples/peripherals/gpio/matrix_keyboard:
  enable:
    - if: IDF_TARGET == "esp32s2"

examples/peripherals/i2c/i2c_self_test:
  disable:
    - if: SOC_I2C_SUPPORT_SLAVE != 1
      reason: the test requires both master and slave
  <<: *i2c_dependencies

examples/peripherals/i2c/i2c_simple:
  disable:
    - if: SOC_I2C_SUPPORT_SLAVE != 1
      reason: the test requires both master and slave
  <<: *i2c_dependencies

examples/peripherals/i2c/i2c_tools:
  disable:
    - if: SOC_I2C_SUPPORTED != 1
  disable_test:
    - if: IDF_TARGET != "esp32"
      temporary: true
      reason: lack of runners
  <<: *i2c_dependencies

examples/peripherals/i2s/i2s_adc_dac:
  disable:
    - if: SOC_I2S_SUPPORTS_ADC_DAC != 1

examples/peripherals/i2s/i2s_basic/i2s_pdm:
  disable:
    - if: SOC_I2S_SUPPORTS_PDM != 1

examples/peripherals/i2s/i2s_basic/i2s_std:
  disable:
    - if: SOC_I2S_SUPPORTED != 1

examples/peripherals/i2s/i2s_basic/i2s_tdm:
  disable:
    - if: SOC_I2S_SUPPORTS_TDM != 1

examples/peripherals/i2s/i2s_codec/i2s_es7210_tdm:
  disable:
    - if: SOC_I2S_SUPPORTS_TDM != 1 or (SOC_I2C_SUPPORTED != 1 or SOC_GPSPI_SUPPORTED != 1)
      reason: rely on I2S TDM mode to receive audio, I2C to config es7210 and SPI to save audio to SD card

examples/peripherals/i2s/i2s_codec/i2s_es8311:
  disable:
    - if: SOC_I2S_SUPPORTED != 1 or SOC_I2C_SUPPORTED != 1
      reason: rely on I2S STD mode and I2C to config es7210

examples/peripherals/i2s/i2s_recorder:
  enable:
    - if: SOC_I2S_SUPPORTS_PDM_RX > 0

examples/peripherals/lcd/i2c_oled:
  disable:
    - if: SOC_I2C_SUPPORTED != 1

examples/peripherals/lcd/i80_controller:
  disable:
    - if: SOC_LCD_I80_SUPPORTED != 1

examples/peripherals/lcd/rgb_panel:
  disable:
    - if: SOC_LCD_RGB_SUPPORTED != 1

examples/peripherals/lcd/spi_lcd_touch:
  disable:
    - if: SOC_GPSPI_SUPPORTED != 1

examples/peripherals/lcd/tjpgd:
  disable:
    - if: SOC_GPSPI_SUPPORTED != 1

examples/peripherals/ledc:
  disable:
    - if: SOC_LEDC_SUPPORTED != 1

examples/peripherals/ledc/ledc_gamma_curve_fade:
  disable:
    - if: SOC_LEDC_SUPPORTED != 1 or SOC_LEDC_GAMMA_CURVE_FADE_SUPPORTED != 1

examples/peripherals/mcpwm:
  disable:
    - if: SOC_MCPWM_SUPPORTED != 1

examples/peripherals/mcpwm/mcpwm_bdc_speed_control:
  disable:
    - if: SOC_MCPWM_SUPPORTED != 1
  disable_test:
    - if: IDF_TARGET != "esp32s3"
      temporary: true
      reason: lack of runners

examples/peripherals/mcpwm/mcpwm_bldc_hall_control:
  disable:
    - if: SOC_MCPWM_SUPPORTED != 1
  disable_test:
    - if: IDF_TARGET != "esp32s3"
      temporary: true
      reason: lack of runners

examples/peripherals/parlio:
  disable:
    - if: SOC_PARLIO_SUPPORTED != 1

examples/peripherals/parlio/simple_rgb_led_matrix:
  disable:
    - if: SOC_PARLIO_SUPPORTED != 1 or SOC_DEDICATED_GPIO_SUPPORTED != 1
  disable_test:
    - if: IDF_TARGET != "esp32c6"
      temporary: true
      reason: lack of runners

examples/peripherals/pcnt:
  disable:
    - if: SOC_PCNT_SUPPORTED != 1

examples/peripherals/rmt:
  disable:
    - if: SOC_RMT_SUPPORTED != 1

examples/peripherals/rmt/ir_nec_transceiver:
  disable:
    - if: SOC_RMT_SUPPORTED != 1
  disable_test:
    - if: IDF_TARGET != "esp32"
      temporary: true
      reason: lack of runners

examples/peripherals/rmt/musical_buzzer:
  disable:
    - if: SOC_RMT_SUPPORT_TX_LOOP_COUNT != 1

examples/peripherals/rmt/onewire_ds18b20:
  disable:
    - if: SOC_RMT_SUPPORTED != 1

examples/peripherals/rmt/stepper_motor:
  disable:
    - if: SOC_RMT_SUPPORT_TX_LOOP_AUTO_STOP != 1

examples/peripherals/sdio/host:
  enable:
    - if: SOC_SDMMC_HOST_SUPPORTED == 1
    - if: IDF_TARGET == "esp32"
      temporary: true
      reason: Only the SDSPI of ESP32 supports ESP SDIO slave for now
  disable_test:
    - if: IDF_TARGET != "esp32"
      temporary: true
      reason: lack of runners

examples/peripherals/sdio/slave:
  disable:
    - if: SOC_SDIO_SLAVE_SUPPORTED != 1
  disable_test:
    - if: IDF_TARGET != "esp32"
      temporary: true
      reason: lack of runners

examples/peripherals/secure_element/atecc608_ecdsa:
  enable:
    - if: IDF_TARGET == "esp32"
      temporary: true
      reason: the other targets are not tested yet

examples/peripherals/sigma_delta:
  disable:
    - if: SOC_SDM_SUPPORTED != 1

examples/peripherals/spi_master/hd_eeprom:
  disable:
    - if: SOC_GPSPI_SUPPORTED != 1

examples/peripherals/spi_master/lcd:
  disable:
    - if: SOC_GPSPI_SUPPORTED != 1

examples/peripherals/spi_slave/receiver:
  disable:
    - if: SOC_GPSPI_SUPPORTED != 1

examples/peripherals/spi_slave/sender:
  disable:
    - if: SOC_GPSPI_SUPPORTED != 1

examples/peripherals/spi_slave_hd/append_mode/master:
  disable:
    - if: IDF_TARGET == "esp32c6"
      temporary: true
      reason: target(s) not supported yet

examples/peripherals/spi_slave_hd/append_mode/slave:
  enable:
    - if: IDF_TARGET == "esp32s2"
      temporary: true
      reason: the other targets are not tested yet

examples/peripherals/spi_slave_hd/segment_mode/seg_master:
  disable:
    - if: SOC_GPSPI_SUPPORTED != 1

examples/peripherals/spi_slave_hd/segment_mode/seg_slave:
  disable:
    - if: IDF_TARGET == "esp32"
      temporary: true
      reason: not supported

examples/peripherals/temperature_sensor/temp_sensor:
  disable:
    - if: SOC_TEMP_SENSOR_SUPPORTED != 1

examples/peripherals/temperature_sensor/temp_sensor_monitor:
  disable:
    - if: SOC_TEMPERATURE_SENSOR_INTR_SUPPORT != 1

examples/peripherals/timer_group:
  disable:
    - if: SOC_GPTIMER_SUPPORTED != 1

examples/peripherals/timer_group/gptimer_capture_hc_sr04:
  disable:
    - if: SOC_TIMER_SUPPORT_ETM != 1

examples/peripherals/touch_sensor:
  disable:
    - if: SOC_TOUCH_SENSOR_SUPPORTED != 1

examples/peripherals/touch_sensor/touch_element:
  enable:
    - if: IDF_TARGET in ["esp32s2", "esp32s3"]
      reason: only supports esp32s2 and esp32s3

examples/peripherals/touch_sensor/touch_sensor_v1:
  disable:
    - if: SOC_TOUCH_VERSION_1 != 1

examples/peripherals/touch_sensor/touch_sensor_v2:
  disable:
    - if: SOC_TOUCH_VERSION_2 != 1

examples/peripherals/twai/twai_alert_and_recovery:
  disable:
    - if: SOC_TWAI_SUPPORTED != 1
  disable_test:
    - if: IDF_TARGET not in ["esp32"]
      temporary: true
      reason: lack of runners

examples/peripherals/twai/twai_network:
  disable:
    - if: SOC_TWAI_SUPPORTED != 1
  disable_test:
    - if: IDF_TARGET not in ["esp32"]
      temporary: true
      reason: lack of runners

examples/peripherals/twai/twai_self_test:
  disable:
    - if: SOC_TWAI_SUPPORTED != 1
  disable_test:
    - if: IDF_TARGET not in ["esp32"]
      temporary: true
      reason: lack of runners

examples/peripherals/uart/uart_echo_rs485:
  enable:
    - if: INCLUDE_DEFAULT == 1

examples/peripherals/usb:
  disable:
    - if: SOC_USB_PERIPH_NUM != 1
