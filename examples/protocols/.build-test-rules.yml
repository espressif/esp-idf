# Documentation: .gitlab/ci/README.md#manifest-file-to-control-the-buildtest-apps

.default_rules: &default_rules
  depends_components:
    - lwip
    - esp_netif
    - esp_wifi
    - esp_phy
    - esp_eth
    - mbedtls
    - protocol_examples_common
  disable:
    - if: IDF_TARGET in ["esp32h21", "esp32h4"]
      temporary: true
      reason: not supported yet  # TODO: [ESP32H21] IDF-11581   [ESP32H4] IDF-12360

.mqtt_dependencies: &mqtt_dependencies
  <<: *default_rules
  depends_filepatterns:
    - components/mqtt/**/*
  depends_components+:
    - mqtt

examples/protocols/dns_over_https:
  <<: *default_rules
examples/protocols/esp_http_client:
  <<: *default_rules
  enable:
    - if: INCLUDE_DEFAULT == 1 or IDF_TARGET == "linux"
  disable_test:
    - if: IDF_TARGET not in ["esp32", "linux"]
  depends_components+:
    - esp_http_client

examples/protocols/esp_local_ctrl:
  <<: *default_rules
  disable+:
    - if: IDF_TARGET in ["esp32h2"]
      temporary: true
      reason: not supported yet
  disable_test:
    - if: IDF_TARGET not in ["esp32", "esp32c3", "esp32s3"]
      reason: only test on these targets
  depends_filepatterns:
    - tools/esp_prov/**/*
  depends_components+:
    - protocomm

examples/protocols/http_request:
  <<: *default_rules
  disable_test:
    - if: IDF_TARGET != "esp32"
      reason: only test on esp32

examples/protocols/http_server:
  <<: *default_rules
  disable_test:
    - if: IDF_TARGET not in ["esp32", "esp32c3", "esp32s3"]
      reason: only test on these targets
  depends_components+:
    - esp_http_server
    - esp-tls
    - esp_netif

examples/protocols/http_server/async_handlers:
  <<: *default_rules
  disable_test:
    - if: IDF_TARGET not in ["esp32"]
      reason: only test on esp32
  depends_components+:
    - esp_http_server

examples/protocols/http_server/captive_portal:
  <<: *default_rules
  disable+:
    - if: SOC_WIFI_SUPPORTED != 1
      reason: WiFi is required
  disable_test:
    - if: IDF_TARGET != "esp32"
      reason: only test on esp32
  depends_components+:
    - esp_http_server

examples/protocols/http_server/restful_server:
  <<: *default_rules
  disable+:
    - if: IDF_TARGET in ["esp32h2"]
      temporary: true
      reason: not supported yet
  depends_components+:
    - esp_http_server

examples/protocols/http_server/simple:
  <<: *default_rules
  enable:
    - if: INCLUDE_DEFAULT == 1 or IDF_TARGET == "linux"
  disable_test:
    - if: IDF_TARGET not in ["esp32", "esp32c3", "esp32s3"]
      reason: only test on these targets
  depends_components+:
    - esp_http_server

examples/protocols/http_server/ws_echo_server:
  <<: *default_rules
  disable_test:
    - if: IDF_TARGET != "esp32"
      reason: only test on esp32
  depends_components+:
    - esp_http_server

examples/protocols/https_mbedtls:
  <<: *default_rules
  enable:
    - if: INCLUDE_DEFAULT == 1 or IDF_TARGET == "linux"
  disable_test:
    - if: IDF_TARGET != "esp32"
      reason: only test on esp32

examples/protocols/https_request:
  <<: *default_rules
  disable+:
    - if: IDF_TARGET in ["esp32h2"]
      temporary: true
      reason: not supported on h2
  disable_test:
    - if: IDF_TARGET not in ["esp32", "esp32c2"]
      reason: only test on these target

examples/protocols/https_server/simple:
  <<: *default_rules
  disable_test:
    - if: IDF_TARGET not in ["esp32", "esp32c3", "esp32s3"]
      reason: only test on these targets
  depends_components+:
    - esp_https_server
    - esp-tls

examples/protocols/https_server/wss_server:
  <<: *default_rules
  disable_test:
    - if: IDF_TARGET != "esp32"
      reason: only test on esp32
  depends_components+:
    - esp_https_server

examples/protocols/https_x509_bundle:
  <<: *default_rules
  disable_test:
    - if: IDF_TARGET != "esp32"
      reason: only test on esp32
  depends_components+:
    - esp-tls

examples/protocols/icmp_echo:
  <<: *default_rules
  disable_test:
    - if: SOC_WIFI_SUPPORTED != 1

examples/protocols/l2tap:
  <<: *default_rules
  disable_test:
    - if: IDF_TARGET != "esp32"
      reason: only test on esp32

examples/protocols/mqtt/custom_outbox:
  <<: *mqtt_dependencies

examples/protocols/mqtt/ssl:
  <<: *mqtt_dependencies
  disable_test:
    - if: IDF_TARGET != "esp32"
      reason: only test on esp32

examples/protocols/mqtt/ssl_ds:
  <<: *mqtt_dependencies
  disable+:
    - if: SOC_DIG_SIGN_SUPPORTED != 1
      temporary: false
      reason: DS not present
  depends_filepatterns+:
    - examples/protocols/mqtt/ssl_ds/**/*

examples/protocols/mqtt/ssl_mutual_auth:
  <<: *mqtt_dependencies

examples/protocols/mqtt/ssl_psk:
  <<: *mqtt_dependencies
examples/protocols/mqtt/tcp:
  <<: *mqtt_dependencies
  disable_test:
    - if: IDF_TARGET != "esp32"
      reason: only test on esp32
  depends_filepatterns+:
    - examples/protocols/mqtt/tcp/**/*

examples/protocols/mqtt/ws:
  <<: *mqtt_dependencies
  disable_test:
    - if: IDF_TARGET != "esp32"
      reason: only test on esp32
  depends_filepatterns+:
    - examples/protocols/mqtt/ws/**/*

examples/protocols/mqtt/wss:
  <<: *mqtt_dependencies
  disable_test:
    - if: IDF_TARGET != "esp32"
      reason: only test on esp32
  depends_filepatterns+:
    - examples/protocols/mqtt/wss/**/*


examples/protocols/mqtt5:
  <<: *mqtt_dependencies
  disable_test:
    - if: IDF_TARGET != "esp32"
      reason: only test on esp32
  depends_filepatterns+:
    - examples/protocols/mqtt5/**/*

examples/protocols/smtp_client:
  <<: *default_rules

examples/protocols/sntp:
  <<: *default_rules
  enable:
    - if: IDF_TARGET in ["esp32", "esp32h2"]
      temporary: true
      reason: the other targets are not tested yet
  disable_test:
    - if: IDF_TARGET != "esp32"
      reason: only test on esp32

examples/protocols/sockets:
  <<: *default_rules
  disable_test:
    - if: SOC_WIFI_SUPPORTED != 1

examples/protocols/sockets/non_blocking:
  <<: *default_rules
  disable_test:
    - if: IDF_TARGET != "esp32"
      temporary: true
      reason: lack of runners

examples/protocols/sockets/tcp_client:
  <<: *default_rules
  disable_test:
    - if: SOC_WIFI_SUPPORTED != 1
  # linux target won't work with CONFIG_EXAMPLE_SOCKET_IP_INPUT_STDIN=y

examples/protocols/sockets/udp_multicast:
  <<: *default_rules
  disable_test:
    - if: IDF_TARGET not in ["esp32", "esp32p4"]

examples/protocols/static_ip:
  <<: *default_rules
  disable_test:
    - if: IDF_TARGET != "esp32"
      temporary: true
      reason: lack of runners
