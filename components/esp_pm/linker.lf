[mapping:esp_pm]
archive: libesp_pm.a
entries:
    if PM_RTOS_IDLE_OPT = y:
        pm_impl:esp_pm_impl_idle_hook (noflash)
        pm_impl:esp_pm_impl_waiti (noflash)

    if PM_SLP_IRAM_OPT = y:
        pm_impl:esp_pm_impl_get_cpu_freq (noflash)
        if FREERTOS_USE_TICKLESS_IDLE = y:
            pm_impl:vApplicationSleep (noflash)

[mapping:esp_hw_support_pm]
archive: libesp_hw_support.a
entries:
    if PM_SLP_IRAM_OPT = y:
        if SOC_LIGHT_SLEEP_SUPPORTED = y:
            sleep_modes:esp_light_sleep_start (noflash)
            sleep_modes:esp_sleep_enable_timer_wakeup (noflash)
            sleep_modem:modem_domain_pd_allowed (noflash)
            sleep_modem:periph_inform_out_light_sleep_overhead (noflash)
            sleep_modem:sleep_modem_reject_triggers (noflash)
            if ESP_PHY_MAC_BB_PD = y:
                sleep_modem:mac_bb_power_down_cb_execute (noflash)
                sleep_modem:mac_bb_power_up_cb_execute (noflash)
            if IDF_TARGET_ESP32 = y:
                sleep_gpio:esp_sleep_gpio_pupd_config_workaround_apply (noflash)
                sleep_gpio:esp_sleep_gpio_pupd_config_workaround_unapply (noflash)
            if SOC_PM_SUPPORT_TOP_PD = y:
                sleep_clock:clock_domain_pd_allowed (noflash)
                sleep_system_peripheral:peripheral_domain_pd_allowed (noflash)
            if SOC_PM_CPU_RETENTION_BY_RTCCNTL = y && (PM_POWER_DOWN_CPU_IN_LIGHT_SLEEP = y || SOC_PM_SUPPORT_TAGMEM_PD = y):
                sleep_cpu:sleep_enable_cpu_retention (noflash)
            if PM_POWER_DOWN_CPU_IN_LIGHT_SLEEP = y || (SOC_CPU_IN_TOP_DOMAIN = y && PM_POWER_DOWN_PERIPHERAL_IN_LIGHT_SLEEP = y):
                sleep_cpu:cpu_domain_pd_allowed (noflash)
            if SOC_PM_MMU_TABLE_RETENTION_WHEN_TOP_PD = y && PM_POWER_DOWN_PERIPHERAL_IN_LIGHT_SLEEP = y:
                sleep_mmu:mmu_domain_pd_allowed (noflash)
        esp_clk:esp_clk_slowclk_cal_set (noflash)
        esp_clk:esp_clk_slowclk_cal_get (noflash)
        esp_clk:esp_rtc_get_time_us (noflash)
        esp_clk:esp_clk_private_lock (noflash)
        esp_clk:esp_clk_private_unlock (noflash)
        if SOC_SYSTIMER_SUPPORTED = y:
            systimer (noflash)
        if IDF_TARGET_ESP32H21 != y && IDF_TARGET_ESP32H4 != y:
            sar_periph_ctrl:sar_periph_ctrl_power_disable (noflash)
        if SOC_TEMP_SENSOR_SUPPORTED = y:
            sar_tsens_ctrl:temperature_sensor_power_acquire (noflash)
            sar_tsens_ctrl:temperature_sensor_power_release (noflash)
            sar_tsens_ctrl:temp_sensor_get_raw_value (noflash)
        regi2c_ctrl:regi2c_saradc_enable (noflash)
        regi2c_ctrl:regi2c_saradc_disable (noflash)
        if SOC_ADC_SUPPORTED = y:
            adc_share_hw_ctrl:adc_apb_periph_claim (noflash)
            adc_share_hw_ctrl:adc_apb_periph_free (noflash)

[mapping:esp_system_pm]
archive: libesp_system.a
entries:
    if PM_RTOS_IDLE_OPT = y:
        freertos_hooks:esp_vApplicationIdleHook (noflash)

[mapping:esp_timer_pm]
archive: libesp_timer.a
entries:
    if PM_SLP_IRAM_OPT = y:
        esp_timer_impl_common:esp_timer_impl_lock (noflash)
        esp_timer_impl_common:esp_timer_impl_unlock (noflash)
        if ESP_TIMER_IMPL_TG0_LAC = y:
            esp_timer_impl_lac:esp_timer_impl_advance (noflash)
            esp_timer_impl_lac:esp_timer_impl_set (noflash)
        elif ESP_TIMER_IMPL_SYSTIMER = y:
            esp_timer_impl_systimer:esp_timer_impl_advance (noflash)
            esp_timer_impl_systimer:esp_timer_impl_set (noflash)

[mapping:esp_libc_pm]
archive: libesp_libc.a
entries:
    if PM_SLP_IRAM_OPT = y:
        esp_time_impl:esp_time_impl_set_boot_time (noflash)
        esp_time_impl:esp_time_impl_get_boot_time (noflash)
        esp_time_impl:esp_set_time_from_rtc (noflash)

[mapping:hal_pm]
archive: libhal.a
entries:
    if SOC_PM_CPU_RETENTION_BY_RTCCNTL = y:
        if PM_SLP_IRAM_OPT = y && PM_POWER_DOWN_CPU_IN_LIGHT_SLEEP = y:
            rtc_cntl_hal:rtc_cntl_hal_enable_cpu_retention (noflash)
        if PM_SLP_IRAM_OPT = y && PM_RESTORE_CACHE_TAGMEM_AFTER_LIGHT_SLEEP = y:
            rtc_cntl_hal:rtc_cntl_hal_enable_tagmem_retention (noflash)
    if SOC_TEMP_SENSOR_SUPPORTED = y:
        if PM_SLP_IRAM_OPT = y:
            temperature_sensor_hal:temperature_sensor_hal_get_raw_value (noflash)
