[mapping:freertos]
archive: libfreertos.a
entries:
    * (noflash_text)
    if FREERTOS_PLACE_FUNCTIONS_INTO_FLASH = y:
        port: pxPortInitialiseStack (default)
        port: xPortStartScheduler (default)
        if ESP_PANIC_HANDLER_IRAM != y:
            tasks: uxTaskGetSnapshotAll (default)
            tasks: prvTaskGetSnapshot (default)
            tasks: prvTaskGetSnapshotsFromList (default)
        if IDF_TARGET_ESP32S2 =n && IDF_TARGET_ESP32C3 = n :
            port: vPortReleaseTaskMPUSettings (default)
            tasks: xTaskCreateRestricted (default)
            port: vPortStoreTaskMPUSettings (default)
            tasks: vTaskAllocateMPURegions (default)
        tasks: prvTaskCheckFreeStackSpace (default)
        tasks: prvInitialiseNewTask (default)
        tasks: prvInitialiseTaskLists (default)
        tasks: prvDeleteTCB (default)
        tasks: prvCheckTasksWaitingTermination (default)
        tasks: prvIdleTask (default)
        tasks: prvAddNewTaskToReadyList (default)
        tasks: xTaskCreatePinnedToCore (default)
        tasks: xTaskCreateStaticPinnedToCore (default)
        tasks: vTaskResume (default)
        tasks: vTaskStartScheduler (default)
        tasks: vTaskSuspendAll (default)
        tasks: uxTaskGetNumberOfTasks (default)
        tasks: xTaskGetIdleTaskHandle (default)
        tasks: xTaskRemoveFromUnorderedEventList (default)
        tasks: uxTaskPriorityGet (default)
        tasks: vTaskPrioritySet (default)
        tasks: vTaskSetThreadLocalStoragePointerAndDelCallback (default)
        tasks: pvTaskGetThreadLocalStoragePointer (default)
        tasks: xTaskGetCurrentTaskHandleForCPU (default)
        tasks: vTaskDelete (default)
        tasks: vTaskDelayUntil (default)
        tasks: vTaskDelay (default)
        tasks: vTaskSuspend (default)
        tasks: xTaskResumeAll (default)
        tasks: uxTaskResetEventItemValue (default)
        tasks: ulTaskNotifyTake (default)
        tasks: xTaskNotifyWait (default)
        tasks: xTaskGenericNotify (default)
        tasks: eTaskGetState (default)
        tasks: pxTaskGetStackStart (default)
        tasks: uxTaskGetStackHighWaterMark (default)
        tasks: vTaskEndScheduler (default)
        tasks: vTaskMissedYield (default)
        tasks: vTaskSetThreadLocalStoragePointer (default)
        tasks: xTaskGetAffinity (default)
        tasks: xTaskGetIdleTaskHandleForCPU (default)
        if FREERTOS_USE_TRACE_FACILITY = y:
            tasks: uxTaskGetSystemState (default)
            tasks: uxTaskGetTaskNumber (default)
            tasks: vTaskSetTaskNumber (default)
        if FREERTOS_USE_STATS_FORMATTING_FUNCTIONS = y:
            tasks: vTaskList (default)
        if FREERTOS_GENERATE_RUN_TIME_STATS = y:
            tasks: vTaskGetRunTimeStats (default)
        timers: prvInsertTimerInActiveList (default)
        timers: prvCheckForValidListAndQueue (default)
        timers: prvInitialiseNewTimer (default)
        timers: prvTimerTask (default)
        timers: prvSwitchTimerLists (default)
        timers: prvSampleTimeNow (default)
        timers: prvProcessExpiredTimer (default)
        timers: prvProcessTimerOrBlockTask (default)
        timers: prvProcessReceivedCommands (default)
        timers: xTimerCreateTimerTask (default)
        timers: xTimerCreate (default)
        timers: xTimerCreateStatic (default)
        timers: xTimerGenericCommand (default)
        timers: xTimerGetPeriod (default)
        timers: xTimerGetExpiryTime (default)
        timers: xTimerIsTimerActive (default)
        timers: pvTimerGetTimerID (default)
        timers: vTimerSetTimerID (default)
        timers: prvGetNextExpireTime (default)
        if FREERTOS_USE_TRACE_FACILITY = y:
            timers: uxTimerGetTimerNumber (default)
            timers: vTimerSetTimerNumber (default)
        event_groups: prvTestWaitCondition (default)
        event_groups: xEventGroupCreate (default)
        event_groups: xEventGroupCreateStatic (default)
        event_groups: xEventGroupWaitBits (default)
        event_groups: xEventGroupClearBits (default)
        event_groups: xEventGroupSetBits (default)
        event_groups: xEventGroupSync (default)
        event_groups: vEventGroupDelete (default)
        queue: prvIsQueueFull (default)
        queue: prvInitialiseNewQueue (default)
        queue: prvInitialiseMutex (default)
        queue: uxQueueSpacesAvailable (default)
        queue: xQueueGenericReset (default)
        queue: xQueueGenericCreate (default)
        queue: xQueueGetMutexHolder (default)
        queue: xQueueCreateCountingSemaphore (default)
        queue: xQueueGenericSend (default)
        queue: xQueueCreateMutex (default)
        queue: xQueueGiveMutexRecursive (default)
        queue: xQueueTakeMutexRecursive (default)
        queue: uxQueueMessagesWaiting (default)
        queue: vQueueDelete (default)
        queue: vQueueWaitForMessageRestricted (default)
        queue: xQueueCreateSet (default)
        queue: xQueueAddToSet (default)
        queue: xQueueRemoveFromSet (default)
        queue: xQueueSelectFromSet (default)
        queue: xQueueGenericCreateStatic (default)
        queue: xQueueCreateMutexStatic (default)
        queue: xQueueCreateCountingSemaphoreStatic (default)
        if FREERTOS_QUEUE_REGISTRY_SIZE > 0:
            queue: pcQueueGetName (default)
            queue: vQueueAddToRegistry (default)
            queue: vQueueUnregisterQueue (default)
        if FREERTOS_USE_TRACE_FACILITY = y:
            queue: uxQueueGetQueueNumber (default)
            queue: vQueueSetQueueNumber (default)
            queue: ucQueueGetQueueType (default)
    port_common:main_task (default)
    port:esp_startup_start_app (default)
    if ESP_SYSTEM_SINGLE_CORE_MODE = n:
        port:esp_startup_start_app_other_cores (default)
