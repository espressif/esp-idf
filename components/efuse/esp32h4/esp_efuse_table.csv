
# field_name,       |    efuse_block, | bit_start, | bit_count, |comment #
#                   |    (EFUSE_BLK0  | (0..255)   | (1-256)    |        #
#                   |     EFUSE_BLK1  |            |            |        #
#                   |        ...)     |            |            |        #
##########################################################################
# !!!!!!!!!!! #
# After editing this file, run the command manually "idf.py efuse-common-table"
# this will generate new source files, next rebuild all the sources.
# !!!!!!!!!!! #

# This file was generated by regtools.py based on the efuses.yaml file with the version: 7bc342bad0952907e1db21112d258c6b

WR_DIS,                                          EFUSE_BLK0,   0,  32, [] Disable programming of individual eFuses
WR_DIS.RD_DIS,                                   EFUSE_BLK0,   0,   1, [] wr_dis of RD_DIS
WR_DIS.KM_DISABLE_DEPLOY_MODE,                   EFUSE_BLK0,   1,   1, [] wr_dis of KM_DISABLE_DEPLOY_MODE
WR_DIS.KM_RND_SWITCH_CYCLE,                      EFUSE_BLK0,   1,   1, [] wr_dis of KM_RND_SWITCH_CYCLE
WR_DIS.KM_DEPLOY_ONLY_ONCE,                      EFUSE_BLK0,   1,   1, [] wr_dis of KM_DEPLOY_ONLY_ONCE
WR_DIS.FORCE_USE_KEY_MANAGER_KEY,                EFUSE_BLK0,   1,   1, [] wr_dis of FORCE_USE_KEY_MANAGER_KEY
WR_DIS.FORCE_DISABLE_SW_INIT_KEY,                EFUSE_BLK0,   1,   1, [] wr_dis of FORCE_DISABLE_SW_INIT_KEY
WR_DIS.KM_XTS_KEY_LENGTH_256,                    EFUSE_BLK0,   1,   1, [] wr_dis of KM_XTS_KEY_LENGTH_256
WR_DIS.LOCK_KM_KEY,                              EFUSE_BLK0,   1,   1, [] wr_dis of LOCK_KM_KEY
WR_DIS.DIS_USB_JTAG,                             EFUSE_BLK0,   2,   1, [] wr_dis of DIS_USB_JTAG
WR_DIS.DIS_FORCE_DOWNLOAD,                       EFUSE_BLK0,   2,   1, [] wr_dis of DIS_FORCE_DOWNLOAD
WR_DIS.SPI_DOWNLOAD_MSPI_DIS,                    EFUSE_BLK0,   2,   1, [] wr_dis of SPI_DOWNLOAD_MSPI_DIS
WR_DIS.DIS_TWAI,                                 EFUSE_BLK0,   2,   1, [] wr_dis of DIS_TWAI
WR_DIS.JTAG_SEL_ENABLE,                          EFUSE_BLK0,   2,   1, [] wr_dis of JTAG_SEL_ENABLE
WR_DIS.DIS_PAD_JTAG,                             EFUSE_BLK0,   2,   1, [] wr_dis of DIS_PAD_JTAG
WR_DIS.DIS_DOWNLOAD_MANUAL_ENCRYPT,              EFUSE_BLK0,   2,   1, [] wr_dis of DIS_DOWNLOAD_MANUAL_ENCRYPT
WR_DIS.SPI_BOOT_CRYPT_CNT,                       EFUSE_BLK0,   4,   1, [] wr_dis of SPI_BOOT_CRYPT_CNT
WR_DIS.SECURE_BOOT_KEY_REVOKE0,                  EFUSE_BLK0,   5,   1, [] wr_dis of SECURE_BOOT_KEY_REVOKE0
WR_DIS.SECURE_BOOT_KEY_REVOKE1,                  EFUSE_BLK0,   6,   1, [] wr_dis of SECURE_BOOT_KEY_REVOKE1
WR_DIS.SECURE_BOOT_KEY_REVOKE2,                  EFUSE_BLK0,   7,   1, [] wr_dis of SECURE_BOOT_KEY_REVOKE2
WR_DIS.KEY_PURPOSE_0,                            EFUSE_BLK0,   8,   1, [WR_DIS.KEY0_PURPOSE] wr_dis of KEY_PURPOSE_0
WR_DIS.KEY_PURPOSE_1,                            EFUSE_BLK0,   9,   1, [WR_DIS.KEY1_PURPOSE] wr_dis of KEY_PURPOSE_1
WR_DIS.KEY_PURPOSE_2,                            EFUSE_BLK0,  10,   1, [WR_DIS.KEY2_PURPOSE] wr_dis of KEY_PURPOSE_2
WR_DIS.KEY_PURPOSE_3,                            EFUSE_BLK0,  11,   1, [WR_DIS.KEY3_PURPOSE] wr_dis of KEY_PURPOSE_3
WR_DIS.KEY_PURPOSE_4,                            EFUSE_BLK0,  12,   1, [WR_DIS.KEY4_PURPOSE] wr_dis of KEY_PURPOSE_4
WR_DIS.KEY_PURPOSE_5,                            EFUSE_BLK0,  13,   1, [WR_DIS.KEY5_PURPOSE] wr_dis of KEY_PURPOSE_5
WR_DIS.SEC_DPA_LEVEL,                            EFUSE_BLK0,  14,   1, [] wr_dis of SEC_DPA_LEVEL
WR_DIS.XTS_DPA_PSEUDO_LEVEL,                     EFUSE_BLK0,  14,   1, [] wr_dis of XTS_DPA_PSEUDO_LEVEL
WR_DIS.XTS_DPA_CLK_ENABLE,                       EFUSE_BLK0,  14,   1, [] wr_dis of XTS_DPA_CLK_ENABLE
WR_DIS.ECC_FORCE_CONST_TIME,                     EFUSE_BLK0,  14,   1, [] wr_dis of ECC_FORCE_CONST_TIME
WR_DIS.SECURE_BOOT_EN,                           EFUSE_BLK0,  15,   1, [] wr_dis of SECURE_BOOT_EN
WR_DIS.SECURE_BOOT_AGGRESSIVE_REVOKE,            EFUSE_BLK0,  16,   1, [] wr_dis of SECURE_BOOT_AGGRESSIVE_REVOKE
WR_DIS.FLASH_TPUW,                               EFUSE_BLK0,  18,   1, [] wr_dis of FLASH_TPUW
WR_DIS.DIS_DOWNLOAD_MODE,                        EFUSE_BLK0,  18,   1, [] wr_dis of DIS_DOWNLOAD_MODE
WR_DIS.DIS_DIRECT_BOOT,                          EFUSE_BLK0,  18,   1, [] wr_dis of DIS_DIRECT_BOOT
WR_DIS.DIS_USB_SERIAL_JTAG_ROM_PRINT,            EFUSE_BLK0,  18,   1, [] wr_dis of DIS_USB_SERIAL_JTAG_ROM_PRINT
WR_DIS.DIS_USB_SERIAL_JTAG_DOWNLOAD_MODE,        EFUSE_BLK0,  18,   1, [] wr_dis of DIS_USB_SERIAL_JTAG_DOWNLOAD_MODE
WR_DIS.ENABLE_SECURITY_DOWNLOAD,                 EFUSE_BLK0,  18,   1, [] wr_dis of ENABLE_SECURITY_DOWNLOAD
WR_DIS.UART_PRINT_CONTROL,                       EFUSE_BLK0,  18,   1, [] wr_dis of UART_PRINT_CONTROL
WR_DIS.FORCE_SEND_RESUME,                        EFUSE_BLK0,  18,   1, [] wr_dis of FORCE_SEND_RESUME
WR_DIS.SECURE_VERSION,                           EFUSE_BLK0,  18,   1, [] wr_dis of SECURE_VERSION
WR_DIS.HUK_GEN_STATE,                            EFUSE_BLK0,  19,   1, [] wr_dis of HUK_GEN_STATE
WR_DIS.BLK1,                                     EFUSE_BLK0,  20,   1, [] wr_dis of BLOCK1
WR_DIS.MAC,                                      EFUSE_BLK0,  20,   1, [WR_DIS.MAC_FACTORY] wr_dis of MAC
WR_DIS.MAC_EXT,                                  EFUSE_BLK0,  20,   1, [] wr_dis of MAC_EXT
WR_DIS.PVT_LIMIT,                                EFUSE_BLK0,  20,   1, [] wr_dis of PVT_LIMIT
WR_DIS.PVT_CELL_SELECT,                          EFUSE_BLK0,  20,   1, [] wr_dis of PVT_CELL_SELECT
WR_DIS.PVT_PUMP_LIMIT,                           EFUSE_BLK0,  20,   1, [] wr_dis of PVT_PUMP_LIMIT
WR_DIS.PUMP_DRV,                                 EFUSE_BLK0,  20,   1, [] wr_dis of PUMP_DRV
WR_DIS.WDT_DELAY_SEL,                            EFUSE_BLK0,  20,   1, [] wr_dis of WDT_DELAY_SEL
WR_DIS.HYS_EN_PAD,                               EFUSE_BLK0,  20,   1, [] wr_dis of HYS_EN_PAD
WR_DIS.PVT_GLITCH_CHARGE_RESET,                  EFUSE_BLK0,  20,   1, [] wr_dis of PVT_GLITCH_CHARGE_RESET
WR_DIS.VDD_SPI_LDO_ADJUST,                       EFUSE_BLK0,  20,   1, [] wr_dis of VDD_SPI_LDO_ADJUST
WR_DIS.FLASH_LDO_POWER_SEL,                      EFUSE_BLK0,  20,   1, [] wr_dis of FLASH_LDO_POWER_SEL
WR_DIS.SYS_DATA_PART1,                           EFUSE_BLK0,  21,   1, [] wr_dis of BLOCK2
WR_DIS.BLOCK_USR_DATA,                           EFUSE_BLK0,  22,   1, [WR_DIS.USER_DATA] wr_dis of BLOCK_USR_DATA
WR_DIS.CUSTOM_MAC,                               EFUSE_BLK0,  22,   1, [WR_DIS.MAC_CUSTOM WR_DIS.USER_DATA_MAC_CUSTOM] wr_dis of CUSTOM_MAC
WR_DIS.BLOCK_KEY0,                               EFUSE_BLK0,  23,   1, [WR_DIS.KEY0] wr_dis of BLOCK_KEY0
WR_DIS.BLOCK_KEY1,                               EFUSE_BLK0,  24,   1, [WR_DIS.KEY1] wr_dis of BLOCK_KEY1
WR_DIS.BLOCK_KEY2,                               EFUSE_BLK0,  25,   1, [WR_DIS.KEY2] wr_dis of BLOCK_KEY2
WR_DIS.BLOCK_KEY3,                               EFUSE_BLK0,  26,   1, [WR_DIS.KEY3] wr_dis of BLOCK_KEY3
WR_DIS.BLOCK_KEY4,                               EFUSE_BLK0,  27,   1, [WR_DIS.KEY4] wr_dis of BLOCK_KEY4
WR_DIS.BLOCK_KEY5,                               EFUSE_BLK0,  28,   1, [WR_DIS.KEY5] wr_dis of BLOCK_KEY5
WR_DIS.BLOCK_SYS_DATA2,                          EFUSE_BLK0,  29,   1, [WR_DIS.SYS_DATA_PART2] wr_dis of BLOCK_SYS_DATA2
WR_DIS.USB_EXCHG_PINS,                           EFUSE_BLK0,  30,   1, [] wr_dis of USB_EXCHG_PINS
WR_DIS.SOFT_DIS_JTAG,                            EFUSE_BLK0,  31,   1, [] wr_dis of SOFT_DIS_JTAG
RD_DIS,                                          EFUSE_BLK0,  32,   7, [] Disable reading from BlOCK4-10
RD_DIS.BLOCK_KEY0,                               EFUSE_BLK0,  32,   1, [RD_DIS.KEY0] rd_dis of BLOCK_KEY0
RD_DIS.BLOCK_KEY1,                               EFUSE_BLK0,  33,   1, [RD_DIS.KEY1] rd_dis of BLOCK_KEY1
RD_DIS.BLOCK_KEY2,                               EFUSE_BLK0,  34,   1, [RD_DIS.KEY2] rd_dis of BLOCK_KEY2
RD_DIS.BLOCK_KEY3,                               EFUSE_BLK0,  35,   1, [RD_DIS.KEY3] rd_dis of BLOCK_KEY3
RD_DIS.BLOCK_KEY4,                               EFUSE_BLK0,  36,   1, [RD_DIS.KEY4] rd_dis of BLOCK_KEY4
RD_DIS.BLOCK_KEY5,                               EFUSE_BLK0,  37,   1, [RD_DIS.KEY5] rd_dis of BLOCK_KEY5
RD_DIS.BLOCK_SYS_DATA2,                          EFUSE_BLK0,  38,   1, [RD_DIS.SYS_DATA_PART2] rd_dis of BLOCK_SYS_DATA2
DIS_USB_JTAG,                                    EFUSE_BLK0,  39,   1, [] Represents whether the function of usb switch to jtag is disabled or enabled. 1: disabled 0: enabled
DIS_FORCE_DOWNLOAD,                              EFUSE_BLK0,  41,   1, [] Represents whether the function that forces chip into download mode is disabled or enabled. 1: disabled 0: enabled
SPI_DOWNLOAD_MSPI_DIS,                           EFUSE_BLK0,  42,   1, [] Represents whether SPI0 controller during boot_mode_download is disabled or enabled. 1: disabled 0: enabled
DIS_TWAI,                                        EFUSE_BLK0,  43,   1, [] Represents whether TWAI function is disabled or enabled. 1: disabled 0: enabled
JTAG_SEL_ENABLE,                                 EFUSE_BLK0,  44,   1, [] Represents whether the selection between usb_to_jtag and pad_to_jtag through strapping gpio15 when both EFUSE_DIS_PAD_JTAG and EFUSE_DIS_USB_JTAG are equal to 0 is enabled or disabled. 1: enabled 0: disabled
DIS_PAD_JTAG,                                    EFUSE_BLK0,  45,   1, [] Represents whether JTAG is disabled in the hard way(permanently). 1: disabled 0: enabled
DIS_DOWNLOAD_MANUAL_ENCRYPT,                     EFUSE_BLK0,  46,   1, [] Represents whether flash encrypt function is disabled or enabled(except in SPI boot mode). 1: disabled 0: enabled
PVT_GLITCH_EN,                                   EFUSE_BLK0,  50,   1, [] Represents whether to enable PVT power glitch monitor function.1:Enable. 0:Disable
PVT_GLITCH_MODE,                                 EFUSE_BLK0,  52,   2, [] Use to configure glitch mode
DIS_CORE1,                                       EFUSE_BLK0,  54,   1, [] Represents whether the CPU-Core1 is disabled.  1: Disabled.  0: Not disable
SPI_BOOT_CRYPT_CNT,                              EFUSE_BLK0,  55,   3, [] Enables flash encryption when 1 or 3 bits are set and disables otherwise {0: "Disable"; 1: "Enable"; 3: "Disable"; 7: "Enable"}
SECURE_BOOT_KEY_REVOKE0,                         EFUSE_BLK0,  58,   1, [] Revoke 1st secure boot key
SECURE_BOOT_KEY_REVOKE1,                         EFUSE_BLK0,  59,   1, [] Revoke 2nd secure boot key
SECURE_BOOT_KEY_REVOKE2,                         EFUSE_BLK0,  60,   1, [] Revoke 3rd secure boot key
KEY_PURPOSE_0,                                   EFUSE_BLK0,  64,   5, [KEY0_PURPOSE] Represents the purpose of Key0
KEY_PURPOSE_1,                                   EFUSE_BLK0,  69,   5, [KEY1_PURPOSE] Represents the purpose of Key1
KEY_PURPOSE_2,                                   EFUSE_BLK0,  74,   5, [KEY2_PURPOSE] Represents the purpose of Key2
KEY_PURPOSE_3,                                   EFUSE_BLK0,  79,   5, [KEY3_PURPOSE] Represents the purpose of Key3
KEY_PURPOSE_4,                                   EFUSE_BLK0,  84,   5, [KEY4_PURPOSE] Represents the purpose of Key4
KEY_PURPOSE_5,                                   EFUSE_BLK0,  89,   5, [KEY5_PURPOSE] Represents the purpose of Key5
SEC_DPA_LEVEL,                                   EFUSE_BLK0,  94,   2, [] Represents the spa secure level by configuring the clock random divide mode
XTS_DPA_PSEUDO_LEVEL,                            EFUSE_BLK0,  96,   2, [] Represents the pseudo round level of xts-aes anti-dpa attack. 3: High. 2: Moderate 1. Low 0: Disabled
XTS_DPA_CLK_ENABLE,                              EFUSE_BLK0,  98,   1, [] Represents whether xts-aes anti-dpa attack clock is enabled. 1. Enable. 0: Disable.
ECC_FORCE_CONST_TIME,                            EFUSE_BLK0,  99,   1, [] Represents whether to force ecc to use const-time calculation mode.  1: Enable.  0: Disable
ECDSA_P384_ENABLE,                               EFUSE_BLK0, 100,   1, [] Represents if the chip supports ECDSA P384
SECURE_BOOT_EN,                                  EFUSE_BLK0, 101,   1, [] Represents whether secure boot is enabled or disabled. 1: enabled 0: disabled
SECURE_BOOT_AGGRESSIVE_REVOKE,                   EFUSE_BLK0, 102,   1, [] Represents whether revoking aggressive secure boot is enabled or disabled. 1: enabled. 0: disabled
KM_DISABLE_DEPLOY_MODE,                          EFUSE_BLK0, 103,   5, [] Represents whether the new key deployment of key manager is disabled. Bit0: Represents whether the new ECDSA key deployment is disabled0: Enabled1: DisabledBit1: Represents whether the new XTS-AES (flash and PSRAM) key deployment is disabled0: Enabled1: DisabledBit2: Represents whether the new HMAC key deployment is disabled0: Enabled1: DisabledBit3: Represents whether the new DS key deployment is disabled0: Enabled1: Disabled
KM_RND_SWITCH_CYCLE,                             EFUSE_BLK0, 108,   2, [] Represents the cycle at which the Key Manager switches random numbers.0: Controlled by the \hyperref[fielddesc:KEYMNGRNDSWITCHCYCLE]{KEYMNG\_RND\_SWITCH\_CYCLE} register. For more information; please refer to Chapter \ref{mod:keymng} \textit{\nameref{mod:keymng}}1: 8 Key Manager clock cycles2: 16 Key Manager clock cycles3: 32 Key Manager clock cycles
KM_DEPLOY_ONLY_ONCE,                             EFUSE_BLK0, 110,   5, [] Represents whether the corresponding key can be deployed only once.Bit0: Represents whether the ECDSA key can be deployed only once0: The key can be deployed multiple times1: The key can be deployed only onceBit1: Represents whether the XTS-AES (flash and PSRAM) key can be deployed only once0: The key can be deployed multiple times1: The key can be deployed only onceBit2: Represents whether the HMAC key can be deployed only once0: The key can be deployed multiple times1: The key can be deployed only onceBit3: Represents whether the DS key can be deployed only once0: The key can be deployed multiple times1: The key can be deployed only once
FORCE_USE_KEY_MANAGER_KEY,                       EFUSE_BLK0, 115,   5, [] Represents whether the corresponding key must come from Key Manager. Bit0: Represents whether the ECDSA key must come from Key Manager.0: The key does not need to come from Key Manager1: The key must come from Key ManagerBit1: Represents whether the XTS-AES (flash and PSRAM) key must come from Key Manager.0: The key does not need to come from Key Manager1: The key must come from Key ManagerBit2: Represents whether the HMAC key must come from Key Manager.0: The key does not need to come from Key Manager1: The key must come from Key ManagerBit3: Represents whether the DS key must come from Key Manager.0: The key does not need to come from Key Manager1: The key must come from Key Manager
FORCE_DISABLE_SW_INIT_KEY,                       EFUSE_BLK0, 120,   1, [] Represents whether to disable the use of the initialization key written by software and instead force use efuse\_init\_key.0: Enable1: Disable
KM_XTS_KEY_LENGTH_256,                           EFUSE_BLK0, 121,   1, [] Represents which key flash encryption uses.0: XTS-AES-256 key1: XTS-AES-128 key
LOCK_KM_KEY,                                     EFUSE_BLK0, 122,   1, [] Represents whether the keys in the Key Manager are locked after deployment.0: Not locked1: Locked
FLASH_TPUW,                                      EFUSE_BLK0, 123,   3, [] Represents the flash waiting time after power-up; in unit of ms. When the value less than 15; the waiting time is the programmed value. Otherwise; the waiting time is 2 times the programmed value
DIS_DOWNLOAD_MODE,                               EFUSE_BLK0, 127,   1, [] Represents whether Download mode is disabled or enabled. 1: disabled 0: enabled
DIS_DIRECT_BOOT,                                 EFUSE_BLK0, 128,   1, [] Represents whether direct boot mode is disabled or enabled. 1: disabled 0: enabled
DIS_USB_SERIAL_JTAG_ROM_PRINT,                   EFUSE_BLK0, 129,   1, [] Represents whether print from USB-Serial-JTAG is disabled or enabled. 1: disabled 0: enabled
DIS_USB_SERIAL_JTAG_DOWNLOAD_MODE,               EFUSE_BLK0, 130,   1, [] Represents whether the USB-Serial-JTAG download function is disabled or enabled. 1: Disable 0: Enable
ENABLE_SECURITY_DOWNLOAD,                        EFUSE_BLK0, 131,   1, [] Represents whether security download is enabled or disabled. 1: enabled 0: disabled
UART_PRINT_CONTROL,                              EFUSE_BLK0, 132,   2, [] Represents the type of UART printing. 00: force enable printing 01: enable printing when GPIO8 is reset at low level 10: enable printing when GPIO8 is reset at high level 11: force disable printing
FORCE_SEND_RESUME,                               EFUSE_BLK0, 134,   1, [] Represents whether ROM code is forced to send a resume command during SPI boot. 1: forced 0:not forced
SECURE_VERSION,                                  EFUSE_BLK0, 135,  16, [] Represents the version used by ESP-IDF anti-rollback feature
HUK_GEN_STATE,                                   EFUSE_BLK0, 151,   5, [] Represents whether the HUK generate mode is valid.Odd count of bits with a value of 1: InvalidEven count of bits with a value of 1: Valid
FLASH_LDO_EFUSE_SEL,                             EFUSE_BLK0, 156,   1, [] Represents whether to select efuse control flash ldo default voltage.  1 : efuse 0 : strapping
USB_EXCHG_PINS,                                  EFUSE_BLK0, 168,   1, [] Represents whether the D+ and D- pins of USB_SERIAL_JTAG PHY is exchanged. 1: exchanged 0: not exchanged
USB_OTG_FS_EXCHG_PINS,                           EFUSE_BLK0, 169,   1, [] Represents whether the D+ and D- pins of USB_OTG_FS PHY is exchanged. 1: exchanged 0: not exchanged
USB_PHY_SEL,                                     EFUSE_BLK0, 170,   1, [] Represents whether to exchange the USB_SERIAL_JTAG PHY with USB_OTG_FS PHY.  1: exchanged.  0: not exchanged
SOFT_DIS_JTAG,                                   EFUSE_BLK0, 171,   3, [] Represents whether JTAG is disabled in soft way. Odd number: disabled Even number: enabled
IO_LDO_ADJUST,                                   EFUSE_BLK0, 174,   8, [] Represents configuration of IO LDO mode and voltage.
IO_LDO_1P8,                                      EFUSE_BLK0, 182,   1, [] Represents select IO LDO voltage to 1.8V or 3.3V. 1: 1.8V 0: 3.3V
DCDC_CCM_EN,                                     EFUSE_BLK0, 183,   1, [] Represents whether change DCDC to CCM mode
MAC,                                             EFUSE_BLK1,  40,   8, [MAC_FACTORY] MAC address
,                                                EFUSE_BLK1,  32,   8, [MAC_FACTORY] MAC address
,                                                EFUSE_BLK1,  24,   8, [MAC_FACTORY] MAC address
,                                                EFUSE_BLK1,  16,   8, [MAC_FACTORY] MAC address
,                                                EFUSE_BLK1,   8,   8, [MAC_FACTORY] MAC address
,                                                EFUSE_BLK1,   0,   8, [MAC_FACTORY] MAC address
MAC_EXT,                                         EFUSE_BLK1,  56,   8, [] Stores the extended bits of MAC address
,                                                EFUSE_BLK1,  48,   8, [] Stores the extended bits of MAC address
PVT_LIMIT,                                       EFUSE_BLK1,  64,  16, [] Power glitch monitor threthold
PVT_CELL_SELECT,                                 EFUSE_BLK1,  80,   7, [] Power glitch monitor PVT cell select
PVT_PUMP_LIMIT,                                  EFUSE_BLK1,  87,   8, [] Use to configure voltage monitor limit for charge pump
PUMP_DRV,                                        EFUSE_BLK1,  96,   4, [] Use to configure charge pump voltage gain
WDT_DELAY_SEL,                                   EFUSE_BLK1, 100,   2, [] Represents the threshold level of the RTC watchdog STG0 timeout. 0: Original threshold configuration value of STG0 *2 1: Original threshold configuration value of STG0 *4 2: Original threshold configuration value of STG0 *8 3: Original threshold configuration value of STG0 *16
HYS_EN_PAD,                                      EFUSE_BLK1, 102,   1, [] Represents whether the hysteresis function of corresponding PAD is enabled. 1: enabled 0:disabled
PVT_GLITCH_CHARGE_RESET,                         EFUSE_BLK1, 103,   1, [] Represents whether to trigger reset or charge pump when PVT power glitch happened.1:Trigger charge pump. 0:Trigger reset
VDD_SPI_LDO_ADJUST,                              EFUSE_BLK1, 105,   8, [] Represents configuration of FLASH LDO mode and voltage.
FLASH_LDO_POWER_SEL,                             EFUSE_BLK1, 113,   1, [] Represents which flash ldo be select: 1: FLASH LDO 1P2 0 : FLASH LDO 1P8
USER_DATA,                                       EFUSE_BLK3,   0, 256, [BLOCK_USR_DATA] User data
USER_DATA.MAC_CUSTOM,                            EFUSE_BLK3, 200,  48, [MAC_CUSTOM CUSTOM_MAC] Custom MAC
KEY0,                                            EFUSE_BLK4,   0, 256, [BLOCK_KEY0] Key0 or user data
KEY1,                                            EFUSE_BLK5,   0, 256, [BLOCK_KEY1] Key1 or user data
KEY2,                                            EFUSE_BLK6,   0, 256, [BLOCK_KEY2] Key2 or user data
KEY3,                                            EFUSE_BLK7,   0, 256, [BLOCK_KEY3] Key3 or user data
KEY4,                                            EFUSE_BLK8,   0, 256, [BLOCK_KEY4] Key4 or user data
KEY5,                                            EFUSE_BLK9,   0, 256, [BLOCK_KEY5] Key5 or user data
SYS_DATA_PART2,                                  EFUSE_BLK10,   0, 256, [BLOCK_SYS_DATA2] System data part 2 (reserved)
