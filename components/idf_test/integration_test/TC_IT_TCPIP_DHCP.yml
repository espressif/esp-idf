test cases:
- CI ready: 'Yes'
  ID: TCPIP_DHCP_0101
  SDK: |-
    8266_NonOS
    8266_RTOS
    ESP32_IDF
  Test App: SSC
  allow fail: ''
  auto test: 'Yes'
  category: Function
  cmd set:
  - ''
  - - SSC SSC1 dhcp -E -o 1
    - - R SSC1 C +DHCP:STA,OK
  - - SSC SSC1 ip -S -i 0.0.0.0
    - - R SSC1 C +IP
  - - SSC SSC1 sta -C -s <ap_ssid> -p <ap_password>
    - - ''
  - - DELAY 20
    - - P PC_COM C +DELAYDONE
      - P SSC1 NC +JAP:CONNECTED
  - - SSC SSC1 dhcp -S -o 1
    - - R SSC1 C +DHCP:STA,OK
  - - SSC SSC1 ip -Q
    - - R SSC1 C +STAIP:0.0.0.0
  - - SSC SSC1 sta -C -s <ap_ssid> -p <ap_password>
    - - R SSC1 C +JAP:CONNECTED
  - - SSC SSC1 ip -Q
    - - R SSC1 RE "\+STAIP:%%s"%%(<target_ip>)
  execution time: 0.0
  expected result: "1.target1 关闭DHCP OK\n2.target1 设置ip add OK\n3.target1 连接AP fail\n4.target1
    打开DHCP OK\n5.查询到sta ip \n6.target1 连接AP ok\n7.查询到sta ip 为target_ip"
  initial condition: STAM1
  level: Integration
  module: TCPIP
  steps: "1.target1 关闭DHCP OK\n2.target1 设置ip add OK\n3.target1 连接AP fail\n4.target1
    打开DHCP OK\n5.查询到sta ip \n6.target1 连接AP ok\n7.查询到sta ip 为target_ip"
  sub module: DHCP
  summary: dhcp client function test
  test environment: SSC_T1_5
  test point 1: basic function
  test point 2: DHCP client function test
  version: v2 (2016-10-19)
- CI ready: 'Yes'
  ID: TCPIP_DHCP_0103
  SDK: |-
    8266_NonOS
    8266_RTOS
    ESP32_IDF
  Test App: SSC
  allow fail: ''
  auto test: 'Yes'
  category: Function
  cmd set:
  - ''
  - - SSC SSC1 op -S -o 3
    - - R SSC1 C +MODE:OK
  - - SSC SSC1 dhcp -S -o 3
    - - R SSC1 C +DHCP:AP,OK C +DHCP:STA,OK
  - - SSC SSC1 dhcp -Q -o 3
    - - R SSC1 C +DHCP:STA,STARTED C +DHCP:AP,STARTED
  - - SSC SSC1 dhcp -Q -o 1
    - - R SSC1 C +DHCP:STA,STARTED NC +DHCP:AP,STARTED
  - - SSC SSC1 dhcp -Q -o 2
    - - R SSC1 NC +DHCP:STA,STARTED C +DHCP:AP,STARTED
  - - SSC SSC1 dhcp -E -o 3
    - - R SSC1 C +DHCP:AP,OK C +DHCP:STA,OK
  - - SSC SSC1 dhcp -Q -o 3
    - - R SSC1 C +DHCP:STA,STOPPED C +DHCP:AP,STOPPED
  execution time: 0.0
  expected result: |-
    1.OK
    2.OK
    3.STA&AP STARTED
    4.STA STARTED
    5.AP STARTED
    6.OK
    7.STA&AP STOPPED
  initial condition: STAM1
  level: Integration
  module: TCPIP
  steps: |-
    1.target1 设置mode 为sta+softAP mode
    2.target1 打开DHCP 3
    3.target1 查询DHCP 状态
    4.target1 查询sta DHCP 状态
    5.target1 查询softAP DHCP 状态
    6.target1 关闭 DHCP 3
    7.target1 查询 DHCP 状态
  sub module: DHCP
  summary: dhcp status query
  test environment: SSC_T1_4
  test point 1: basic function
  test point 2: DHCP client function test
  version: v1 (2016-8-15)
- CI ready: 'Yes'
  ID: TCPIP_DHCP_0201
  SDK: |-
    8266_NonOS
    8266_RTOS
    ESP32_IDF
  Test App: SSC
  allow fail: ''
  auto test: 'Yes'
  category: Function
  cmd set:
  - ''
  - - SSC SSC1 dhcp -E -o 2
    - - R SSC1 C +DHCP:AP,OK
  - - SSC SSC1 ip -S -o 2 -i <target_ap_ip>
    - - R SSC1 C +IP:OK
  - - SSC SSC1 dhcp -L -s 192.168.4.2 -e 192.168.4.100
    - - R SSC1 C +DHCP:LEASE,OK
  - - SSC SSC1 dhcp -L -s 192.168.4.1 -e 192.168.4.10
    - - R SSC1 C +DHCP:LEASE,ERROR
  - - SSC SSC1 dhcp -L -s 192.168.4.5 -e 192.168.4.2
    - - R SSC1 C +DHCP:LEASE,ERROR
  - - SSC SSC1 dhcp -L -s 192.168.2.2 -e 192.168.2.5
    - - R SSC1 C +DHCP:LEASE,ERROR
  - - SSC SSC1 dhcp -S -o 2
    - - R SSC1 C +DHCP:AP,OK
  execution time: 0.0
  expected result: |-
    1.target1 关闭DHCP 2 OK
    2.target1 设置ip 成功
    3.设置dhcp 地址池 OK
    4.ERROR
    5.ERROR
    6.ERROR
    7.target1 打开DHCP ok
  initial condition: APM1
  level: Integration
  module: TCPIP
  steps: "1.target1 关闭DHCP 2 \n2.target1 设置ip \n3.设置dhcp 地址池\n4.设置dhcp错误的参数\n5.设置dhcp错误的参数\n6.设置dhcp错误的参数\n7.target1
    打开DHCP ok"
  sub module: DHCP
  summary: server dhcp lease test
  test environment: SSC_T1_4
  test point 1: basic function
  test point 2: DHCP server function test
  version: v1 (2016-8-15)
- CI ready: 'Yes'
  ID: TCPIP_DHCP_0202
  SDK: |-
    8266_NonOS
    8266_RTOS
    ESP32_IDF
  Test App: SSC
  allow fail: ''
  auto test: 'Yes'
  category: Function
  cmd set:
  - ''
  - - SSC SSC1 ap -S -s <random_string> -p <random_string> -t 4
    - - R SSC1 C +SAP:OK
  - - SSC SSC1 dhcp -E -o 2
    - - R SSC1 C +DHCP:AP,OK
  - - SSC SSC1 dhcp -L -s 192.168.4.2 -e 192.168.4.100
    - - R SSC1 C +DHCP:LEASE,OK
  - - SSC SSC1 dhcp -S -o 2
    - - R SSC1 C +DHCP:AP,OK
  - - LOOP 3 4 "['01','02','03']" "[2,3,4]"
    - - ''
  - - SSC SSC2 sta -D
    - - R SSC2 C +QAP:OK
  - - SSC SSC2 mac -S -o 1 -m 10:22:33:44:55:{%s}
    - - R SSC2 C +MAC:STA,OK
  - - SSC SSC2 sta -C -s <random_string> -p <random_string>
    - - R SSC2 C +JAP:CONNECTED
  - - SSC SSC2 ip -Q -o 1
    - - R SSC2 C +STAIP:192.168.4.{%s}
  execution time: 0.0
  expected result: |-
    1. succeed
    2. succeed
    3,4: get IP from dhcp pool with correct sequence
  initial condition: T2_1
  level: Integration
  module: TCPIP
  steps: |-
    1. config softap to a random ssid
    2. config DHCP Server on Target1
    3. target change mac, connect to Target1
    4. Loop step3
  sub module: DHCP
  summary: dhcp server ip pool
  test environment: SSC_T2_5
  test point 1: basic function
  test point 2: DHCP server function test
  version: v1 (2016-8-15)
- CI ready: 'Yes'
  ID: TCPIP_DHCP_0203
  SDK: |-
    8266_NonOS
    8266_RTOS
    ESP32_IDF
  Test App: SSC
  allow fail: ''
  auto test: 'Yes'
  category: Function
  cmd set:
  - ''
  - - SSC SSC1 ap -S -s <random_string> -p <random_string> -t 4
    - - R SSC1 C +SAP:OK
  - - SSC SSC1 dhcp -E -o 2
    - - R SSC1 C +DHCP:AP,OK
  - - SSC SSC1 dhcp -L -s 192.168.4.2 -e 192.168.4.3
    - - R SSC1 C +DHCP:LEASE,OK
  - - SSC SSC1 dhcp -S -o 2
    - - R SSC1 C +DHCP:AP,OK
  - - LOOP 2 4 "['01','02']" "[2,3]"
    - - ''
  - - SSC SSC2 sta -D
    - - R SSC2 C +QAP:OK
  - - SSC SSC2 mac -S -o 1 -m 10:22:33:44:55:{%s}
    - - R SSC2 C +MAC:STA,OK
  - - SSC SSC2 sta -C -s <random_string> -p <random_string>
    - - R SSC2 C +JAP:CONNECTED
  - - SSC SSC2 ip -Q -o 1
    - - R SSC2 C +STAIP:192.168.4.{%s}
  - - SSC SSC2 mac -S -o 1 -m 10:22:33:44:55:66
    - - R SSC2 C +MAC:STA,OK
  - - DELAY 20
    - - ''
  - - SSC SSC2 ip -Q -o 1
    - - R SSC2 C +STAIP:0.0.0.0
  execution time: 0.0
  expected result: |-
    1. succeed
    2. succeed
    3. succeed
    4.1 succeed
    4.2 failed
  initial condition: T2_1
  level: Integration
  module: TCPIP
  steps: |-
    1. config softap to a random ssid
    2. config DHCP Server on Target1(.4.2 - .4.3)
    3. target change mac, connect to Target1
    4. Loop step3 twice
  sub module: DHCP
  summary: dhcp server ip pool empty
  test environment: SSC_T2_5
  test point 1: basic function
  test point 2: DHCP server function test
  version: v1 (2016-8-15)
- CI ready: 'Yes'
  ID: TCPIP_DHCP_0204
  SDK: |-
    8266_NonOS
    8266_RTOS
    ESP32_IDF
  Test App: SSC
  allow fail: ''
  auto test: 'Yes'
  category: Function
  cmd set:
  - ''
  - - SSC SSC1 ap -S -s <random_string> -p <random_string> -t 4
    - - R SSC1 C +SAP:OK
  - - SSC SSC1 dhcp -E -o 2
    - - R SSC1 C +DHCP:AP,OK
  - - SSC SSC1 dhcp -L -s 192.168.4.2 -e 192.168.4.3 -t 1
    - - R SSC1 C +DHCP:LEASE,OK
  - - SSC SSC1 dhcp -S -o 2
    - - R SSC1 C +DHCP:AP,OK
  - - SSC SSC2 sta -C -s <random_string> -p <random_string>
    - - R SSC2 C +JAP:CONNECTED
  - - SSC SSC2 ip -Q -o 1
    - - R SSC2 C +STAIP:192.168.4.2
  - - DELAY 90
    - - ''
  - - SSC SSC2 ip -Q -o 1
    - - R SSC2 C +STAIP:192.168.4.2
  - - SSC SSC2 sta -D
    - - R SSC2 C +JAP:DISCONNECTED
  - - DELAY 60
    - - ''
  - - SSC SSC2 mac -S -o 1 -m 10:22:33:44:55:66
    - - R SSC2 C +MAC:STA,OK
  - - SSC SSC2 sta -C -s <random_string> -p <random_string>
    - - R SSC2 C +JAP:CONNECTED
  - - SSC SSC2 ip -Q -o 1
    - - R SSC2 C +STAIP:192.168.4.2
  execution time: 0.0
  expected result: |-
    1. succeed
    2. succeed
    3. get IP 192.168.4.2
    5. succeed
    6. succeed
    8. get IP 192.168.4.2
  initial condition: T2_1
  level: Integration
  module: TCPIP
  steps: |-
    1. config softap to a random ssid
    2. config DHCP timeout as 1 minute
    3. target2 connect to target1
    4. wait 90 seconds
    5. check if target2 IP is same
    6. target2 disconnect
    7. wait 60s
    8. target2 change mac and connect to target1
  sub module: DHCP
  summary: dhcp server timeout test
  test environment: SSC_T2_5
  test point 1: basic function
  test point 2: DHCP server function test
  version: v1 (2016-8-15)
- CI ready: 'Yes'
  ID: TCPIP_DHCP_0205
  SDK: |-
    8266_NonOS
    8266_RTOS
    ESP32_IDF
  Test App: SSC
  allow fail: ''
  auto test: 'Yes'
  category: Function
  cmd set:
  - ''
  - - SSC SSC1 ap -S -s <random_string> -p <random_string> -t 4
    - - R SSC1 C +SAP:OK
  - - SSC SSC2 sta -C -s <random_string> -p <random_string>
    - - R SSC2 C +JAP:CONNECTED
  - - SSC SSC1 dhcp -E -o 2
    - - R SSC1 C +DHCP:AP,OK
  - - SSC SSC1 dhcp -L -s 192.168.4.2 -e 192.168.4.3 -t 1
    - - P SSC1 C +DHCP:LEASE,OK
  - - SSC SSC1 dhcp -S -o 2
    - - P SSC1 C +DHCP:AP,OK
      - P SSC2 C +JAP:DISCONNECTED
  execution time: 0.0
  expected result: |-
    1. succeed
    2. succeed
    3. target2 wifi disconnected
  initial condition: T2_1
  level: Integration
  module: TCPIP
  steps: |-
    1. config softap to a random ssid
    2. target2 connect to target1
    3. disable DHCP server, do config and enable
  sub module: DHCP
  summary: disconnect STA if config dhcp server
  test environment: SSC_T2_5
  test point 1: basic function
  test point 2: DHCP server function test
  version: v1 (2016-8-15)
- CI ready: 'Yes'
  ID: TCPIP_DHCP_0206
  SDK: |-
    8266_NonOS
    8266_RTOS
    ESP32_IDF
  Test App: SSC
  allow fail: ''
  auto test: 'Yes'
  category: Function
  cmd set:
  - ''
  - - SSC SSC1 ap -S -s <random_string> -p <random_string> -t 4
    - - R SSC1 C +SAP:OK
  - - SSC SSC1 dhcp -E -o 2
    - - R SSC1 C +DHCP:AP,OK
  - - SSC SSC1 dhcp -L -s 192.168.4.2 -e 192.168.4.100
    - - R SSC1 C +DHCP:LEASE,OK
  - - SSC SSC1 dhcp -S -o 2
    - - R SSC1 C +DHCP:AP,OK
  - - LOOP 4 4 "['01','02','03','01']" "[2,3,4,2]"
    - - ''
  - - SSC SSC2 sta -D
    - - R SSC2 C +QAP:OK
  - - SSC SSC2 mac -S -o 1 -m 10:22:33:44:55:{%s}
    - - R SSC2 C +MAC:STA,OK
  - - SSC SSC2 sta -C -s <random_string> -p <random_string>
    - - R SSC2 C +JAP:CONNECTED
  - - SSC SSC2 ip -Q -o 1
    - - R SSC2 C +STAIP:192.168.4.{%s}
  execution time: 0.0
  expected result: |-
    1. succeed
    2. succeed
    4. get IP 192.168.4.2 - 192.168.4.4
    5. get IP 192.168.4.2
  initial condition: T2_1
  level: Integration
  module: TCPIP
  steps: |-
    1. config softap to a random ssid
    2. disable DHCP server, do config and enable
    3. target2 change mac, connect to softap, disconnect
    4. Loop step3 twice
    5. change to first mac, connect to softap
  sub module: DHCP
  summary: dhcp server assign same IP to same MAC when it's not released
  test environment: SSC_T2_5
  test point 1: basic function
  test point 2: DHCP server function test
  version: v1 (2016-8-15)
- CI ready: 'Yes'
  ID: TCPIP_DHCP_0207
  SDK: |-
    8266_NonOS
    8266_RTOS
  Test App: SSC
  allow fail: ''
  auto test: 'Yes'
  category: Function
  cmd set:
  - ''
  - - SSC SSC1 ap -S -s <random_string> -p <random_string> -t 4
    - - R SSC1 C +SAP:OK
  - - SSC SSC1 dhcp -E -o 2
    - - R SSC1 C +DHCP:AP,OK
  - - SSC SSC1 dhcp -L -s 192.168.4.2 -e 192.168.4.100
    - - R SSC1 C +DHCP:LEASE,OK
  - - SSC SSC1 dhcp -S -o 2
    - - R SSC1 C +DHCP:AP,OK
  - - WIFI <pc_wifi_nic> CONN <random_string> <random_string> 192.168.4.2
    - - R PC_COM NC ERROR C +WIFICONN:OK
  - - SSC SSC2 sta -C -s <random_string> -p <random_string>
    - - R SSC2 C +JAP:CONNECTED
  - - WIFI <pc_wifi_nic> DISCONN2
    - - R PC_COM NC ERROR C +WIFIDISCONN:OK
  - - SSC SSC2 sta -D
    - - R SSC2 C +QAP:OK
  - - SSC SSC2 mac -S -o 1 -m 10:22:33:44:55:66
    - - R SSC2 C +MAC:STA,OK
  - - SSC SSC2 sta -C -s <random_string> -p <random_string>
    - - R SSC2 C +JAP:CONNECTED
  - - SSC SSC2 ip -Q -o 1
    - - R SSC2 C +STAIP:192.168.4.2
  execution time: 0.0
  expected result: |-
    1. succeed
    2. succeed
    3. get IP 192.168.4.2
    4. succeed
    5. succeed
    6. get IP 192.168.4.2
  initial condition: T2_1
  level: Integration
  module: TCPIP
  steps: |-
    1. config softap to a random ssid
    2. disable DHCP server, do config and enable
    3. PC WIFI NIC connect to target1 softap
    4. target2 connect to target1 softap and disnnect
    5. PC release IP and disconnected
    6. target2 change mac and connect to target1
  sub module: DHCP
  summary: dhcp server prefer assign released IP to new client
  test environment: SSC_T2_2
  test point 1: basic function
  test point 2: DHCP server function test
  version: v1 (2016-8-15)
- CI ready: 'Yes'
  ID: TCPIP_DHCP_0207
  SDK: ESP32_IDF
  Test App: SSC
  allow fail: '1/2'
  auto test: 'Yes'
  category: Function
  cmd set:
  - ''
  - - SSC SSC1 ap -S -s <random_string> -p <random_string> -t 4
    - - R SSC1 C +SAP:OK
  - - SSC SSC1 dhcp -E -o 2
    - - R SSC1 C +DHCP:AP,OK
  - - SSC SSC1 dhcp -L -s 192.168.4.2 -e 192.168.4.100
    - - R SSC1 C +DHCP:LEASE,OK
  - - SSC SSC1 dhcp -S -o 2
    - - R SSC1 C +DHCP:AP,OK
  - - WIFI <pc_wifi_nic> CONN <random_string> <random_string> 192.168.4.2
    - - R PC_COM NC ERROR C +WIFICONN:OK
  - - SSC SSC2 sta -C -s <random_string> -p <random_string>
    - - R SSC2 C +JAP:CONNECTED
  - - WIFI <pc_wifi_nic> DISCONN2
    - - R PC_COM NC ERROR C +WIFIDISCONN:OK
  - - SSC SSC2 sta -D
    - - R SSC2 C +QAP:OK
  - - SSC SSC2 mac -S -o 1 -m 10:22:33:44:55:66
    - - R SSC2 C +MAC:STA,OK
  - - SSC SSC1 dhcp -E -o 2
    - - R SSC1 C +DHCP:AP,OK
  - - SSC SSC1 dhcp -S -o 2
    - - R SSC1 C +DHCP:AP,OK
  - - SSC SSC2 sta -C -s <random_string> -p <random_string>
    - - R SSC2 C +JAP:CONNECTED
  - - SSC SSC2 ip -Q -o 1
    - - R SSC2 C +STAIP:192.168.4.2
  execution time: 0.0
  expected result: |-
    1. succeed
    2. succeed
    3. get IP 192.168.4.2
    4. succeed
    5. succeed
    6. succeed
    7. get IP 192.168.4.2
  initial condition: T2_1
  level: Integration
  module: TCPIP
  steps: |-
    1. config softap to a random ssid
    2. disable DHCP server, do config and enable
    3. PC WIFI NIC connect to target1 softap
    4. target2 connect to target1 softap and disnnect
    5. PC release IP and disconnected
    6. disable DHCP server and enable
    7. target2 change mac and connect to target1
  sub module: DHCP
  summary: dhcp server prefer assign released IP to new client
  test environment: SSC_T2_2
  test point 1: basic function
  test point 2: DHCP server function test
  version: v1 (2016-8-15)
- CI ready: 'Yes'
  ID: TCPIP_DHCP_0208
  SDK: |-
    8266_NonOS
    8266_RTOS
  Test App: SSC
  allow fail: ''
  auto test: 'Yes'
  category: Function
  cmd set:
  - ''
  - - SSC SSC1 ap -S -s <random_string> -p <random_string> -t 4
    - - R SSC1 C +SAP:OK
  - - SSC SSC2 sta -C -s <random_string> -p <random_string>
    - - R SSC2 C +JAP:CONNECTED
  - - SSC SSC1 dhcp -E -o 2
    - - R SSC1 C +DHCP:AP,OK
  - - SSC SSC1 dhcp -L -s 192.168.4.2 -e 192.168.4.100
    - - R SSC1 C +DHCP:LEASE,OK
  - - SSC SSC1 dhcp -S -o 2
    - - P SSC1 C +DHCP:AP,OK
      - P SSC2 C +JAP:DISCONNECTED
  - - SSC SSC2 sta -D
    - - R SSC2 C +JAP:DISCONNECTED
  - - SSC SSC1 dhcp -S -o 2
    - - R SSC1 C +DHCP:AP,OK
  - - WIFI <pc_wifi_nic> CONN <random_string> <random_string> 192.168.4.2
    - - R PC_COM NC ERROR C +WIFICONN:OK
  - - SSC SSC1 ap -L
    - - R SSC1 C 192.168.4.2 P <pc_wifi_nic_mac>
  execution time: 0.0
  expected result: |-
    1. succeed
    2. succeed
    3. succeed
    4. get IP 192.168.4.2
    5. can only find target2 with IP 192.168.4.2
  initial condition: T2_1
  level: Integration
  module: TCPIP
  steps: |-
    1. config softap to a random ssid
    2. target2 connect to target1 softap
    3. disable DHCP server, do config and enable
    4. PC NIC connect to target1 softap
    5. softap list connected station
  sub module: DHCP
  summary: dhcp server reconfig and new client able to get first IP in pool
  test environment: SSC_T2_2
  test point 1: basic function
  test point 2: DHCP server function test
  version: v1 (2016-8-15)
- CI ready: 'Yes'
  ID: TCPIP_DHCP_0208
  SDK: ESP32_IDF
  Test App: SSC
  allow fail: '2/3'
  auto test: 'Yes'
  category: Function
  cmd set:
  - ''
  - - SSC SSC1 ap -S -s <random_string> -p <random_string> -t 4
    - - R SSC1 C +SAP:OK
  - - SSC SSC2 sta -C -s <random_string> -p <random_string>
    - - R SSC2 C +JAP:CONNECTED
  - - SSC SSC1 dhcp -E -o 2
    - - R SSC1 C +DHCP:AP,OK
  - - SSC SSC1 dhcp -L -s 192.168.4.2 -e 192.168.4.100
    - - R SSC1 C +DHCP:LEASE,OK
  - - SSC SSC1 dhcp -S -o 2
    - - P SSC1 C +DHCP:AP,OK
      - P SSC2 C +JAP:DISCONNECTED
  - - SSC SSC2 sta -D
    - - R SSC2 C OK
  - - SSC SSC1 dhcp -E -o 2
    - - R SSC1 C +DHCP:AP,OK
  - - SSC SSC1 dhcp -S -o 2
    - - R SSC1 C +DHCP:AP,OK
  - - WIFI <pc_wifi_nic> CONN <random_string> <random_string> 192.168.4.2
    - - R PC_COM NC ERROR C +WIFICONN:OK
  - - SSC SSC1 ap -L
    - - R SSC1 C 192.168.4.2 P <pc_wifi_nic_mac>
  execution time: 0.0
  expected result: |-
    1. succeed
    2. succeed
    3. succeed
    4. succeed
    5. succeed
    6. succeed
    7. can only find target2 with IP 192.168.4.2
  initial condition: T2_1
  level: Integration
  module: TCPIP
  steps: |-
    1. config softap to a random ssid
    2. target2 connect to target1 softap
    3. disable DHCP server, do config and enable
    4. target2 disconnect
    5. disable DHCP server and enable
    6. PC NIC connect to target1 softap
    7. softap list connected station
  sub module: DHCP
  summary: dhcp server reconfig and new client able to get first IP in pool
  test environment: SSC_T2_2
  test point 1: basic function
  test point 2: DHCP server function test
  version: v1 (2016-8-15)
- CI ready: 'Yes'
  ID: TCPIP_DHCP_0209
  SDK: |-
    8266_NonOS
    8266_RTOS
    ESP32_IDF
  Test App: SSC
  allow fail: '2/3'
  auto test: 'Yes'
  category: Function
  cmd set:
  - ''
  - - SSC SSC1 ap -S -s <random_string> -p <random_string> -t 4
    - - R SSC1 C +SAP:OK
  - - SSC SSC2 sta -C -s <random_string> -p <random_string>
    - - R SSC2 C +JAP:CONNECTED
  - - SSC SSC1 dhcp -E -o 2
    - - R SSC1 C +DHCP:AP,OK
  - - SSC SSC1 dhcp -L -s 192.168.4.2 -e 192.168.4.100
    - - R SSC1 C +DHCP:LEASE,OK
  - - SSC SSC1 dhcp -S -o 2
    - - R SSC1 C +DHCP:AP,OK
  - - WIFI <pc_wifi_nic> CONN <random_string> <random_string> 192.168.4.2
    - - R PC_COM NC ERROR C +WIFICONN:OK
  - - DELAY 20
    - - ''
  - - SSC SSC1 ap -L
    - - R SSC1 C 192.168.4.2 C 192.168.4.3 P <pc_wifi_nic_mac> P <target2_mac>
  execution time: 0.0
  expected result: |-
    1. succeed
    2. succeed
    3. succeed
    4. succeed
    5. find target2 and PC
  initial condition: T2_1
  level: Integration
  module: TCPIP
  steps: |-
    1. config softap to a random ssid
    2. target2 connect to target1 softap
    3. disable DHCP server, do config and enable
    4. PC NIC connect to target1 softap
    5. softap list connected station
  sub module: DHCP
  summary: dhcp server reconfig, old client and new client able to get IP
  test environment: SSC_T2_2
  test point 1: basic function
  test point 2: DHCP server function test
  version: v1 (2016-8-15)
- CI ready: 'Yes'
  ID: TCPIP_DHCP_0210
  SDK: |-
    8266_NonOS
    8266_RTOS
    ESP32_IDF
  Test App: SSC
  allow fail: '1/2'
  auto test: 'Yes'
  category: Function
  cmd set:
  - ''
  - - SSC SSC1 ap -S -s <random_string> -p <random_string> -t 4
    - - R SSC1 C +SAP:OK
  - - SSC SSC1 dhcp -E -o 2
    - - R SSC1 C +DHCP:AP,OK
  - - SSC SSC1 dhcp -L -s 192.168.4.2 -e 192.168.4.100
    - - R SSC1 C +DHCP:LEASE,OK
  - - SSC SSC1 dhcp -S -o 2
    - - R SSC1 C +DHCP:AP,OK
  - - SSC SSC2 sta -C -s <random_string> -p <random_string>
    - - R SSC2 C +JAP:CONNECTED
  - - WIFI <pc_wifi_nic> CONN2 <random_string> <random_string> 192.168.4.2
    - - R PC_COM NC ERROR C +WIFICONN:OK
  - - SSC SSC1 ap -L
    - - R SSC1 C 192.168.4.2 C 192.168.4.3 P <pc_wifi_nic_mac> P <target2_mac>
  execution time: 0.0
  expected result: |-
    1. succeed
    2. succeed
    3. succeed
    4. succeed
    5. find target2 and PC
  initial condition: T2_1
  level: Integration
  module: TCPIP
  steps: |-
    1. config softap to a random ssid
    2. target2 connect to target1 softap
    3. disable DHCP server, do config and enable
    4. PC NIC connect to target1 softap try to renew IP 192.168.4.2
    5. softap list connected station
  sub module: DHCP
  summary: dhcp server reconfig, old client able to get IP (discover with requested
    IP)
  test environment: SSC_T2_2
  test point 1: basic function
  test point 2: DHCP server function test
  version: v1 (2016-8-15)
- CI ready: 'Yes'
  ID: TCPIP_DHCP_0211
  SDK: |-
    8266_NonOS
    8266_RTOS
    ESP32_IDF
  Test App: SSC
  allow fail: '1/2'
  auto test: 'Yes'
  category: Function
  cmd set:
  - ''
  - - SSC SSC1 ap -S -s <random_string> -p <random_string> -t 4
    - - R SSC1 C +SAP:OK
  - - WIFI <pc_wifi_nic> CONN <random_string> <random_string> 192.168.4.2
    - - R PC_COM NC ERROR C +WIFICONN:OK
  - - SSC SSC1 dhcp -E -o 2
    - - R SSC1 C +DHCP:AP,OK
  - - SSC SSC1 dhcp -L -s 192.168.4.2 -e 192.168.4.100
    - - R SSC1 C +DHCP:LEASE,OK
  - - SSC SSC1 dhcp -S -o 2
    - - R SSC1 C +DHCP:AP,OK
  - - WIFI <pc_wifi_nic> CONN <random_string> <random_string> 192.168.4.2
    - - R PC_COM NC ERROR C +WIFICONN:OK
  - - SSC SSC2 sta -C -s <random_string> -p <random_string>
    - - R SSC2 C +JAP:CONNECTED
  - - DELAY 30
    - - ''
  - - SSC SSC1 ap -L
    - - R SSC1 C 192.168.4.2 C 192.168.4.3 P <pc_wifi_nic_mac> P <target2_mac>
  execution time: 0.0
  expected result: |-
    1. succeed
    2. succeed
    3. succeed
    4. succeed
    5. find target2 and PC
  initial condition: T2_1
  level: Integration
  module: TCPIP
  steps: |-
    1. config softap to a random ssid
    2. target2 connect to target1 softap
    3. disable DHCP server, do config and enable
    4. PC NIC connect to target1 softap try to renew IP 192.168.4.2
    5. softap list connected station
  sub module: DHCP
  summary: dhcp server reconfig, old client able to renew IP (direct send request)
  test environment: SSC_T2_2
  test point 1: basic function
  test point 2: DHCP server function test
  version: v1 (2016-8-15)
- CI ready: 'Yes'
  ID: TCPIP_DHCP_0212
  SDK: |-
    8266_NonOS
    8266_RTOS
    ESP32_IDF
  Test App: SSC
  allow fail: ''
  auto test: 'Yes'
  category: Function
  cmd set:
  - ''
  - - SSC SSC1 ap -S -s <target_ssid> -p <target_password> -t <target_auth_enum>
    - - R SSC1 C +SAP:OK
  - - SSC SSC1 dhcp -E -o 2
    - - R SSC1 C +DHCP:AP,OK
  - - SSC SSC2 sta -C -s <target_ssid> -p <target_password>
    - - ''
  - - DELAY 20
    - - P PC_COM C +DELAYDONE
      - P SSC2 NC +JAP:CONNECTED
  - - SSC SSC1 dhcp -S -o 2
    - - R SSC1 C +DHCP:AP,OK
  - - SSC SSC2 sta -C -s <target_ssid> -p <target_password>
    - - R SSC2 C +JAP:CONNECTED
  execution time: 0.0
  expected result: "1.target1 set AP OK \n2.target1 关闭DHCP OK\n3.target2 jap target
    1,FAIL \n4.target1 打开DHCP OK\n5.target2 jap target 1,ok"
  initial condition: T2_1
  level: Integration
  module: TCPIP
  steps: "1.target1 set AP OK \n2.target1 关闭DHCP OK\n3.target2 jap target 1,FAIL \n4.target1
    打开DHCP OK\n5.target2 jap target 1,ok"
  sub module: DHCP
  summary: dhcp server function test
  test environment: SSC_T2_5
  test point 1: basic function
  test point 2: DHCP server function test
  version: v2 (2016-10-19)
- CI ready: 'Yes'
  ID: TCPIP_DHCP_0301
  SDK: |-
    8266_NonOS
    8266_RTOS
    ESP32_IDF
  Test App: SSC
  allow fail: ''
  auto test: 'Yes'
  category: Function
  cmd set:
  - ''
  - - SSC SSC1 dhcp -E -o 1
    - - R SSC1 C +DHCP:STA,OK
  - - SSC SSC1 ip -S -i 192.168.123.123 -o 1
    - - R SSC1 C +IP:OK
  - - SSC SSC1 sta -C -s <ap_ssid> -p <ap_password>
    - - R SSC1 C +JAP:CONNECTED
  - - SSC SSC1 ip -S -i 0.0.0.0 -o 1
    - - R SSC1 C +IP
  - - SSC SSC1 sta -C -s <ap_ssid> -p <ap_password>
    - - ''
  - - DELAY 10
    - - P PC_COM C +DELAYDONE
      - P SSC1 NC +JAP:CONNECTED
  execution time: 0.0
  expected result: |-
    1.OK
    2.OK
    3.JAP CONNETED
    4.OK
    5.等待10s，JAP fail
  initial condition: STAM1
  level: Integration
  module: TCPIP
  steps: |-
    1.target1 关闭DHCP 1
    2.target1 设置sta ip 192.168.123.123
    4.target1 jap AP
    5.target1 设置sta ip 0.0.0.0
    6.target1 jap AP
  sub module: DHCP
  summary: sta dhcp static ip interaction
  test environment: SSC_T1_5
  test point 1: interaction
  test point 2: static IP and DHCP interaction test
  version: v2 (2016-10-19)
- CI ready: 'Yes'
  ID: TCPIP_DHCP_0302
  SDK: |-
    8266_NonOS
    8266_RTOS
    ESP32_IDF
  Test App: SSC
  allow fail: ''
  auto test: 'Yes'
  category: Function
  cmd set:
  - ''
  - - SSC SSC1 dhcp -S -o 2
    - - R SSC1 C +DHCP:AP,OK
  - - SSC SSC1 ip -S -i 192.168.123.123 -o 2
    - - R SSC1 C +IP:ERROR
  - - SSC SSC1 dhcp -L -s 192.168.2.2 -e 192.168.2.10
    - - R SSC1 C +DHCP:LEASE,ERROR
  - - SSC SSC1 ap -S -s <target_ssid> -p <target_password> -t <target_auth_enum>
    - - ''
  - - SSC SSC2 sta -C -s <target_ssid> -p <target_password>
    - - P SSC2 C +JAP:CONNECTED
  - - SSC SSC1 dhcp -E -o 2
    - - R SSC1 C +DHCP:AP,OK
  - - SSC SSC1 ip -S -i 192.168.4.1 -o 2
    - - R SSC1 C +IP:OK
  - - SSC SSC1 dhcp -L -s 192.168.4.2 -e 192.168.4.10
    - - R SSC1 C +DHCP:LEASE,OK
  - - SSC SSC2 sta -C -s <target_ssid> -p <target_password>
    - - ''
  - - DELAY 10
    - - P PC_COM C +DELAYDONE
      - P SSC2 NC +JAP:CONNECTED
  execution time: 0.0
  expected result: |-
    1.target 1 OK
    2.target1 ERROR
    3.target1 ERROR
    4.target2 jap target1 OK
    5.target1 OK
    6.target1 OK
    7.target1 OK
    8.target2 jap target1 OK
  initial condition: T2_1
  level: Integration
  module: TCPIP
  steps: "1.target1 打开DHCP 2\n2.target1 设置softAP ip 192.168.123.123\n3.target1 设置地址池\n4.target1下设置ssid
    和pwd 加密方式\n5.target2 连接target1 \n6.target1 关闭DHCP 2\n7.target1 设置softAP ip \n8.target1
    设置正确的地址池\n9.target2 连接target1 "
  sub module: DHCP
  summary: ap dhcp static ip interaction
  test environment: SSC_T2_5
  test point 1: interaction
  test point 2: static IP and DHCP interaction test
  version: v1 (2016-8-15)
- CI ready: 'No'
  ID: TCPIP_DHCP_5001
  SDK: |-
    8266_NonOS
    8266_RTOS
    ESP32_IDF
  Test App: SSC
  auto test: 'Yes'
  category: Stress
  cmd set:
  - WiFiStress/SoftAPNSTA
  - - sta_num = 4
    - - dummy
  - - max_sta = 3
    - - ''
  - - test_time = 300
    - - ''
  - - delay1 = [5, 60]
    - - ''
  - - delay2 = [1, 10]
    - - ''
  - - change_mac = False
    - - ''
  - - channel = 11
    - - ''
  execution time: 5.0
  expected result: "1. succeed\n2. succeed\n3. JAP succeed except: \nsoftap reach
    max connected AP \nor all address in dhcp pool not available"
  initial condition: None
  level: Integration
  module: TCPIP
  steps: |-
    1. 1 target set to softap mode and rest set to sta mode
    2. set a short dhcp server lease time
    2. all sta set random mac, random join and disconnect from softap
    Loop step 2
  sub module: DHCP
  summary: max sta connect to SotfAP and disconnect, sta number more than sta allowed
  test environment: SSC_T5_1
  test point 1: stress
  test point 2: DHCP server stress test
  version: v1 (2016-8-15)
- CI ready: 'No'
  ID: TCPIP_DHCP_5101
  SDK: |-
    8266_NonOS
    8266_RTOS
    ESP32_IDF
  Test App: SSC
  auto test: 'No'
  category: IOT
  cmd set: ''
  execution time: 0.1
  expected result: |-
    2. 成功
    3. 成功
    4. 断开连接并开始重连
    5. WIFI连上但无法获取 IP，等大概1分钟后，发生 DHCP TIMEOUT，断开连接并重连，成功获取到 IP
  initial condition: STAM1
  level: Integration
  module: TCPIP
  steps: |-
    1. 使用小米路由器青春版进行测试
    2. 设置DHCP timeout（dhcp -T -n 6）
    3. target 连上 AP
    4. 路由器断电
    5. 路由器上电
  sub module: DHCP
  summary: DHCP timeout test on sepcial router
  test environment: SSC_T1_IOT1
  test point 1: interoperability
  test point 2: DHCP timeout test
  version: v1 (2016-8-15)
