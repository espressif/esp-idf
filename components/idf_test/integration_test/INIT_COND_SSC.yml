.SSC_INIT_COND: &SSC_INIT_COND
  test script: InitCondBase
  restore post cmd set:
  - ''
  - - SSC SSC1 soc -T
    - - R SSC1 C +CLOSEALL
  - - SSC SSC1 ram
    - - 'R SSC1 C +FREEHEAP:'

.dut1_start_wifi: &dut1_start_wifi
  LIST_MERGE:
    - - SSC SSC1 op -W -a init
      - - R SSC1 C +MODE
    - - SSC SSC1 op -W -a start
      - - R SSC1 C +MODE

initial condition:
- tag: APM1
  <<: *SSC_INIT_COND
  initial condition detail: AP mode, DHCP on, will autogen a TC with initial condition
    APSTA1
  check cmd set:
  - ''
  - *dut1_start_wifi
  - - SSC SSC1 op -Q
    - - R SSC1 C +CURMODE:2
  - - SSC SSC1 ap -Q
    - - R SSC1 RE "\+APCONFIG:%%s,%%s,\d+,\d+,\d+,4,"%%(<target_ssid>,<target_password>)
  - - SSC SSC1 dhcp -Q -o 2
    - - R SSC1 C +DHCP:AP,STARTED
  - - SSC SSC1 mac -Q -o 2
    - - R SSC1 P <target_ap_mac>
  restore cmd set:
  - ''
  - - SSC SSC1 op -S -o 2
    - - R SSC1 C +MODE:OK
  - - SSC SSC1 dhcp -S -o 2
    - - R SSC1 C +DHCP
  - - SSC SSC1 mac -S -o 2 -m <target_ap_mac>
    - - R SSC1 C +MAC:AP,OK
  - - SSC SSC1 ap -S -s <target_ssid> -p <target_password> -t <target_auth_enum>
    - - R SSC1 C +SAP:OK
  force restore cmd set:
  - ''
  - - SSC SSC1 reboot
    - - R SSC1 C !!!ready!!!
  - - SSC SSC1 op -S -o 2
    - - R SSC1 C +MODE:OK
  - - SSC SSC1 dhcp -S -o 2
    - - R SSC1 C +DHCP
  - - SSC SSC1 mac -S -o 2 -m <target_ap_mac>
    - - R SSC1 C +MAC:AP,OK
  - - SSC SSC1 ap -S -s <target_ssid> -p <target_password> -t <target_auth_enum>
    - - R SSC1 C +SAP:OK
- tag: APM2
  <<: *SSC_INIT_COND
  initial condition detail: AP mode, PC join AP, DHCP on, will autogen a TC with initial
    condition APSTA2
  check cmd set:
  - ''
  - *dut1_start_wifi
  - - SSC SSC1 op -Q
    - - R SSC1 C +CURMODE:2
  - - SSC SSC1 ap -Q
    - - R SSC1 RE "\+APCONFIG:%%s,%%s,\d+,\d+,\d+,4,"%%(<target_ssid>,<target_password>)
  - - SSC SSC1 ap -L
    - - R SSC1 RE "\+LSTA:.+,%%s"%%(<pc_ip_wifi>)
  - - SSC SSC1 dhcp -Q -o 2
    - - R SSC1 C +DHCP:AP,STARTED
  - - SSC SSC1 mac -Q -o 2
    - - R SSC1 P <target_ap_mac>
  restore cmd set:
  - ''
  - - SSC SSC1 op -S -o 2
    - - R SSC1 C +MODE:OK
  - - SSC SSC1 mac -S -o 2 -m <target_ap_mac>
    - - R SSC1 C +MAC:AP,OK
  - - SSC SSC1 dhcp -S -o 2
    - - R SSC1 C +DHCP
  - - SSC SSC1 ap -S -s <target_ssid> -p <target_password> -t <target_auth_enum>
    - - R SSC1 C +SAP:OK
  - - WIFI <pc_wifi_nic> CONN <target_ssid> <target_password> <pc_ip_wifi> <target_auth>
      <target_encryption>
    - - R PC_COM NC ERROR C +WIFICONN:OK
  force restore cmd set:
  - ''
  - - SSC SSC1 reboot
    - - R SSC1 C !!!ready!!!
  - - SSC SSC1 op -S -o 2
    - - R SSC1 C +MODE:OK
  - - SSC SSC1 mac -S -o 2 -m <target_ap_mac>
    - - R SSC1 C +MAC:AP,OK
  - - SSC SSC1 dhcp -S -o 2
    - - R SSC1 C +DHCP
  - - SSC SSC1 ap -S -s <target_ssid> -p <target_password> -t <target_auth_enum>
    - - R SSC1 C +SAP:OK
  - - WIFI <pc_wifi_nic> CONN <target_ssid> <target_password> <pc_ip_wifi> <target_auth>
      <target_encryption>
    - - R PC_COM NC ERROR C +WIFICONN:OK
- tag: APO1
  <<: *SSC_INIT_COND
  initial condition detail: AP mode, will NOT autogen a TC with initial condition
    APSTA1
  check cmd set:
  - ''
  - *dut1_start_wifi
  - - SSC SSC1 op -Q
    - - R SSC1 C +CURMODE:2
  - - SSC SSC1 ap -Q
    - - R SSC1 RE "\+APCONFIG:%%s,%%s,\d+,\d+,\d+,4,"%%(<target_ssid>,<target_password>)
  - - SSC SSC1 dhcp -Q -o 2
    - - R SSC1 C +DHCP:AP,STARTED
  - - SSC SSC1 mac -Q -o 2
    - - R SSC1 P <target_ap_mac>
  restore cmd set:
  - ''
  - - SSC SSC1 op -S -o 2
    - - R SSC1 C +MODE:OK
  - - SSC SSC1 dhcp -S -o 2
    - - R SSC1 C +DHCP
  - - SSC SSC1 mac -S -o 2 -m <target_ap_mac>
    - - R SSC1 C +MAC:AP,OK
  - - SSC SSC1 ap -S -s <target_ssid> -p <target_password> -t <target_auth_enum>
    - - R SSC1 C +SAP:OK
  force restore cmd set:
  - ''
  - - SSC SSC1 reboot
    - - R SSC1 C !!!ready!!!
  - - SSC SSC1 op -S -o 2
    - - R SSC1 C +MODE:OK
  - - SSC SSC1 dhcp -S -o 2
    - - R SSC1 C +DHCP
  - - SSC SSC1 mac -S -o 2 -m <target_ap_mac>
    - - R SSC1 C +MAC:AP,OK
  - - SSC SSC1 ap -S -s <target_ssid> -p <target_password> -t <target_auth_enum>
    - - R SSC1 C +SAP:OK
- tag: APO2
  <<: *SSC_INIT_COND
  initial condition detail: AP mode, will NOT autogen a TC with initial condition
    APSTA2
  check cmd set:
  - ''
  - *dut1_start_wifi
  - - SSC SSC1 op -Q
    - - R SSC1 C +CURMODE:2
  - - SSC SSC1 ap -Q
    - - R SSC1 RE "\+APCONFIG:%%s,%%s,\d+,\d+,\d+,4,"%%(<target_ssid>,<target_password>)
  - - SSC SSC1 ap -L
    - - R SSC1 RE "\+LSTA:.+,%%s"%%(<pc_ip_wifi>)
  - - SSC SSC1 dhcp -Q -o 2
    - - R SSC1 C +DHCP:AP,STARTED
  - - SSC SSC1 mac -Q -o 2
    - - R SSC1 P <target_ap_mac>
  restore cmd set:
  - ''
  - - SSC SSC1 op -S -o 2
    - - R SSC1 C +MODE:OK
  - - SSC SSC1 mac -S -o 2 -m <target_ap_mac>
    - - R SSC1 C +MAC:AP,OK
  - - SSC SSC1 dhcp -S -o 2
    - - R SSC1 C +DHCP
  - - SSC SSC1 ap -S -s <target_ssid> -p <target_password> -t <target_auth_enum>
    - - R SSC1 C +SAP:OK
  - - WIFI <pc_wifi_nic> CONN <target_ssid> <target_password> <pc_ip_wifi> <target_auth>
      <target_encryption>
    - - R PC_COM NC ERROR C +WIFICONN:OK
  force restore cmd set:
  - ''
  - - SSC SSC1 reboot
    - - R SSC1 C !!!ready!!!
  - - SSC SSC1 op -S -o 2
    - - R SSC1 C +MODE:OK
  - - SSC SSC1 mac -S -o 2 -m <target_ap_mac>
    - - R SSC1 C +MAC:AP,OK
  - - SSC SSC1 dhcp -S -o 2
    - - R SSC1 C +DHCP
  - - SSC SSC1 ap -S -s <target_ssid> -p <target_password> -t <target_auth_enum>
    - - R SSC1 C +SAP:OK
  - - WIFI <pc_wifi_nic> CONN <target_ssid> <target_password> <pc_ip_wifi> <target_auth>
      <target_encryption>
    - - R PC_COM NC ERROR C +WIFICONN:OK
- <<: *SSC_INIT_COND
  check cmd set:
  - ''
  - *dut1_start_wifi
  - - SSC SSC1 upgrade -Q -t 1
    - - R SSC1 C BIN_ID,0
  - - SSC SSC1 upgrade -Q -t 2 -b 0
    - - R SSC1 C BIN_INFO,0
  - - SSC SSC1 op -S -o 2
    - - R SSC1 C +MODE:OK
  force restore cmd set:
  - ''
  - - SSC SSC1 upgrade -R -r 1 -s <ota_bin_size>
    - - R SSC1 NC ERROR C !!!ready!!!
  - - SSC SSC1 op -S -o 1
    - - R SSC1 C +MODE:OK
  - - SSC SSC1 dhcp -S -o 1
    - - R SSC1 C +DHCP
  - - SSC SSC1 sta -C -s <ap_ssid> -p <ap_password>
    - - R SSC1 RE "\+JAP:CONNECTED,%%s"%%(<ap_ssid>)
  - - SOC SOC1 ULISTEN <test_tcp_port1> <pc_ip>
    - - R SOC_COM L OK
  - - SOC SOC1 SETOPT REPLY BIN
    - - R SOC_COM C OK
  - - SSC SSC1 upgrade -I -b 0 -f 0
    - - P SSC1 C +UPGRADE:OK
  - - SSC SSC1 upgrade -U -i <pc_ip> -p <test_tcp_port1> -u <ota_bin>
    - - P SSC1 C +UPGRADE:SUCCEED
  - - SSC SSC1 upgrade -R -b 0
    - - R SSC1 C !!!ready!!!
  - - SSC SSC1 op -S -o 2
    - - R SSC1 C +MODE:OK
  initial condition detail: AP only mode, running BIN0 (located on flash id 0)
  restore cmd set:
  - ''
  - - SSC SSC1 upgrade -Q -t 2 -b 0
    - - R SSC1 C BIN_INFO,0
  - - SSC SSC1 upgrade -R -b 0
    - - R SSC1 C !!!ready!!!
  - - SSC SSC1 op -S -o 2
    - - R SSC1 C +MODE:OK
  tag: APOBIN0
- tag: APSTA1
  <<: *SSC_INIT_COND
  initial condition detail: testing ap on sta + ap mode (autogen by APM1)
  check cmd set:
  - ''
  - *dut1_start_wifi
  - - SSC SSC1 op -Q
    - - R SSC1 C +CURMODE:3
  - - SSC SSC1 ap -Q
    - - R SSC1 RE "\+APCONFIG:%%s,%%s,\d+,\d+,\d+,4,"%%(<target_ssid>,<target_password>)
  - - SSC SSC1 dhcp -Q -o 2
    - - R SSC1 C +DHCP:AP,STARTED
  - - SSC SSC1 mac -Q -o 2
    - - R SSC1 P <target_ap_mac>
  restore cmd set:
  - ''
  - - SSC SSC1 op -S -o 3
    - - R SSC1 C +MODE:OK
  - - SSC SSC1 mac -S -o 2 -m <target_ap_mac>
    - - R SSC1 C +MAC:AP,OK
  - - SSC SSC1 dhcp -S -o 2
    - - R SSC1 C +DHCP
  - - SSC SSC1 ap -S -s <target_ssid> -p <target_password> -t <target_auth_enum>
    - - R SSC1 C +SAP:OK
  force restore cmd set:
  - ''
  - - SSC SSC1 reboot
    - - R SSC1 C !!!ready!!!
  - - SSC SSC1 op -S -o 3
    - - R SSC1 C +MODE:OK
  - - SSC SSC1 mac -S -o 2 -m <target_ap_mac>
    - - R SSC1 C +MAC:AP,OK
  - - SSC SSC1 dhcp -S -o 2
    - - R SSC1 C +DHCP
  - - SSC SSC1 ap -S -s <target_ssid> -p <target_password> -t <target_auth_enum>
    - - R SSC1 C +SAP:OK
- tag: APSTA2
  <<: *SSC_INIT_COND
  initial condition detail: testing ap on sta + ap mode,  PC join AP (autogen by APM2)
  check cmd set:
  - ''
  - *dut1_start_wifi
  - - SSC SSC1 op -Q
    - - R SSC1 C +CURMODE:3
  - - SSC SSC1 ap -Q
    - - R SSC1 RE "\+APCONFIG:%%s,%%s,\d+,\d+,\d+,4,"%%(<target_ssid>,<target_password>)
  - - SSC SSC1 ap -L
    - - R SSC1 RE "\+LSTA:.+,%%s"%%(<pc_ip_wifi>)
  - - SSC SSC1 dhcp -Q -o 2
    - - R SSC1 C +DHCP:AP,STARTED
  - - SSC SSC1 mac -Q -o 2
    - - R SSC1 P <target_ap_mac>
  restore cmd set:
  - ''
  - - SSC SSC1 op -S -o 3
    - - R SSC1 C +MODE:OK
  - - SSC SSC1 mac -S -o 2 -m <target_ap_mac>
    - - R SSC1 C +MAC:AP,OK
  - - SSC SSC1 dhcp -S -o 2
    - - R SSC1 C +DHCP
  - - SSC SSC1 ap -S -s <target_ssid> -p <target_password> -t <target_auth_enum>
    - - R SSC1 C +SAP:OK
  - - WIFI <pc_wifi_nic> CONN <target_ssid> <target_password> <pc_ip_wifi> <target_auth>
      <target_encryption>
    - - R PC_COM NC ERROR C +WIFICONN:OK
  force restore cmd set:
  - ''
  - - SSC SSC1 reboot
    - - R SSC1 C !!!ready!!!
  - - SSC SSC1 op -S -o 3
    - - R SSC1 C +MODE:OK
  - - SSC SSC1 mac -S -o 2 -m <target_ap_mac>
    - - R SSC1 C +MAC:AP,OK
  - - SSC SSC1 dhcp -S -o 2
    - - R SSC1 C +DHCP
  - - SSC SSC1 ap -S -s <target_ssid> -p <target_password> -t <target_auth_enum>
    - - R SSC1 C +SAP:OK
  - - WIFI <pc_wifi_nic> CONN <target_ssid> <target_password> <pc_ip_wifi> <target_auth>
      <target_encryption>
    - - R PC_COM NC ERROR C +WIFICONN:OK
- tag: APWIFISTO
  <<: *SSC_INIT_COND
  initial condition detail: AP mode, wifi will stop with initial condition APWIFISTO
  check cmd set:
  - ''
  - - SSC SSC1 op -Q
    - - R SSC1 C +CURMODE:2
  - - SSC SSC1 op -W -a init
    - - R SSC1 C +MODE:OK
  - - SSC SSC1 op -W -a start
    - - R SSC1 C +MODE:OK
  - - SSC SSC1 op -W -a stop
    - - R SSC1 C +MODE:OK
  restore cmd set:
  - ''
  - - SSC SSC1 op -S -o 2
    - - R SSC1 C +MODE:OK
  - - SSC SSC1 op -W -a init
    - - R SSC1 c +MODE:OK
  - - SSC SSC1 op -W -a start
    - - R SSC1 C +MODE:OK
  - - SSC SSC1 op -W -a stop
    - - R SSC1 C +MODE:OK
  force restore cmd set:
  - ''
  - - SSC SSC1 reboot
    - - R SSC1 C !!!ready!!!
  - - SSC SSC1 op -S -o 2
    - - R SSC1 C +MODE:OK
  - - SSC SSC1 op -W -a init
    - - R SSC1 C +MODE:OK
  - - SSC SSC1 op -W -a start
    - - R SSC1 C +MODE:OK
  - - SSC SSC1 op -W -a stop
    - - R SSC1 C +MODE:OK
- tag: BLE_CONN2
  <<: *SSC_INIT_COND
  initial condition detail: 2 DUT which BLE is enabled, DUT1 connected with DUT2,
    DUT2 created GATT service 0xA000
  check cmd set:
  - ''
  - - ASSERT
    - - ''
  restore cmd set:
  - ''
  # do wifi disconnect, to prevent wifi reconnect cause bad BLE performance
  - - SSC SSC[1-2] sta -D
    - []
  - - SSC SSC[1-2] bt -D -z init
    - - 'R SSC[1-2] C +BT:'
  - - SSC SSC[1-2] bt -D -z enable
    - - 'R SSC[1-2] C +BT:'
  - - SSC SSC[1-2] ble -R
    - - 'R SSC[1-2] C +BLE:'
  - - SSC SSC[1-2] bleconn -D -z all
    - - 'R SSC[1-2] C +BLECONN:'
  - - SSC SSC[1-2] gatts -S -z delete
    - - 'R SSC[1-2] C +GATTS:'
  - - SSC SSC[1-2] gattc -U -z all
    - - R SSC[1-2] C +GATTC:OK
  - - SSC SSC[1-2] bleadv -D -z stop
    - - R SSC[1-2] C +BLEADV:OK
  - - SSC SSC2 bleadv -L -c 0 -t 3
    - - R SSC2 C +BLEADV:SetAdv,OK
  - - SSC SSC2 bleadv -D -z start
    - - R SSC2 C +BLEADV:OK
  - - SSC SSC2 gatts -S -z load -p 0xA0
    - - R SSC2 C +GATTS:StartService,OK,A000
  - - SSC SSC1 gattc -F -r <dut2_bt_mac>
    - - R SSC1 C +GATTC:OK
  - - SSC SSC1 bleconn -C -p 0x10 -a <dut2_bt_mac>
    - - R SSC1 C +BLE:GattcConnect,OK
      - P SSC2 C +BLE:GattsConnect
  force restore cmd set:
  - ''
  - - SSC SSC[1-2] reboot
    - - R SSC[1-2] C !!!ready!!!
  # do wifi disconnect, to prevent wifi reconnect cause bad BLE performance
  - - SSC SSC[1-2] sta -D
    - []
  - - SSC SSC[1-2] ble -R
    - - 'R SSC[1-2] C +BLE:'
  - - SSC SSC[1-2] bleconn -D -z all
    - - 'R SSC[1-2] C +BLECONN:'
  - - SSC SSC[1-2] gatts -S -z delete
    - - 'R SSC[1-2] C +GATTS:'
  - - SSC SSC[1-2] gattc -U -z all
    - - R SSC[1-2] C +GATTC:OK
  - - SSC SSC[1-2] bleadv -D -z stop
    - - R SSC[1-2] C +BLEADV:OK
  - - SSC SSC2 bleadv -L -c 0 -t 3
    - - R SSC2 C +BLEADV:SetAdv,OK
  - - SSC SSC2 bleadv -D -z start
    - - R SSC2 C +BLEADV:OK
  - - SSC SSC2 gatts -S -z load -p 0xA0
    - - R SSC2 C +GATTS:StartService,OK,A000
  - - SSC SSC1 gattc -F -r <dut2_bt_mac>
    - - R SSC1 C +GATTC:OK
  - - SSC SSC1 bleconn -C -p 0x10 -a <dut2_bt_mac>
    - - R SSC1 C +BLE:GattcConnect,OK
      - P SSC2 C +BLE:GattsConnect
  restore post cmd set:
  - ''
  - - SSC SSC1 ram
    - - R SSC1 A <heap_size>:(\d+)
- tag: BLE_CONN3
  <<: *SSC_INIT_COND
  initial condition detail: 2 DUT which BLE is enabled, DUT1 connected with DUT2,
    DUT2 created GATT service 0xA002
  check cmd set:
  - ''
  - - ASSERT
    - - ''
  restore cmd set:
  - ''
  # do wifi disconnect, to prevent wifi reconnect cause bad BLE performance
  - - SSC SSC[1-2] sta -D
    - []
  - - SSC SSC[1-2] bt -D -z init
    - - 'R SSC[1-2] C +BT:'
  - - SSC SSC[1-2] bt -D -z enable
    - - 'R SSC[1-2] C +BT:'
  - - SSC SSC[1-2] ble -R
    - - 'R SSC[1-2] C +BLE:'
  - - SSC SSC[1-2] bleconn -D -z all
    - - 'R SSC[1-2] C +BLECONN:'
  - - SSC SSC[1-2] gatts -S -z delete
    - - 'R SSC[1-2] C +GATTS:'
  - - SSC SSC[1-2] gattc -U -z all
    - - R SSC[1-2] C +GATTC:OK
  - - SSC SSC[1-2] bleadv -D -z stop
    - - R SSC[1-2] C +BLEADV:OK
  - - SSC SSC2 bleadv -L -c 0 -t 3
    - - R SSC2 C +BLEADV:SetAdv,OK
  - - SSC SSC2 bleadv -D -z start
    - - R SSC2 C +BLEADV:OK
  - - SSC SSC2 gatts -S -z load -p 0xA2
    - - R SSC2 C +GATTS:StartService,OK,A002
  - - SSC SSC1 gattc -F -r <dut2_bt_mac>
    - - R SSC1 C +GATTC:OK
  - - SSC SSC1 bleconn -C -p 0x10 -a <dut2_bt_mac>
    - - R SSC1 C +BLE:GattcConnect,OK
      - P SSC2 C +BLE:GattsConnect
  force restore cmd set:
  - ''
  - - SSC SSC[1-2] reboot
    - - R SSC[1-2] C !!!ready!!!
  # do wifi disconnect, to prevent wifi reconnect cause bad BLE performance
  - - SSC SSC[1-2] sta -D
    - []
  - - SSC SSC[1-2] ble -R
    - - 'R SSC[1-2] C +BLE:'
  - - SSC SSC[1-2] bleconn -D -z all
    - - 'R SSC[1-2] C +BLECONN:'
  - - SSC SSC[1-2] gatts -S -z delete
    - - 'R SSC[1-2] C +GATTS:'
  - - SSC SSC[1-2] gattc -U -z all
    - - R SSC[1-2] C +GATTC:OK
  - - SSC SSC[1-2] bleadv -D -z stop
    - - R SSC[1-2] C +BLEADV:OK
  - - SSC SSC2 bleadv -L -c 0 -t 3
    - - R SSC2 C +BLEADV:SetAdv,OK
  - - SSC SSC2 bleadv -D -z start
    - - R SSC2 C +BLEADV:OK
  - - SSC SSC2 gatts -S -z load -p 0xA2
    - - R SSC2 C +GATTS:StartService,OK,A002
  - - SSC SSC1 gattc -F -r <dut2_bt_mac>
    - - R SSC1 C +GATTC:OK
  - - SSC SSC1 bleconn -C -p 0x10 -a <dut2_bt_mac>
    - - R SSC1 C +BLE:GattcConnect,OK
      - P SSC2 C +BLE:GattsConnect
  restore post cmd set:
  - ''
  - - SSC SSC1 ram
    - - R SSC1 A <heap_size>:(\d+)
- tag: BLE_CONN4
  <<: *SSC_INIT_COND
  initial condition detail: 2 DUT which BLE is enabled, create both GATTC and GATTS
    app on DUT1 and DUT2. DUT1 connected with DUT2. use GATT service A002.
  check cmd set:
  - ''
  - - ASSERT
    - - ''
  restore cmd set:
  - ''
  # do wifi disconnect, to prevent wifi reconnect cause bad BLE performance
  - - SSC SSC[1-2] sta -D
    - []
  - - SSC SSC[1-2] bt -D -z init
    - - 'R SSC[1-2] C +BT:'
  - - SSC SSC[1-2] bt -D -z enable
    - - 'R SSC[1-2] C +BT:'
  - - SSC SSC[1-2] ble -R
    - - 'R SSC[1-2] C +BLE:'
  - - SSC SSC[1-2] bleconn -D -z all
    - - 'R SSC[1-2] C +BLECONN:'
  - - SSC SSC[1-2] gatts -S -z delete
    - - 'R SSC[1-2] C +GATTS:'
  - - SSC SSC[1-2] gattc -U -z all
    - - R SSC[1-2] C +GATTC:OK
  - - SSC SSC[1-2] bleadv -D -z stop
    - - R SSC[1-2] C +BLEADV:OK
  - - SSC SSC2 bleadv -L -c 0 -t 3
    - - R SSC2 C +BLEADV:SetAdv,OK
  - - SSC SSC2 bleadv -D -z start
    - - R SSC2 C +BLEADV:OK
  - - SSC SSC[1-2] gatts -S -z load -p 0xA2
    - - R SSC[1-2] C +GATTS:StartService,OK,A002
  - - SSC SSC[1-2] gattc -F -r <dut[2,1]_bt_mac>
    - - R SSC[1-2] C +GATTC:OK
  - - SSC SSC1 bleconn -C -p 0x10 -a <dut2_bt_mac>
    - - R SSC1 C +BLE:GattcConnect,OK
      - P SSC2 C +BLE:GattsConnect
  - - SSC SSC2 bleconn -C -p 0x10 -a <dut1_bt_mac>
    - - R SSC2 C +BLE:GattcOpen,OK
  force restore cmd set:
  - ''
  - - SSC SSC[1-2] reboot
    - - R SSC[1-2] C !!!ready!!!
  # do wifi disconnect, to prevent wifi reconnect cause bad BLE performance
  - - SSC SSC[1-2] sta -D
    - []
  - - SSC SSC[1-2] ble -R
    - - 'R SSC[1-2] C +BLE:'
  - - SSC SSC[1-2] bleconn -D -z all
    - - 'R SSC[1-2] C +BLECONN:'
  - - SSC SSC[1-2] gatts -S -z delete
    - - 'R SSC[1-2] C +GATTS:'
  - - SSC SSC[1-2] gattc -U -z all
    - - R SSC[1-2] C +GATTC:OK
  - - SSC SSC[1-2] bleadv -D -z stop
    - - R SSC[1-2] C +BLEADV:OK
  - - SSC SSC2 bleadv -L -c 0 -t 3
    - - R SSC2 C +BLEADV:SetAdv,OK
  - - SSC SSC2 bleadv -D -z start
    - - R SSC2 C +BLEADV:OK
  - - SSC SSC[1-2] gatts -S -z load -p 0xA2
    - - R SSC[1-2] C +GATTS:StartService,OK,A002
  - - SSC SSC[1-2] gattc -F -r <dut[2,1]_bt_mac>
    - - R SSC[1-2] C +GATTC:OK
  - - SSC SSC1 bleconn -C -p 0x10 -a <dut2_bt_mac>
    - - R SSC1 C +BLE:GattcConnect,OK
      - P SSC2 C +BLE:GattsConnect
  - - SSC SSC2 bleconn -C -p 0x10 -a <dut1_bt_mac>
    - - R SSC2 C +BLE:GattcOpen,OK
  restore post cmd set:
  - ''
  - - SSC SSC1 ram
    - - R SSC1 A <heap_size>:(\d+)
- tag: BLE_CONN5
  <<: *SSC_INIT_COND
  initial condition detail: 5 DUT which BLE is enabled, DUT1 connected with DUT2-5
    as master, DUT2-5 created GATT service 0xA002
  check cmd set:
  - ''
  - - ASSERT
    - - ''
  force restore cmd set:
  - ''
  - - SSC SSC[1-5] reboot
    - - R SSC[1-5] C !!!ready!!!
  # do wifi disconnect, to prevent wifi reconnect cause bad BLE performance
  - - SSC SSC[1-5] sta -D
    - []
  - - SSC SSC[1-5] ble -R
    - - 'R SSC[1-5] C +BLE:'
  - - SSC SSC[1-5] bleconn -D -z all
    - - 'R SSC[1-5] C +BLECONN:'
  - - SSC SSC[1-5] gatts -S -z delete
    - - 'R SSC[1-5] C +GATTS:'
  - - SSC SSC[1-5] gattc -U -z all
    - - R SSC[1-5] C +GATTC:OK
  - - SSC SSC[1-5] bleadv -D -z stop
    - - R SSC[1-5] C +BLEADV:OK
  - - SSC SSC[2-5] bleadv -D -z start
    - - P SSC[2-5] C +BLEADV:Start,OK
  - - SSC SSC[2-5] gatts -S -z load -p 0xA2
    - - P SSC[2-5] C +GATTS:StartService,OK,A002
  - - SSC SSC1 gattc -F -r <dut2_bt_mac>
    - - R SSC1 C +GATTC:OK
  - - LOOP 4 1 "[2,3,4,5]" "[2,3,4,5]" "[2,3,4,5]"
    - ''
  - - SSC SSC1 bleconn -C -p 0x10 -a <dut{%d}_bt_mac>
    - - R SSC1 RE "\+BLE:GattcConnect,OK,0010,%%s"%%(<dut{%d}_bt_mac>)
      - P SSC{%d} C +BLE:GattsConnect
  restore cmd set:
  - ''
  # do wifi disconnect, to prevent wifi reconnect cause bad BLE performance
  - - SSC SSC[1-5] sta -D
    - []
  - - SSC SSC[1-5] bt -D -z init
    - - 'R SSC[1-5] C +BT:'
  - - SSC SSC[1-5] bt -D -z enable
    - - 'R SSC[1-5] C +BT:'
  - - SSC SSC[1-5] ble -R
    - - 'R SSC[1-5] C +BLE:'
  - - SSC SSC[1-5] bleconn -D -z all
    - - 'R SSC[1-5] C +BLECONN:'
  - - SSC SSC[1-5] gatts -S -z delete
    - - 'R SSC[1-5] C +GATTS:'
  - - SSC SSC[1-5] gattc -U -z all
    - - R SSC[1-5] C +GATTC:OK
  - - SSC SSC[1-5] bleadv -D -z stop
    - - R SSC[1-5] C +BLEADV:OK
  - - SSC SSC[2-5] bleadv -D -z start
    - - P SSC[2-5] C +BLEADV:Start,OK
  - - SSC SSC[2-5] gatts -S -z load -p 0xA2
    - - P SSC[2-5] C +GATTS:StartService,OK,A002
  - - SSC SSC1 gattc -F -r <dut2_bt_mac>
    - - R SSC1 C +GATTC:OK
  - - LOOP 4 1 "[2,3,4,5]" "[2,3,4,5]" "[2,3,4,5]"
    - ''
  - - SSC SSC1 bleconn -C -p 0x10 -a <dut{%d}_bt_mac>
    - - R SSC1 RE "\+BLE:GattcConnect,OK,0010,%%s"%%(<dut{%d}_bt_mac>)
      - P SSC{%d} C +BLE:GattsConnect
  restore post cmd set:
  - ''
  - - SSC SSC1 ram
    - - R SSC1 A <heap_size>:(\d+)
- tag: BLE_CONN6
  <<: *SSC_INIT_COND
  initial condition detail: 5 DUT which BLE is enabled, DUT1 is slave, connected by
    DUT2-5, DUT1 created GATT service 0xA002
  check cmd set:
  - ''
  - - ASSERT
    - - ''
  restore cmd set:
  - ''
  # do wifi disconnect, to prevent wifi reconnect cause bad BLE performance
  - - SSC SSC[1-5] sta -D
    - []
  - - SSC SSC[1-5] bt -D -z init
    - - 'R SSC[1-5] C +BT:'
  - - SSC SSC[1-5] bt -D -z enable
    - - 'R SSC[1-5] C +BT:'
  - - SSC SSC[1-5] ble -R
    - - 'R SSC[1-5] C +BLE:'
  - - SSC SSC[1-5] bleconn -D -z all
    - - 'R SSC[1-5] C +BLECONN:'
  - - SSC SSC[1-5] gatts -S -z delete
    - - 'R SSC[1-5] C +GATTS:'
  - - SSC SSC[1-5] gattc -U -z all
    - - R SSC[1-5] C +GATTC:OK
  - - SSC SSC[1-5] bleadv -D -z stop
    - - R SSC[1-5] C +BLEADV:OK
  - - SSC SSC1 gatts -S -z load -p 0xA2
    - - R SSC1 C +GATTS:StartService,OK,A002
  - - LOOP 4 2 "[2,3,4,5]" "[2,3,4,5]"
    - ''
  - - SSC SSC1 bleadv -D -z start
    - - P SSC1 C +BLEADV:Start,OK
  - - SSC SSC[2-5] gattc -F -r <dut1_bt_mac>
    - - R SSC[2-5] C +GATTC:OK
  - - SSC SSC{%d} bleconn -C -p 0x10 -a <dut1_bt_mac>
    - - R SSC{%d} RE "\+BLE:GattcConnect,OK,0010,%%s"%%(<dut1_bt_mac>)
      - P SSC1 C +BLE:GattsConnect
  force restore cmd set:
  - ''
  - - SSC SSC[1-5] reboot
    - - R SSC[1-5] C !!!ready!!!
  # do wifi disconnect, to prevent wifi reconnect cause bad BLE performance
  - - SSC SSC[1-5] sta -D
    - []
  - - SSC SSC[1-5] ble -R
    - - 'R SSC[1-5] C +BLE:'
  - - SSC SSC[1-5] bleconn -D -z all
    - - 'R SSC[1-5] C +BLECONN:'
  - - SSC SSC[1-5] gatts -S -z delete
    - - 'R SSC[1-5] C +GATTS:'
  - - SSC SSC[1-5] gattc -U -z all
    - - R SSC[1-5] C +GATTC:OK
  - - SSC SSC[1-5] bleadv -D -z stop
    - - R SSC[1-5] C +BLEADV:OK
  - - SSC SSC1 gatts -S -z load -p 0xA2
    - - R SSC1 C +GATTS:StartService,OK,A002
  - - SSC SSC[2-5] gattc -F -r <dut1_bt_mac>
    - - R SSC[2-5] C +GATTC:OK
  - - LOOP 4 2 "[2,3,4,5]" "[2,3,4,5]"
    - ''
  - - SSC SSC1 bleadv -D -z start
    - - P SSC1 C +BLEADV:Start,OK
  - - SSC SSC{%d} bleconn -C -p 0x10 -a <dut1_bt_mac>
    - - R SSC{%d} RE "\+BLE:GattcConnect,OK,0010,%%s"%%(<dut1_bt_mac>)
      - P SSC1 C +BLE:GattsConnect
  restore post cmd set:
  - ''
  - - SSC SSC1 ram
    - - R SSC1 A <heap_size>:(\d+)
- tag: BLE_CONN7
  <<: *SSC_INIT_COND
  initial condition detail: 5 DUT which BLE is enabled, DUT1 connected with DUT2-3
    as master, connected with DUT4-5 as slave, GATTS created service 0xA002
  check cmd set:
  - ''
  - - ASSERT
    - - ''
  restore cmd set:
  - ''
  # do wifi disconnect, to prevent wifi reconnect cause bad BLE performance
  - - SSC SSC[1-5] sta -D
    - []
  - - SSC SSC[1-5] bt -D -z init
    - - 'R SSC[1-5] C +BT:'
  - - SSC SSC[1-5] bt -D -z enable
    - - 'R SSC[1-5] C +BT:'
  - - SSC SSC[1-5] ble -R
    - - 'R SSC[1-5] C +BLE:'
  - - SSC SSC[1-5] bleconn -D -z all
    - - 'R SSC[1-5] C +BLECONN:'
  - - SSC SSC[1-5] gatts -S -z delete
    - - 'R SSC[1-5] C +GATTS:'
  - - SSC SSC[1-5] gattc -U -z all
    - - R SSC[1-5] C +GATTC:OK
  - - SSC SSC[1-5] bleadv -D -z stop
    - - R SSC[1-5] C +BLEADV:OK
  - - SSC SSC[1-3] gatts -S -z load -p 0xA2
    - - R SSC[1-3] C +GATTS:StartService,OK,A002
  - - LOOP 2 2 "[4,5]" "[4,5]"
    - ''
  - - SSC SSC1 bleadv -D -z start
    - - P SSC1 C +BLEADV:Start,OK
  - - SSC SSC{%d} bleconn -C -p 0x10 -a <dut1_bt_mac>
    - - R SSC{%d} RE "\+BLE:GattcConnect,OK,0010,%%s"%%(<dut1_bt_mac>)
      - P SSC1 C +BLE:GattsConnect
  - - SSC SSC[2-3] bleadv -D -z start
    - - P SSC[2-3] C +BLEADV:Start,OK
  - - LOOP 2 1 "[2,3]" "[2,3]" "[2,3]"
    - ''
  - - SSC SSC1 bleconn -C -p 0x10 -a <dut{%d}_bt_mac>
    - - R SSC1 RE "\+BLE:GattcConnect,OK,0010,%%s"%%(<dut{%d}_bt_mac>)
      - P SSC{%d} C +BLE:GattsConnect
  force restore cmd set:
  - ''
  - - SSC SSC[1-5] reboot
    - - R SSC[1-5] C !!!ready!!!
  # do wifi disconnect, to prevent wifi reconnect cause bad BLE performance
  - - SSC SSC[1-5] sta -D
    - []
  - - SSC SSC[1-5] ble -R
    - - 'R SSC[1-5] C +BLE:'
  - - SSC SSC[1-5] bleconn -D -z all
    - - 'R SSC[1-5] C +BLECONN:'
  - - SSC SSC[1-5] gatts -S -z delete
    - - 'R SSC[1-5] C +GATTS:'
  - - SSC SSC[1-5] gattc -U -z all
    - - R SSC[1-5] C +GATTC:OK
  - - SSC SSC[1-5] bleadv -D -z stop
    - - R SSC[1-5] C +BLEADV:OK
  - - SSC SSC[1-3] gatts -S -z load -p 0xA2
    - - R SSC[1-3] C +GATTS:StartService,OK,A002
  - - LOOP 2 2 "[4,5]" "[4,5]"
    - ''
  - - SSC SSC1 bleadv -D -z start
    - - P SSC1 C +BLEADV:Start,OK
  - - SSC SSC{%d} bleconn -C -p 0x10 -a <dut1_bt_mac>
    - - R SSC{%d} RE "\+BLE:GattcConnect,OK,0010,%%s"%%(<dut1_bt_mac>)
      - P SSC1 C +BLE:GattsConnect
  - - SSC SSC[2-3] bleadv -D -z start
    - - P SSC[2-3] C +BLEADV:Start,OK
  - - LOOP 2 1 "[2,3]" "[2,3]" "[2,3]"
    - ''
  - - SSC SSC1 bleconn -C -p 0x10 -a <dut{%d}_bt_mac>
    - - R SSC1 RE "\+BLE:GattcConnect,OK,0010,%%s"%%(<dut{%d}_bt_mac>)
      - P SSC{%d} C +BLE:GattsConnect
  restore post cmd set:
  - ''
  - - SSC SSC1 ram
    - - R SSC1 A <heap_size>:(\d+)
- tag: BLE_CONN_SMP
  <<: *SSC_INIT_COND
  initial condition detail: 2 DUT which BLE is enabled, DUT1 connected with DUT2,
    DUT2 created GATT service 0xA000,DUT2 and DUT1 pairing
  check cmd set:
  - ''
  - - ASSERT
    - - ''
  restore cmd set:
  - ''
  # do wifi disconnect, to prevent wifi reconnect cause bad BLE performance
  - - SSC SSC[1-2] sta -D
    - []
  - - SSC SSC[1-2] bt -D -z init
    - - 'R SSC[1-2] C +BT:'
  - - SSC SSC[1-2] bt -D -z enable
    - - 'R SSC[1-2] C +BT:'
  - - SSC SSC[1-2] ble -R
    - - 'R SSC[1-2] C +BLE:'
  - - SSC SSC[1-2] bleconn -D -z all
    - - 'R SSC[1-2] C +BLECONN:'
  - - SSC SSC[1-2] blesmp -B -z clear
    - - R SSC[1-2] C +BLESMP:ClearBond,Succes
  - - SSC SSC[1-2] gatts -S -z delete
    - - 'R SSC[1-2] C +GATTS:'
  - - SSC SSC[1-2] gattc -U -z all
    - - R SSC[1-2] C +GATTC:OK
  - - SSC SSC[1-2] bleadv -D -z stop
    - - R SSC[1-2] C +BLEADV:OK
  - - SSC SSC2 bleadv -L -c 0 -t 3
    - - R SSC2 C +BLEADV:SetAdv,OK
  - - SSC SSC2 bleadv -D -z start
    - - R SSC2 C +BLEADV:OK
  - - SSC SSC2 gatts -S -z load -p 0xA0
    - - R SSC2 C +GATTS:StartService,OK,A000
  - - SSC SSC2 blesmp -S -z AuthReqMode -v 0x01
    - - P SSC2 C +BLESMP:OK
  - - SSC SSC2 blesmp -S -z IOCAP -v 0x03
    - - P SSC2 C +BLESMP:OK
  - - SSC SSC2 blesmp -S -z RspKey -v 0x03
    - - P SSC2 C +BLESMP:OK
  - - SSC SSC1 bleconn -C -p 0x10 -a <dut2_bt_mac>
    - - P SSC1 C +BLE:GattcConnect,OK
      - P SSC2 C +BLE:GattsConnect
  - - SSC SSC2 blesmp -E -r <dut1_bt_mac> -z Enc
    - - P SSC1 C +BLESMP:SecReq
  - - SSC SSC1 blesmp -R -a 1 -r <dut2_bt_mac>
    - - P SSC[1-2] C +BLESMP:AuthComplete,Success,0
  - - SSC SSC1 gattc -F -r <dut2_bt_mac>
    - - R SSC1 C +GATTC:OK
  force restore cmd set:
  - ''
  - - SSC SSC[1-2] reboot
    - - R SSC[1-2] C !!!ready!!!
  # do wifi disconnect, to prevent wifi reconnect cause bad BLE performance
  - - SSC SSC[1-2] sta -D
    - []
  - - SSC SSC[1-2] ble -R
    - - 'R SSC[1-2] C +BLE:'
  - - SSC SSC[1-2] bleconn -D -z all
    - - 'R SSC[1-2] C +BLECONN:'
  - - SSC SSC[1-2] blesmp -B -z clear
    - - R SSC[1-2] C +BLESMP:ClearBond,Succes
  - - SSC SSC[1-2] gatts -S -z delete
    - - 'R SSC[1-2] C +GATTS:'
  - - SSC SSC[1-2] gattc -U -z all
    - - R SSC[1-2] C +GATTC:OK
  - - SSC SSC[1-2] bleadv -D -z stop
    - - R SSC[1-2] C +BLEADV:OK
  - - SSC SSC2 bleadv -L -c 0 -t 3
    - - R SSC2 C +BLEADV:SetAdv,OK
  - - SSC SSC2 bleadv -D -z start
    - - R SSC2 C +BLEADV:OK
  - - SSC SSC2 gatts -S -z load -p 0xA0
    - - R SSC2 C +GATTS:StartService,OK,A000
  - - SSC SSC2 blesmp -S -z AuthReqMode -v 0x01
    - - P SSC2 C +BLESMP:OK
  - - SSC SSC2 blesmp -S -z IOCAP -v 0x03
    - - P SSC2 C +BLESMP:OK
  - - SSC SSC2 blesmp -S -z RspKey -v 0x03
    - - P SSC2 C +BLESMP:OK
  - - SSC SSC1 bleconn -C -p 0x10 -a <dut2_bt_mac>
    - - P SSC1 C +BLE:GattcConnect,OK
      - P SSC2 C +BLE:GattsConnect
  - - SSC SSC2 blesmp -E -r <dut1_bt_mac> -z Enc
    - - P SSC1 C +BLESMP:SecReq
  - - SSC SSC1 blesmp -R -a 1 -r <dut2_bt_mac>
    - - P SSC[1-2] C +BLESMP:AuthComplete,Success,0
  - - SSC SSC1 gattc -F -r <dut2_bt_mac>
    - - R SSC1 C +GATTC:OK
  restore post cmd set:
  - ''
  - - SSC SSC1 ram
    - - R SSC1 A <heap_size>:(\d+)
- tag: BLE_DEINIT1
  <<: *SSC_INIT_COND
  initial condition detail: 1 DUT which BLE is not enabled
  check cmd set:
  - ''
  - - SSC SSC1 bt -Q
    - - R SSC1 C +BT:status,DEINIT
  restore cmd set:
  - ''
  - - SSC SSC1 bt -D -z disable
    - - 'R SSC1 C +BT:'
  - - SSC SSC1 bt -D -z deinit
    - - 'R SSC1 C +BT:'
  - - SSC SSC1 bt -Q
    - - R SSC1 C +BT:status,DEINIT
  force restore cmd set:
  - ''
  - - SSC SSC1 reboot
    - - R SSC1 C !!!ready!!!
  - - SSC SSC1 bt -D -z stop
    - - R SSC1 C +BT:OK
  restore post cmd set:
  - ''
  - - SSC SSC1 ram
    - - R SSC1 A <heap_size>:(\d+)
- tag: BTC_DEINIT1
  <<: *SSC_INIT_COND
  initial condition detail: 1 DUT which BLE is not enabled
  check cmd set:
  - ''
  - - SSC SSC1 reboot
    - - R SSC1 C !!!ready!!!
  - - "SSC SSC1 btc -D -z disable"
    - ["R SSC1 C +BTC:OK"]
  - - "SSC SSC1 btc -D -z deinit"
    - ["R SSC1 C +BTC:OK"]
  - - SSC SSC1 btc -Q
    - - R SSC1 C +BTC:status,IDLE
  - - SSC SSC1 bt -D -z disable
    - - 'R SSC1 C +BT:'
  - - SSC SSC1 bt -D -z deinit
    - - 'R SSC1 C +BT:'
  - - SSC SSC1 bt -Q
    - - R SSC1 C +BT:status,DEINIT
  restore cmd set:
  - ''
  - - "SSC SSC1 btc -D -z disable"
    - ["R SSC1 C +BTC:OK"]
  - - "SSC SSC1 btc -D -z deinit"
    - ["R SSC1 C +BTC:OK"]
  - - SSC SSC1 btc -Q
    - - R SSC1 C +BTC:status,IDLE
  - - SSC SSC1 bt -D -z disable
    - - 'R SSC1 C +BT:'
  - - SSC SSC1 bt -D -z deinit
    - - 'R SSC1 C +BT:'
  - - SSC SSC1 bt -Q
    - - R SSC1 C +BT:status,DEINIT
  force restore cmd set:
  - ''
  - - SSC SSC1 reboot
    - - R SSC1 C !!!ready!!!
  - - SSC SSC1 btc -D -z stop
    - - R SSC1 C +BTC:OK
  - - SSC SSC1 bt -D -z stop
    - - R SSC1 C +BT:OK
  restore post cmd set:
  - ''
  - - SSC SSC1 ram
    - - R SSC1 A <heap_size>:(\d+)
- tag: BLE_INIT1
  <<: *SSC_INIT_COND
  initial condition detail: 1 DUT which BLE is enabled, no active connection
  check cmd set:
  - ''
  - - SSC SSC1 bt -Q
    - - R SSC1 C +BT:status,ENABLE
  - - SSC SSC1 ble -R
    - - 'R SSC1 C +BLE:'
  - - SSC SSC1 bleconn -Q
    - - R SSC1 C +BLECONN:ConnCount,0
  restore cmd set:
  - ''
  - - SSC SSC1 bt -D -z init
    - - 'R SSC1 C +BT:'
  - - SSC SSC1 bt -D -z enable
    - - 'R SSC1 C +BT:'
  - - SSC SSC1 ble -R
    - - 'R SSC1 C +BLE:'
  - - SSC SSC1 bleconn -D -z all
    - - 'R SSC1 C +BLECONN:'
  force restore cmd set:
  - ''
  - - SSC SSC1 reboot
    - - R SSC1 C !!!ready!!!
  - - SSC SSC1 bt -D -z init
    - - 'R SSC1 C +BT:'
  - - SSC SSC1 bt -D -z enable
    - - 'R SSC1 C +BT:'
  - - SSC SSC1 ble -R
    - - 'R SSC1 C +BLE:'
  restore post cmd set:
  - ''
  # do wifi disconnect, to prevent wifi reconnect cause bad BLE performance
  - - SSC SSC1 sta -D
    - []
  - - SSC SSC1 bleconn -D -z all
    - - 'R SSC1 C +BLECONN:'
  - - SSC SSC1 gatts -S -z delete
    - - 'R SSC1 C +GATTS:'
  - - SSC SSC1 gattc -U -z all
    - - R SSC1 C +GATTC:OK
  - - SSC SSC1 ram
    - - R SSC1 A <heap_size>:(\d+)
- tag: BLE_INIT2
  <<: *SSC_INIT_COND
  initial condition detail: 2 DUT which BLE is enabled, no active connection, DUT2
    load service 0xA0 and start adv
  check cmd set:
  - ''
  - - SSC SSC[1-2] bt -Q
    - - R SSC[1-2] C +BT:status,ENABLE
  restore cmd set:
  - ''
  - - SSC SSC[1-2] bt -D -z init
    - - 'R SSC[1-2] C +BT:'
  - - SSC SSC[1-2] bt -D -z enable
    - - 'R SSC[1-2] C +BT:'
  force restore cmd set:
  - ''
  - - SSC SSC[1-2] reboot
    - - R SSC[1-2] C !!!ready!!!
  - - SSC SSC[1-2] bt -D -z init
    - - 'R SSC[1-2] C +BT:'
  - - SSC SSC[1-2] bt -D -z enable
    - - 'R SSC[1-2] C +BT:'
  restore post cmd set:
  - ''
  # do wifi disconnect, to prevent wifi reconnect cause bad BLE performance
  - - SSC SSC[1-2] sta -D
    - []
  - - SSC SSC[1-2] ble -R
    - - 'R SSC[1-2] C +BLE:'
  - - SSC SSC[1-2] bleconn -D -z all
    - - 'R SSC[1-2] C +BLECONN:'
  - - SSC SSC[1-2] gatts -S -z delete
    - - 'R SSC[1-2] C +GATTS:'
  - - SSC SSC[1-2] gattc -U -z all
    - - R SSC[1-2] C +GATTC:OK
  - - SSC SSC2 gatts -S -z load -p 0xA0
    - - R SSC2 C +GATTS:StartService,OK,A000
  - - SSC SSC[1-2] bleadv -D -z stop
    - - R SSC[1-2] C +BLEADV:OK
  - - SSC SSC2 bleadv -L -c 0 -t 3
    - - R SSC2 C +BLEADV:SetAdv,OK
  - - SSC SSC2 bleadv -D -z start
    - - R SSC2 C +BLEADV:OK

  - - SSC SSC1 ram
    - - R SSC1 A <heap_size>:(\d+)
- tag: BLE_INIT3
  <<: *SSC_INIT_COND
  initial condition detail: 2 DUT which BLE is enabled, no active connection, DUT2
    load service 0xA2 and start adv
  check cmd set:
  - ''
  - - SSC SSC[1-2] bt -Q
    - - R SSC[1-2] C +BT:status,ENABLE
  restore cmd set:
  - ''
  - - SSC SSC[1-2] bt -D -z init
    - - 'R SSC[1-2] C +BT:'
  - - SSC SSC[1-2] bt -D -z enable
    - - 'R SSC[1-2] C +BT:'
  force restore cmd set:
  - ''
  - - SSC SSC[1-2] reboot
    - - R SSC[1-2] C !!!ready!!!
  - - SSC SSC[1-2] bt -D -z init
    - - 'R SSC[1-2] C +BT:'
  - - SSC SSC[1-2] bt -D -z enable
    - - 'R SSC[1-2] C +BT:'
  restore post cmd set:
  - ''
  - - SSC SSC[1-2] ble -R
    - - 'R SSC[1-2] C +BLE:'
  - - SSC SSC[1-2] bleconn -D -z all
    - - 'R SSC[1-2] C +BLECONN:'
  - - SSC SSC[1-2] gatts -S -z delete
    - - 'R SSC[1-2] C +GATTS:'
  - - SSC SSC[1-2] gattc -U -z all
    - - R SSC[1-2] C +GATTC:OK
  - - SSC SSC2 gatts -S -z load -p 0xA2
    - - R SSC2 C +GATTS:StartService,OK,A002
  - - SSC SSC[1-2] bleadv -D -z stop
    - - R SSC[1-2] C +BLEADV:OK
  - - SSC SSC2 bleadv -L -c 0 -t 3
    - - R SSC2 C +BLEADV:SetAdv,OK
  - - SSC SSC2 bleadv -D -z start
    - - R SSC2 C +BLEADV:OK
  - - SSC SSC1 ram
    - - R SSC1 A <heap_size>:(\d+)
- tag: BLE_INIT5
  <<: *SSC_INIT_COND
  initial condition detail: 5 DUT which BLE is enabled, no active connection
  check cmd set:
  - ''
  - - SSC SSC[1-5] bt -Q
    - - R SSC[1-5] C +BT:status,ENABLE
  restore cmd set:
  - ''
  - - SSC SSC[1-5] bt -D -z init
    - - 'R SSC[1-5] C +BT:'
  - - SSC SSC[1-5] bt -D -z enable
    - - 'R SSC[1-5] C +BT:'
  force restore cmd set:
  - ''
  - - SSC SSC[1-5] reboot
    - - R SSC[1-5] C !!!ready!!!
  - - SSC SSC[1-5] bt -D -z init
    - - 'R SSC[1-5] C +BT:'
  - - SSC SSC[1-5] bt -D -z enable
    - - 'R SSC[1-5] C +BT:'
  restore post cmd set:
  - ''
  # do wifi disconnect, to prevent wifi reconnect cause bad BLE performance
  - - SSC SSC[1-5] sta -D
    - []
  - - SSC SSC[1-5] ble -R
    - - 'R SSC[1-5] C +BLE:'
  - - SSC SSC[1-5] bleconn -D -z all
    - - 'R SSC[1-5] C +BLECONN:'
  - - SSC SSC[1-5] gatts -S -z delete
    - - 'R SSC[1-5] C +GATTS:'
  - - SSC SSC[1-2] gattc -U -z all
    - - R SSC[1-2] C +GATTC:OK
  - - "SSC SSC[2-5] gatts -S -z load -p 0xA0"
    - ["P SSC[2-5] C +GATTS:StartService,OK,A000"]
  - - SSC SSC[1-5] bleadv -D -z stop
    - - R SSC[1-5] C +BLEADV:OK
  - - SSC SSC1 gattc -F -r <dut2_bt_mac>
    - - R SSC1 C +GATTC:OK
  - - SSC SSC1 ram
    - - R SSC1 A <heap_size>:(\d+)
- tag: BLE_INIT_SMP
  <<: *SSC_INIT_COND
  initial condition detail: 2 DUT which BLE is enabled, no active connection, DUT2
    create GATT service 0xA002, DUT2 start adv, SMP enabled on both DUT and DUT1 load
    default initiator param, DUT2 load default responder param
  check cmd set:
  - ''
  - - ASSERT
    - - ''
  restore cmd set:
  - ''
  - - ASSERT
    - - ''
  force restore cmd set:
  - ''
  - - SSC SSC[1-2] reboot
    - - R SSC[1-2] C !!!ready!!!
  - - SSC SSC[1-2] ble -R
    - - 'R SSC[1-2] C +BLE:'
  - - SSC SSC[1-2] bleconn -D -z all
    - - 'R SSC[1-2] C +BLECONN:'
  - - SSC SSC[1-2] blesmp -B -z clear
    - - R SSC[1-2] C +BLESMP:ClearBond,Succes
  - - SSC SSC[1-2] gatts -S -z delete
    - - 'R SSC[1-2] C +GATTS:'
  - - SSC SSC[1-2] gattc -U -z all
    - - R SSC[1-2] C +GATTC:OK
  - - SSC SSC[1-2] bleadv -D -z stop
    - - R SSC[1-2] C +BLEADV:OK
  - - SSC SSC2 gatts -S -z load -p 0xA2
    - - R SSC2 C +GATTS:StartService,OK,A002
  - - SSC SSC2 bleadv -L -c 0 -t 3
    - - R SSC2 C +BLEADV:SetAdv,OK
  - - SSC SSC2 bleadv -D -z start
    - - R SSC2 C +BLEADV:OK
  - - SSC SSC[1-2] blesmp -L -c [1,0]
    - - R SSC[1-2] C +BLESMP:OK
  - - SSC SSC1 gattc -F -r <dut2_bt_mac>
    - - R SSC1 C +GATTC:OK
  - - SSC SSC1 ram
    - - R SSC1 A <heap_size>:(\d+)
  restore post cmd set:
  - ''
  # do wifi disconnect, to prevent wifi reconnect cause bad BLE performance
  - - SSC SSC[1-2] sta -D
    - []
  - - SSC SSC[1-2] ble -R
    - - 'R SSC[1-2] C +BLE:'
  - - SSC SSC[1-2] bleconn -D -z all
    - - 'R SSC[1-2] C +BLECONN:'
  - - SSC SSC[1-2] blesmp -B -z clear
    - - R SSC[1-2] C +BLESMP:ClearBond,Succes
  - - SSC SSC[1-2] gatts -S -z delete
    - - 'R SSC[1-2] C +GATTS:'
  - - SSC SSC[1-2] gattc -U -z all
    - - R SSC[1-2] C +GATTC:OK
  - - SSC SSC[1-2] bleadv -D -z stop
    - - R SSC[1-2] C +BLEADV:OK
  - - SSC SSC2 gatts -S -z load -p 0xA2
    - - R SSC2 C +GATTS:StartService,OK,A002
  - - SSC SSC2 bleadv -L -c 0 -t 3
    - - R SSC2 C +BLEADV:SetAdv,OK
  - - SSC SSC2 bleadv -D -z start
    - - R SSC2 C +BLEADV:OK
  - - SSC SSC[1-2] blesmp -L -c [1,0]
    - - R SSC[1-2] C +BLESMP:OK
  - - SSC SSC1 gattc -F -r <dut2_bt_mac>
    - - R SSC1 C +GATTC:OK
  - - SSC SSC1 ram
    - - R SSC1 A <heap_size>:(\d+)
- tag: BLE_INIT_SMP5
  <<: *SSC_INIT_COND
  initial condition detail: 5 DUT which BLE is enabled, no active connection, DUT5
    create GATT service 0xA000, DUT5 start adv, SMP enabled on both DUT and DUT5 load
    default initiator param, DUT5 load default responder param
  check cmd set:
  - ''
  - - ASSERT
    - - ''
  restore cmd set:
  - ''
  - - ASSERT
    - - ''
  force restore cmd set:
  - ''
  - - SSC SSC[1-5] reboot
    - - R SSC[1-5] C !!!ready!!!
  - - SSC SSC[1-5] ble -R
    - - 'R SSC[1-5] C +BLE:'
  - - SSC SSC[1-5] bleconn -D -z all
    - - 'R SSC[1-5] C +BLECONN:'
  - - SSC SSC[1-5] blesmp -B -z clear
    - - R SSC[1-5] C +BLESMP:ClearBond,Succes
  - - SSC SSC[1-5] gatts -S -z delete
    - - 'R SSC[1-5] C +GATTS:'
  - - SSC SSC[1-5] gattc -U -z all
    - - R SSC[1-5] C +GATTC:OK
  - - SSC SSC[1-5] bleadv -D -z stop
    - - R SSC[1-5] C +BLEADV:OK
  - - SSC SSC[2-5] gatts -S -z load -p 0xA0
    - - R SSC[2-5] C +GATTS:StartService,OK,A000
  - - SSC SSC[2-5] bleadv -L -c 0 -t 3
    - - R SSC[2-5] C +BLEADV:SetAdv,OK
  - - SSC SSC[2-5] bleadv -D -z start
    - - R SSC[2-5] C +BLEADV:OK
  - - SSC SSC[1-5] blesmp -L -c [1,0]
    - - R SSC[1-5] C +BLESMP:OK
  - - SSC SSC1 gattc -F -r <dut2_bt_mac>
    - - R SSC1 C +GATTC:OK
  - - SSC SSC1 ram
    - - R SSC1 A <heap_size>:(\d+)
  restore post cmd set:
  - ''
  - - SSC SSC[1-5] ble -R
    - - 'R SSC[1-5] C +BLE:'
  - - SSC SSC[1-5] bleconn -D -z all
    - - 'R SSC[1-5] C +BLECONN:'
  - - SSC SSC[1-5] blesmp -B -z clear
    - - R SSC[1-5] C +BLESMP:ClearBond,Succes
  - - SSC SSC[1-5] gatts -S -z delete
    - - 'R SSC[1-5] C +GATTS:'
  - - SSC SSC[1-5] gattc -U -z all
    - - R SSC[1-5] C +GATTC:OK
  - - SSC SSC[1-5] bleadv -D -z stop
    - - R SSC[1-5] C +BLEADV:OK
  - - SSC SSC[2-5] gatts -S -z load -p 0xA0
    - - R SSC[2-5] C +GATTS:StartService,OK,A000
  - - SSC SSC[2-5] bleadv -L -c 0 -t 3
    - - R SSC[2-5] C +BLEADV:SetAdv,OK
  - - SSC SSC[2-5] bleadv -D -z start
    - - R SSC[2-5] C +BLEADV:OK
  - - SSC SSC[1-5] blesmp -L -c [1,0]
    - - R SSC[1-5] C +BLESMP:OK
  # do wifi disconnect, to prevent wifi reconnect cause bad BLE performance
  - - SSC SSC[1-5] sta -D
    - []
  - - SSC SSC1 gattc -F -r <dut2_bt_mac>
    - - R SSC1 C +GATTC:OK
  - - SSC SSC1 ram
    - - R SSC1 A <heap_size>:(\d+)
- tag: NOW1
  <<: *SSC_INIT_COND
  initial condition detail: one target in AP mode and espnow is de-initialized
  check cmd set:
  - ''
  - *dut1_start_wifi
  - - SSC SSC1 op -Q
    - - R SSC1 C +CURMODE:2
  - - SSC SSC1 mac -Q -o 2
    - - R SSC1 P <target_ap_mac>
  - - SSC SSC1 espnow -D
    - - 'R SSC1 C +ESPNOW:'
  restore cmd set:
  - ''
  - - SSC SSC1 op -S -o 2
    - - R SSC1 C +MODE:OK
  - - SSC SSC1 mac -S -m <target_ap_mac> -o 2
    - - R SSC1 C +MAC:AP,OK
  - - SSC SSC1 espnow -D
    - - 'R SSC1 C +ESPNOW:'
  force restore cmd set:
  - ''
  - - SSC SSC[1-<dev_num>] reboot
    - - R SSC[1-<dev_num>] C !!!ready!!!
  - - SSC SSC1 op -S -o 2
    - - R SSC1 C +MODE:OK
  - - SSC SSC1 mac -S -m <target_ap_mac> -o 2
    - - R SSC1 C +MAC:AP,OK
  - - SSC SSC1 espnow -D
    - - 'R SSC1 C +ESPNOW:'
  restore post cmd set:
  - ''
  - - SSC SSC1 ram
    - - R SSC1 A <heap_size>:(\d+)
- tag: NOW2
  <<: *SSC_INIT_COND
  initial condition detail: multiple (<dev_num>) targets in AP mode, espnow is initialized
    with self role slave
  check cmd set:
  - ''
  - *dut1_start_wifi
  - - SSC SSC[1-<dev_num>] op -Q
    - - R SSC[1-<dev_num>] C +CURMODE:2
  - - SSC SSC[1-<dev_num>] mac -Q -o 3
    - - R SSC[1-<dev_num>] P <target[1-<dev_num>]_ap_mac> P <target[1-<dev_num>]_mac>
  - - SSC SSC[1-<dev_num>] espnow -D
    - - 'R SSC[1-<dev_num>] C +ESPNOW:'
  - - SSC SSC[1-<dev_num>] espnow -I
    - - R SSC[1-<dev_num>] C +ESPNOW:OK
  - - SSC SSC[1-<dev_num>] espnow -R -t Set -r 2
    - - R SSC[1-<dev_num>] C +ESPNOW:OK
  restore cmd set:
  - ''
  - - SSC SSC[1-<dev_num>] op -S -o 3
    - - R SSC[1-<dev_num>] C +MODE:OK
  - - SSC SSC[1-<dev_num>] mac -S -m <target[1-<dev_num>]_ap_mac> -o 2
    - - R SSC[1-<dev_num>] C +MAC:AP,OK
  - - SSC SSC[1-<dev_num>] mac -S -m <target[1-<dev_num>]_mac> -o 1
    - - R SSC[1-<dev_num>] C +MAC:STA,OK
  - - SSC SSC[1-<dev_num>] op -S -o 2
    - - R SSC[1-<dev_num>] C +MODE:OK
  - - SSC SSC[1-<dev_num>] espnow -D
    - - 'R SSC[1-<dev_num>] C +ESPNOW:'
  - - SSC SSC[1-<dev_num>] espnow -I
    - - R SSC[1-<dev_num>] C +ESPNOW:OK
  - - SSC SSC[1-<dev_num>] espnow -R -t Set -r 2
    - - R SSC[1-<dev_num>] C +ESPNOW:OK
  force restore cmd set:
  - ''
  - - SSC SSC[1-<dev_num>] reboot
    - - R SSC[1-<dev_num>] C !!!ready!!!
  - - SSC SSC[1-<dev_num>] op -S -o 3
    - - R SSC[1-<dev_num>] C +MODE:OK
  - - SSC SSC[1-<dev_num>] mac -S -m <target[1-<dev_num>]_ap_mac> -o 2
    - - R SSC[1-<dev_num>] C +MAC:AP,OK
  - - SSC SSC[1-<dev_num>] mac -S -m <target[1-<dev_num>]_mac> -o 1
    - - R SSC[1-<dev_num>] C +MAC:STA,OK
  - - SSC SSC[1-<dev_num>] op -S -o 2
    - - R SSC[1-<dev_num>] C +MODE:OK
  - - SSC SSC[1-<dev_num>] espnow -D
    - - 'R SSC[1-<dev_num>] C +ESPNOW:'
  - - SSC SSC[1-<dev_num>] espnow -I
    - - R SSC[1-<dev_num>] C +ESPNOW:OK
  - - SSC SSC[1-<dev_num>] espnow -R -t Set -r 2
    - - R SSC[1-<dev_num>] C +ESPNOW:OK
  restore post cmd set:
  - ''
  - - SSC SSC1 ram
    - - R SSC1 A <heap_size>:(\d+)
- tag: None
  <<: *SSC_INIT_COND
  initial condition detail: none
  check cmd set:
  - ''
  - - DELAY 0.1
    - - dummy
  restore cmd set:
  - ''
  - - DELAY 0.1
    - - dummy
  force restore cmd set:
  - ''
  - - SSC SSC1 reboot
    - - R SSC1 C !!!ready!!!
  restore post cmd set:
  - ''
  - - DELAY 0.1
    - - dummy
- tag: PAIR1
  <<: *SSC_INIT_COND
  initial condition detail: one target and simple is de-inited
  check cmd set:
  - ''
  - - SSC SSC1 sp -D
    - - R SSC1 C +SP:OK
  restore cmd set:
  - ''
  - - SSC SSC1 sp -D
    - - R SSC1 C +SP:OK
  force restore cmd set:
  - ''
  - - SSC SSC1 sp -D
    - - R SSC1 C +SP:OK
  restore post cmd set:
  - ''
  - - SSC SSC1 ram
    - - R SSC1 A <heap_size>:(\d+)
- tag: PAIR2
  <<: *SSC_INIT_COND
  initial condition detail: target1 in AP mode, target2 in STA mode, two targets de-init
    and init simple pair
  check cmd set:
  - ''
  - - SSC SSC[1,2] op -Q
    - - R SSC[1,2] C +MODE:[2,1]
  - - SSC SSC[1,2] mac -Q -o 3
    - - R SSC[1,2] P <target[1,2]_ap_mac> P <target[1,2]_mac>
  - - SSC SSC[1,2] sp -D
    - - R SSC[1,2] C +SP:OK
  - - SSC SSC[1,2] sp -I
    - - R SSC[1,2] C +SP:OK
  restore cmd set:
  - ''
  - - SSC SSC[1,2] op -S -o 3
    - - R SSC[1,2] C +MODE:OK
  - - SSC SSC[1,2] mac -S -m <target[1,2]_ap_mac> -o 2
    - - R SSC[1,2] C +MAC:AP,OK
  - - SSC SSC[1,2] mac -S -m <target[1,2]_mac> -o 1
    - - R SSC[1,2] C +MAC:STA,OK
  - - SSC SSC[1,2] op -S -o [2,1]
    - - R SSC[1,2] C +MODE:OK
  - - SSC SSC[1,2] sp -D
    - - R SSC[1,2] C +SP:OK
  - - SSC SSC[1,2] sp -I
    - - R SSC[1,2] C +SP:OK
  force restore cmd set:
  - ''
  - - SSC SSC[1,2] reboot
    - - R SSC[1,2] C !!!ready!!!
  - - SSC SSC[1,2] op -S -o 3
    - - R SSC[1,2] C +MODE:OK
  - - SSC SSC[1,2] mac -S -m <target[1,2]_ap_mac> -o 2
    - - R SSC[1,2] C +MAC:AP,OK
  - - SSC SSC[1,2] mac -S -m <target[1,2]_mac> -o 1
    - - R SSC[1,2] C +MAC:STA,OK
  - - SSC SSC[1,2] op -S -o [2,1]
    - - R SSC[1,2] C +MODE:OK
  - - SSC SSC[1,2] sp -D
    - - R SSC[1,2] C +SP:OK
  - - SSC SSC[1,2] sp -I
    - - R SSC[1,2] C +SP:OK
  restore post cmd set:
  - ''
  - - SSC SSC1 ram
    - - R SSC1 A <heap_size>:(\d+)
- tag: PAIR3
  <<: *SSC_INIT_COND
  initial condition detail: target1 and target2 in STA+AP mode, two targets de-init
    and init simple pair
  check cmd set:
  - ''
  - - SSC SSC[1,2] op -Q
    - - R SSC[1,2] C +MODE:[3,3]
  - - SSC SSC[1,2] mac -Q -o 3
    - - R SSC[1,2] P <target[1,2]_ap_mac> P <target[1,2]_mac>
  - - SSC SSC[1,2] sp -D
    - - R SSC[1,2] C +SP:OK
  - - SSC SSC[1,2] sp -I
    - - R SSC[1,2] C +SP:OK
  restore cmd set:
  - ''
  - - SSC SSC[1,2] op -S -o [3,3]
    - - R SSC[1,2] C +MODE:OK
  - - SSC SSC[1,2] mac -S -m <target[1,2]_ap_mac> -o 2
    - - R SSC[1,2] C +MAC:AP,OK
  - - SSC SSC[1,2] mac -S -m <target[1,2]_mac> -o 1
    - - R SSC[1,2] C +MAC:STA,OK
  - - SSC SSC[1,2] sp -D
    - - R SSC[1,2] C +SP:OK
  - - SSC SSC[1,2] sp -I
    - - R SSC[1,2] C +SP:OK
  force restore cmd set:
  - ''
  - - SSC SSC[1,2] reboot
    - - R SSC[1,2] C !!!ready!!!
  - - SSC SSC[1,2] op -S -o [3,3]
    - - R SSC[1,2] C +MODE:OK
  - - SSC SSC[1,2] mac -S -m <target[1,2]_ap_mac> -o 2
    - - R SSC[1,2] C +MAC:AP,OK
  - - SSC SSC[1,2] mac -S -m <target[1,2]_mac> -o 1
    - - R SSC[1,2] C +MAC:STA,OK
  - - SSC SSC[1,2] sp -D
    - - R SSC[1,2] C +SP:OK
  - - SSC SSC[1,2] sp -I
    - - R SSC[1,2] C +SP:OK
  restore post cmd set:
  - ''
  - - SSC SSC1 ram
    - - R SSC1 A <heap_size>:(\d+)
- tag: STAAP1
  <<: *SSC_INIT_COND
  initial condition detail: testing sta on sta + ap mode, quit AP (autogen by STAM1)
  check cmd set:
  - ''
  - *dut1_start_wifi
  - - SSC SSC1 op -Q
    - - R SSC1 C +CURMODE:3
  - - SSC SSC1 sta -D
    - - 'R SSC1 C +QAP:'
  - - SSC SSC1 dhcp -Q -o 1
    - - R SSC1 C +DHCP:STA,STARTED
  - - SSC SSC1 mac -Q -o 1
    - - R SSC1 P <target_mac>
  restore cmd set:
  - ''
  - - SSC SSC1 op -S -o 3
    - - R SSC1 C +MODE:OK
  - - SSC SSC1 sta -D
    - - 'R SSC1 C +QAP:'
  - - SSC SSC1 dhcp -S -o 1
    - - R SSC1 C +DHCP
  - - SSC SSC1 mac -S -o 1 -m <target_mac>
    - - R SSC1 C +MAC:STA,OK
  force restore cmd set:
  - ''
  - - SSC SSC1 reboot
    - - R SSC1 C !!!ready!!!
  - - SSC SSC1 op -S -o 3
    - - R SSC1 C +MODE:OK
  - - SSC SSC1 sta -D
    - - 'R SSC1 C +QAP:'
  - - SSC SSC1 dhcp -S -o 1
    - - R SSC1 C +DHCP
  - - SSC SSC1 mac -S -o 1 -m <target_mac>
    - - R SSC1 C +MAC:STA,OK
- tag: STAAP2
  <<: *SSC_INIT_COND
  initial condition detail: testing sta on sta + ap mode,  join AP, DHCP on (autogen
    by STAM2)
  check cmd set:
  - ''
  - *dut1_start_wifi
  - - SSC SSC1 op -Q
    - - R SSC1 C +CURMODE:3
  - - SSC SSC1 sta -Q
    - - R SSC1 RE "\+JAP:CONNECTED,%%s"%%(<ap_ssid>)
  - - SSC SSC1 dhcp -Q -o 1
    - - R SSC1 C +DHCP:STA,STARTED
  - - SSC SSC1 mac -Q -o 1
    - - R SSC1 P <target_mac>
  restore cmd set:
  - ''
  - - SSC SSC1 op -S -o 3
    - - R SSC1 C +MODE:OK
  - - SSC SSC1 dhcp -S -o 1
    - - R SSC1 C +DHCP
  - - SSC SSC1 mac -S -o 1 -m <target_mac>
    - - R SSC1 C +MAC:STA,OK
  - - SSC SSC1 sta -C -s <ap_ssid> -p <ap_password>
    - - R SSC1 RE "\+JAP:CONNECTED,%%s"%%(<ap_ssid>)
  force restore cmd set:
  - ''
  - - SSC SSC1 reboot
    - - R SSC1 C !!!ready!!!
  - - SSC SSC1 op -S -o 3
    - - R SSC1 C +MODE:OK
  - - SSC SSC1 dhcp -S -o 1
    - - R SSC1 C +DHCP
  - - SSC SSC1 mac -S -o 1 -m <target_mac>
    - - R SSC1 C +MAC:STA,OK
  - - SSC SSC1 sta -C -s <ap_ssid> -p <ap_password>
    - - R SSC1 RE "\+JAP:CONNECTED,%%s"%%(<ap_ssid>)
- tag: STAM1
  <<: *SSC_INIT_COND
  initial condition detail: sta mode, quit AP, DHCP on, will autogen a TC with initial
    condition STAAP1
  check cmd set:
  - ''
  - *dut1_start_wifi
  - - SSC SSC1 op -Q
    - - R SSC1 C +CURMODE:1
  - - SSC SSC1 sta -D
    - - 'R SSC1 C +QAP:'
  - - SSC SSC1 dhcp -Q -o 1
    - - R SSC1 C +DHCP:STA,STARTED
  - - SSC SSC1 mac -Q -o 1
    - - R SSC1 P <target_mac>
  restore cmd set:
  - ''
  - - SSC SSC1 op -S -o 1
    - - R SSC1 C +MODE:OK
  - - SSC SSC1 sta -D
    - - 'R SSC1 C +QAP:'
  - - SSC SSC1 dhcp -S -o 1
    - - R SSC1 C +DHCP
  - - SSC SSC1 mac -S -o 1 -m <target_mac>
    - - R SSC1 C +MAC:STA,OK
  force restore cmd set:
  - ''
  - - SSC SSC1 reboot
    - - R SSC1 C !!!ready!!!
  - - SSC SSC1 op -S -o 1
    - - R SSC1 C +MODE:OK
  - - SSC SSC1 sta -D
    - - 'R SSC1 C +QAP:'
  - - SSC SSC1 dhcp -S -o 1
    - - R SSC1 C +DHCP
  - - SSC SSC1 mac -S -o 1 -m <target_mac>
    - - R SSC1 C +MAC:STA,OK
- tag: STAM2
  <<: *SSC_INIT_COND
  initial condition detail: sta mode, join AP, DHCP on, will autogen a TC with initial
    condition STAAP2
  check cmd set:
  - ''
  - *dut1_start_wifi
  - - SSC SSC1 op -Q
    - - R SSC1 C +CURMODE:1
  - - SSC SSC1 sta -Q
    - - R SSC1 RE "\+JAP:CONNECTED,%%s"%%(<ap_ssid>)
  - - SSC SSC1 dhcp -Q -o 1
    - - R SSC1 C +DHCP:STA,STARTED
  - - SSC SSC1 mac -Q -o 1
    - - R SSC1 P <target_mac>
  restore cmd set:
  - ''
  - - SSC SSC1 op -S -o 1
    - - R SSC1 C +MODE:OK
  - - SSC SSC1 dhcp -S -o 1
    - - R SSC1 C +DHCP
  - - SSC SSC1 mac -S -o 1 -m <target_mac>
    - - R SSC1 C +MAC:STA,OK
  - - SSC SSC1 sta -C -s <ap_ssid> -p <ap_password>
    - - R SSC1 RE "\+JAP:CONNECTED,%%s"%%(<ap_ssid>)
  force restore cmd set:
  - ''
  - - SSC SSC1 reboot
    - - R SSC1 C !!!ready!!!
  - - SSC SSC1 op -S -o 1
    - - R SSC1 C +MODE:OK
  - - SSC SSC1 dhcp -S -o 1
    - - R SSC1 C +DHCP
  - - SSC SSC1 mac -S -o 1 -m <target_mac>
    - - R SSC1 C +MAC:STA,OK
  - - SSC SSC1 sta -C -s <ap_ssid> -p <ap_password>
    - - R SSC1 RE "\+JAP:CONNECTED,%%s"%%(<ap_ssid>)
- tag: STAO1
  <<: *SSC_INIT_COND
  initial condition detail: sta mode, quit AP, will NOT autogen a TC with initial
    condition STAAP1
  check cmd set:
  - ''
  - *dut1_start_wifi
  - - SSC SSC1 op -Q
    - - R SSC1 C +CURMODE:1
  - - SSC SSC1 sta -D
    - - 'R SSC1 C +QAP:'
  - - SSC SSC1 dhcp -Q -o 1
    - - R SSC1 C +DHCP:STA,STARTED
  - - SSC SSC1 mac -Q -o 1
    - - R SSC1 P <target_mac>
  restore cmd set:
  - ''
  - - SSC SSC1 op -S -o 1
    - - R SSC1 C +MODE:OK
  - - SSC SSC1 sta -D
    - - 'R SSC1 C +QAP:'
  - - SSC SSC1 dhcp -S -o 1
    - - R SSC1 C +DHCP
  - - SSC SSC1 mac -S -o 1 -m <target_mac>
    - - R SSC1 C +MAC:STA,OK
  force restore cmd set:
  - ''
  - - SSC SSC1 reboot
    - - R SSC1 C !!!ready!!!
  - - SSC SSC1 op -S -o 1
    - - R SSC1 C +MODE:OK
  - - SSC SSC1 sta -D
    - - 'R SSC1 C +QAP:'
  - - SSC SSC1 dhcp -S -o 1
    - - R SSC1 C +DHCP
  - - SSC SSC1 mac -S -o 1 -m <target_mac>
    - - R SSC1 C +MAC:STA,OK
- tag: STAO2
  <<: *SSC_INIT_COND
  initial condition detail: sta mode, join AP, DHCP on, will NOT autogen a TC with
    initial condition STAAP2
  check cmd set:
  - ''
  - *dut1_start_wifi
  - - SSC SSC1 op -Q
    - - R SSC1 C +CURMODE:1
  - - SSC SSC1 sta -Q
    - - R SSC1 RE "\+JAP:CONNECTED,%%s"%%(<ap_ssid>)
  - - SSC SSC1 dhcp -Q -o 1
    - - R SSC1 C +DHCP:STA,STARTED
  - - SSC SSC1 mac -Q -o 1
    - - R SSC1 P <target_mac>
  restore cmd set:
  - ''
  - - SSC SSC1 op -S -o 1
    - - R SSC1 C +MODE:OK
  - - SSC SSC1 dhcp -S -o 1
    - - R SSC1 C +DHCP
  - - SSC SSC1 mac -S -o 1 -m <target_mac>
    - - R SSC1 C +MAC:STA,OK
  - - SSC SSC1 sta -C -s <ap_ssid> -p <ap_password>
    - - R SSC1 RE "\+JAP:CONNECTED,%%s"%%(<ap_ssid>)
  force restore cmd set:
  - ''
  - - SSC SSC1 reboot
    - - R SSC1 C !!!ready!!!
  - - SSC SSC1 op -S -o 1
    - - R SSC1 C +MODE:OK
  - - SSC SSC1 dhcp -S -o 1
    - - R SSC1 C +DHCP
  - - SSC SSC1 mac -S -o 1 -m <target_mac>
    - - R SSC1 C +MAC:STA,OK
  - - SSC SSC1 sta -C -s <ap_ssid> -p <ap_password>
    - - R SSC1 RE "\+JAP:CONNECTED,%%s"%%(<ap_ssid>)
- tag: STAWIFISTO
  <<: *SSC_INIT_COND
  initial condition detail: STA mode,  wifi will stop with initial condition STAWIFISTO
  check cmd set:
  - ''
  - - SSC SSC1 op -Q
    - - R SSC1 C +CURMODE:1
  - - SSC SSC1 op -W -a init
    - - R SSC1 C +MODE:OK
  - - SSC SSC1 op -W -a start
    - - R SSC1 C +MODE:OK
  - - SSC SSC1 op -W -a stop
    - - R SSC1 C +MODE:OK
  restore cmd set:
  - ''
  - - SSC SSC1 op -S -o 1
    - - R SSC1 C +MODE:OK
  - - SSC SSC1 op -W -a init
    - - R SSC1 C +MODE:OK
  - - SSC SSC1 op -W -a start
    - - R SSC1 C +MODE:OK
  - - SSC SSC1 op -W -a stop
    - - R SSC1 C +MODE:OK
  force restore cmd set:
  - ''
  - - SSC SSC1 reboot
    - - R SSC1 C !!!ready!!!
  - - SSC SSC1 op -S -o 1
    - - R SSC1 C +MODE:OK
  - - SSC SSC1 op -W -a init
    - - R SSC1 C +MODE:OK
  - - SSC SSC1 op -W -a start
    - - R SSC1 C +MODE:OK
  - - SSC SSC1 op -W -a stop
    - - R SSC1 C +MODE:OK
- tag: T1_ETH
  <<: *SSC_INIT_COND
  initial condition detail: ethernet is enabled and got IP from AP
  check cmd set:
  - ''
  - - SSC SSC1 eth -N
    - - R SSC1 C +ETHNET:OK
  - - SSC SSC1 eth -E
    - - R SSC1 C +ETHNET:IP
  - - SSC SSC1 ip -I
    - - R SSC1 C +ETHIP:192.168
  restore cmd set:
  - ''
  - - SSC SSC1 reboot
    - - R SSC1 C !!!ready!!!
  - - SSC SSC1 eth -N
    - - R SSC1 C +ETHNET:OK
  - - SSC SSC1 eth -E
    - - R SSC1 C +ETHNET:IP
  - - SSC SSC1 ip -I
    - - R SSC1 C +ETHIP:192.168
  force restore cmd set:
  - ''
  - - SSC SSC1 restore
    - - R SSC1 C !!!ready!!!
  - - SSC SSC1 eth -N
    - - R SSC1 C +ETHNET:OK
  - - SSC SSC1 eth -E
    - - R SSC1 C +ETHNET:IP
  - - SSC SSC1 ip -I
    - - R SSC1 C +ETHIP:192.168
- tag: T2O_1
  <<: *SSC_INIT_COND
  initial condition detail: same as T2_1 but will NOT autogen a TC with initial condition
    T2_2
  check cmd set:
  - ''
  - *dut1_start_wifi
  - - SSC SSC1 op -Q
    - - R SSC1 C +CURMODE:2
  - - SSC SSC2 op -Q
    - - R SSC2 C +CURMODE:1
  - - SSC SSC2 sta -D
    - - 'R SSC2 C +QAP:'
  - - SSC SSC2 soc -T
    - - ''
  - - SSC SSC1 dhcp -Q -o 2
    - - R SSC1 C +DHCP:AP,STARTED
  - - SSC SSC2 dhcp -Q -o 1
    - - R SSC2 C +DHCP:STA,STARTED
  - - SSC SSC1 mac -Q -o 2
    - - R SSC1 P <target_ap_mac>
  - - SSC SSC2 mac -Q -o 1
    - - R SSC2 P <target2_mac>
  restore cmd set:
  - ''
  - - SSC SSC1 op -S -o 2
    - - R SSC1 C +MODE:OK
  - - SSC SSC2 op -S -o 1
    - - R SSC2 C +MODE:OK
  - - SSC SSC2 sta -D
    - - 'R SSC2 C +QAP:'
  - - SSC SSC2 soc -T
    - - ''
  - - SSC SSC1 dhcp -S -o 2
    - - R SSC1 C +DHCP
  - - SSC SSC2 dhcp -S -o 1
    - - R SSC2 C +DHCP
  - - SSC SSC1 mac -S -o 2 -m <target_ap_mac>
    - - R SSC1 C +MAC:AP,OK
  - - SSC SSC2 mac -S -o 1 -m <target2_mac>
    - - R SSC2 C +MAC:STA,OK
  force restore cmd set:
  - ''
  - - SSC SSC1 reboot
    - - R SSC1 C !!!ready!!!
  - - SSC SSC2 reboot
    - - R SSC2 C !!!ready!!!
  - - SSC SSC1 op -S -o 2
    - - R SSC1 C +MODE:OK
  - - SSC SSC2 op -S -o 1
    - - R SSC2 C +MODE:OK
  - - SSC SSC2 sta -D
    - - 'R SSC2 C +QAP:'
  - - SSC SSC2 soc -T
    - - ''
  - - SSC SSC1 dhcp -S -o 2
    - - R SSC1 C +DHCP
  - - SSC SSC2 dhcp -S -o 1
    - - R SSC2 C +DHCP
  - - SSC SSC1 mac -S -o 2 -m <target_ap_mac>
    - - R SSC1 C +MAC:AP,OK
  - - SSC SSC2 mac -S -o 1 -m <target2_mac>
    - - R SSC2 C +MAC:STA,OK
- tag: T2_1
  <<: *SSC_INIT_COND
  initial condition detail: target 1 as SoftAP, target 2 as STA, will autogen a TC
    with initial condition T2_2
  check cmd set:
  - ''
  - *dut1_start_wifi
  - - SSC SSC1 op -Q
    - - R SSC1 C +CURMODE:2
  - - SSC SSC2 op -Q
    - - R SSC2 C +CURMODE:1
  - - SSC SSC2 sta -D
    - - 'R SSC2 C +QAP:'
  - - SSC SSC2 soc -T
    - - ''
  - - SSC SSC1 dhcp -Q -o 2
    - - R SSC1 C +DHCP:AP,STARTED
  - - SSC SSC2 dhcp -Q -o 1
    - - R SSC2 C +DHCP:STA,STARTED
  - - SSC SSC1 mac -Q -o 2
    - - R SSC1 P <target_ap_mac>
  - - SSC SSC2 mac -Q -o 1
    - - R SSC2 P <target2_mac>
  restore cmd set:
  - ''
  - - SSC SSC1 op -S -o 2
    - - R SSC1 C +MODE:OK
  - - SSC SSC2 op -S -o 1
    - - R SSC2 C +MODE:OK
  - - SSC SSC2 sta -D
    - - 'R SSC2 C +QAP:'
  - - SSC SSC2 soc -T
    - - ''
  - - SSC SSC1 dhcp -S -o 2
    - - R SSC1 C +DHCP
  - - SSC SSC2 dhcp -S -o 1
    - - R SSC2 C +DHCP
  - - SSC SSC1 mac -S -o 2 -m <target_ap_mac>
    - - R SSC1 C +MAC:AP,OK
  - - SSC SSC2 mac -S -o 1 -m <target2_mac>
    - - R SSC2 C +MAC:STA,OK
  force restore cmd set:
  - ''
  - - SSC SSC1 reboot
    - - R SSC1 C !!!ready!!!
  - - SSC SSC2 reboot
    - - R SSC2 C !!!ready!!!
  - - SSC SSC1 op -S -o 2
    - - R SSC1 C +MODE:OK
  - - SSC SSC2 op -S -o 1
    - - R SSC2 C +MODE:OK
  - - SSC SSC2 sta -D
    - - 'R SSC2 C +QAP:'
  - - SSC SSC2 soc -T
    - - ''
  - - SSC SSC1 dhcp -S -o 2
    - - R SSC1 C +DHCP
  - - SSC SSC2 dhcp -S -o 1
    - - R SSC2 C +DHCP
  - - SSC SSC1 mac -S -o 2 -m <target_ap_mac>
    - - R SSC1 C +MAC:AP,OK
  - - SSC SSC2 mac -S -o 1 -m <target2_mac>
    - - R SSC2 C +MAC:STA,OK
- tag: T2_2
  <<: *SSC_INIT_COND
  initial condition detail: target 1 as AP+STA, target 2 as AP+STA (autogen)
  check cmd set:
  - ''
  - *dut1_start_wifi
  - - SSC SSC1 op -Q
    - - R SSC1 C +CURMODE:3
  - - SSC SSC2 op -Q
    - - R SSC2 C +CURMODE:3
  - - SSC SSC2 sta -D
    - - 'R SSC2 C +QAP:'
  - - SSC SSC2 soc -T
    - - R SSC2 C +CLOSEALL
  - - SSC SSC1 dhcp -Q -o 2
    - - R SSC1 C +DHCP:AP,STARTED
  - - SSC SSC2 dhcp -Q -o 1
    - - R SSC2 C +DHCP:STA,STARTED
  - - SSC SSC1 mac -Q -o 2
    - - R SSC1 P <target_ap_mac>
  - - SSC SSC2 mac -Q -o 1
    - - R SSC2 P <target2_mac>
  restore cmd set:
  - ''
  - - SSC SSC1 op -S -o 3
    - - R SSC1 C +MODE:OK
  - - SSC SSC2 op -S -o 3
    - - R SSC2 C +MODE:OK
  - - SSC SSC2 sta -D
    - - 'R SSC2 C +QAP:'
  - - SSC SSC2 soc -T
    - - R SSC2 C +CLOSEALL
  - - SSC SSC1 dhcp -S -o 2
    - - R SSC1 C +DHCP
  - - SSC SSC2 dhcp -S -o 1
    - - R SSC2 C +DHCP
  - - SSC SSC1 mac -S -o 2 -m <target_ap_mac>
    - - R SSC1 C +MAC:AP,OK
  - - SSC SSC2 mac -S -o 1 -m <target2_mac>
    - - R SSC2 C +MAC:STA,OK
  force restore cmd set:
  - ''
  - - SSC SSC1 reboot
    - - R SSC1 C !!!ready!!!
  - - SSC SSC2 reboot
    - - R SSC2 C !!!ready!!!
  - - SSC SSC1 op -S -o 3
    - - R SSC1 C +MODE:OK
  - - SSC SSC2 op -S -o 3
    - - R SSC2 C +MODE:OK
  - - SSC SSC2 sta -D
    - - 'R SSC2 C +QAP:'
  - - SSC SSC2 soc -T
    - - R SSC2 C +CLOSEALL
  - - SSC SSC1 dhcp -S -o 2
    - - R SSC1 C +DHCP
  - - SSC SSC2 dhcp -S -o 1
    - - R SSC2 C +DHCP
  - - SSC SSC1 mac -S -o 2 -m <target_ap_mac>
    - - R SSC1 C +MAC:AP,OK
  - - SSC SSC2 mac -S -o 1 -m <target2_mac>
    - - R SSC2 C +MAC:STA,OK
- tag: T3_PHY1
  <<: *SSC_INIT_COND
  initial condition detail: |-
    1. target 1 and target 2 set to AP+STA mode, target 3 set to STA mode
    2. all interface of target 2,3 set to 11n ht40
    3. config softAP of target 1 and target 2
  check cmd set:
  - ''
  - - SSC SSC[1-3] op -Q
    - - R SSC[1-3] C +CURMODE:3
  - - SSC SSC[1-3] phy -Q -o 3
    - - R SSC[1-3] C STA,n,40 C AP,n,40
  restore cmd set:
  - ''
  - - SSC SSC[1-3] op -S -o 3
    - - R SSC[1-3] C +MODE:OK
  - - SSC SSC[1-3] phy -S -o 3 -m n -b 40
    - - R SSC[1-3] C +PHY:OK
  force restore cmd set:
  - ''
  - - SSC SSC[1-3] reboot
    - - R SSC[1-3] C !!!ready!!!
  - - SSC SSC[1-3] op -S -o 3
    - - R SSC[1-3] C +MODE:OK
  - - SSC SSC[1-3] phy -S -o 3 -m n -b 40
    - - R SSC[1-3] C +PHY:OK
  restore post cmd set:
  - ''
  - - SSC SSC1 soc -T
    - - R SSC1 C +CLOSEALL
  - - SSC SSC1 sta -R -r 1
    - - R SSC1 C OK
  - - SSC SSC1 ram
    - - R SSC1 A <heap_size>:(\d+)
- tag: WIFIBTSTOP
  <<: *SSC_INIT_COND
  initial condition detail: bt controller and host will be disabled and deinit with
    initial condition wifibtstop
  check cmd set:
  - ''
  - - SSC SSC1 op -Q
    - - R SSC1 C +CURMODE:3
  - - SSC SSC1 op -W -a init
    - - R SSC1 C +MODE:OK
  - - SSC SSC1 op -W -a start
    - - R SSC1 C +MODE:OK
  - - SSC SSC1 op -W -a stop
    - - R SSC1 C +MODE:OK
  - - SSC SSC1 op -W -a deinit
    - - R SSC1 C +MODE:OK
  - - SSC SSC1 btc -D -z stop
    - - 'R SSC1 C +BTC:'
  - - SSC SSC1 bt -D -z stop
    - - 'R SSC1 C +BT:'
  - - SSC SSC1 bt -D -z disable
    - - 'R SSC1 C +BT:'
  - - SSC SSC1 bt -D -z deinit
    - - 'R SSC1 C +BT:'
  restore cmd set:
  - ''
  - - SSC SSC1 op -S -o 3
    - - R SSC1 C +MODE:OK
  - - SSC SSC1 op -W -a init
    - - R SSC1 C +MODE:OK
  - - SSC SSC1 op -W -a start
    - - R SSC1 C +MODE:OK
  - - SSC SSC1 op -W -a stop
    - - R SSC1 C +MODE:OK
  - - SSC SSC1 op -W -a deinit
    - - R SSC1 C +MODE:OK
  - - SSC SSC1 btc -D -z stop
    - - 'R SSC1 C +BTC:'
  - - SSC SSC1 bt -D -z stop
    - - 'R SSC1 C +BT:'
  - - SSC SSC1 bt -D -z disable
    - - 'R SSC1 C +BT:'
  - - SSC SSC1 bt -D -z deinit
    - - 'R SSC1 C +BT:'
  force restore cmd set:
  - ''
  - - SSC SSC1 reboot
    - - R SSC1 C !!!ready!!!
  - - SSC SSC1 op -S -o 3
    - - R SSC1 C +MODE:OK
  - - SSC SSC1 op -W -a init
    - - R SSC1 C +MODE:OK
  - - SSC SSC1 op -W -a start
    - - R SSC1 C +MODE:OK
  - - SSC SSC1 op -W -a stop
    - - R SSC1 C +MODE:OK
  - - SSC SSC1 op -W -a deinit
    - - R SSC1 C +MODE:OK
  - - SSC SSC1 btc -D -z stop
    - - 'R SSC1 C +BTC:'
  - - SSC SSC1 bt -D -z stop
    - - 'R SSC1 C +BT:'
  - - SSC SSC1 bt -D -z disable
    - - 'R SSC1 C +BT:'
  - - SSC SSC1 bt -D -z deinit
    - - 'R SSC1 C +BT:'
- tag: WIFISTO
  <<: *SSC_INIT_COND
  initial condition detail: wifi will stop with initial condition WIFISTO
  check cmd set:
  - ''
  - - SSC SSC1 op -W -a init
    - - R SSC1 C +MODE:OK
  - - SSC SSC1 op -W -a start
    - - R SSC1 C +MODE:OK
  - - SSC SSC1 op -W -a stop
    - - R SSC1 C +MODE:OK
  restore cmd set:
  - ''
  - - SSC SSC1 op -W -a init
    - - R SSC1 C +MODE:OK
  - - SSC SSC1 op -W -a start
    - - R SSC1 C +MODE:OK
  - - SSC SSC1 op -W -a stop
    - - R SSC1 C +MODE:OK
  force restore cmd set:
  - ''
  - - SSC SSC1 reboot
    - - R SSC1 C !!!ready!!!
  - - SSC SSC1 op -W -a init
    - - R SSC1 C +MODE:OK
  - - SSC SSC1 op -W -a start
    - - R SSC1 C +MODE:OK
  - - SSC SSC1 op -W -a stop
    - - R SSC1 C +MODE:OK
- tag: BLE_INIT_REBOOT2
  <<: *SSC_INIT_COND
  initial condition detail: 2 DUT should reboot at first and BLE is enabled, no active connection
  check cmd set:
  - ''
  - - SSC SSC[1-2] reboot
    - - R SSC[1-2] C !!!ready!!!
  - - SSC SSC[1-2] ble -R
    - - 'R SSC[1-2] C +BLE:'
  restore cmd set:
  - ''
  - - SSC SSC[1-2] bt -D -z init
    - - 'R SSC[1-2] C +BT:'
  - - SSC SSC[1-2] bt -D -z enable
    - - 'R SSC[1-2] C +BT:'
  force restore cmd set:
  - ''
  - - SSC SSC[1-2] reboot
    - - R SSC[1-2] C !!!ready!!!
  - - SSC SSC[1-2] bt -D -z init
    - - 'R SSC[1-2] C +BT:'
  - - SSC SSC[1-2] bt -D -z enable
    - - 'R SSC[1-2] C +BT:'
  restore post cmd set:
  - ''
  - - SSC SSC[1-2] ble -R
    - - 'R SSC[1-2] C +BLE:'
  - - SSC SSC[1-2] bleconn -D -z all
    - - 'R SSC[1-2] C +BLECONN:'
  - - SSC SSC[1-2] gatts -S -z delete
    - - 'R SSC[1-2] C +GATTS:'
  - - SSC SSC[1-2] gattc -U -z all
    - - R SSC[1-2] C +GATTC:OK
  - - SSC SSC[1-2] bleadv -D -z stop
    - - R SSC[1-2] C +BLEADV:OK
  - - SSC SSC1 ram
    - - R SSC1 A <heap_size>:(\d+)
- tag: T3_1
  <<: *SSC_INIT_COND
  initial condition detail: target 1 as SoftAP + STA, target 2 as SoftAP, target 3 as STA
      with initial condition T2_2
  check cmd set:
  - ''
  - *dut1_start_wifi
  - - SSC SSC1 op -Q
    - - R SSC1 C +CURMODE:3
  - - SSC SSC2 op -Q
    - - R SSC2 C +CURMODE:2
  - - SSC SSC3 op -Q
    - - R SSC3 C +CURMODE:1
  - - SSC SSC3 sta -D
    - - 'R SSC3 C +QAP:'
  restore cmd set:
  - ''
  - - SSC SSC1 op -S -o 3
    - - R SSC1 C +MODE:OK
  - - SSC SSC2 op -S -o 2
    - - R SSC2 C +MODE:OK
  - - SSC SSC3 op -S -o 1
    - - R SSC3 C +MODE:OK
  - - SSC SSC3 sta -D
    - - 'R SSC3 C +QAP:'
  force restore cmd set:
  - ''
  - - SSC SSC1 reboot
    - - R SSC1 C !!!ready!!!
  - - SSC SSC2 reboot
    - - R SSC2 C !!!ready!!!
  - - SSC SSC3 reboot
    - - R SSC3 C !!!ready!!!
  - - SSC SSC1 op -S -o 3
    - - R SSC1 C +MODE:OK
  - - SSC SSC2 op -S -o 2
    - - R SSC2 C +MODE:OK
  - - SSC SSC3 op -S -o 1
    - - R SSC3 C +MODE:OK
  - - SSC SSC3 sta -D
    - - 'R SSC3 C +QAP:'
