test cases:
- CI ready: 'Yes'
  ID: TCPIP_IGMP_0101
  SDK: |-
    8266_NonOS
  Test App: SSC
  allow fail: ''
  auto test: 'Yes'
  category: Function
  cmd set:
  - ''
  - - SSC SSC1 igmp -J -h <target_ip> -m 224.1.1.1
    - - R SSC1 C +IGMP:OK
  - - SSC SSC1 igmp -L -h <target_ip> -m 224.1.1.1
    - - R SSC1 C +IGMP:OK
  - - SSC SSC1 igmp -J -h <target_ip> -m 223.1.1.1
    - - R SSC1 C +IGMP:ERROR
  - - SSC SSC1 igmp -J -h <target_ip> -m 240.1.1.1
    - - R SSC1 C +IGMP:ERROR
  - - SSC SSC1 igmp -J -h 192.168.237.77 -m 224.1.1.1
    - - R SSC1 C +IGMP:ERROR
  - - SSC SSC1 igmp -J -h 192.168.237.77 -m 240.1.1.1
    - - R SSC1 C +IGMP:ERROR
  execution time: 0.0
  expected result: |-
    1. success
    2. success
    3. failed
    4. failed
    5. failed
    6. failed
  initial condition: STAM2
  level: Integration
  module: TCPIP
  steps: |-
    1. join group with correct host addr and multicast addr
    2. leave group with correct host addr and multicast addr
    3. join group with correct host addr and wrong multicast addr
    4. join group with correct host addr and wrong multicast addr
    5. join group with wrong host addr and correct multicast addr
    6. join group with wrong host addr and wrong multicast addr
  sub module: IGMP
  summary: station IGMP join group address check
  test environment: SSC_T1_5
  test point 1: basic function
  test point 2: IGMP API parameter check
  version: v1 (2016-8-15)
- CI ready: 'Yes'
  ID: TCPIP_IGMP_0102
  SDK: |-
    8266_NonOS
  Test App: SSC
  allow fail: ''
  auto test: 'Yes'
  category: Function
  cmd set:
  - ''
  - - SSC SSC1 igmp -J -h <target_ip> -m 224.1.1.1
    - - R SSC1 C +IGMP:OK
  - - SSC SSC1 igmp -L -h <target_ip> -m 224.1.1.2
    - - R SSC1 C +IGMP:ERROR
  - - SSC SSC1 igmp -L -h 192.168.237.77 -m 224.1.1.1
    - - R SSC1 C +IGMP:ERROR
  - - SSC SSC1 igmp -L -h 192.168.237.77 -m 240.1.1.1
    - - R SSC1 C +IGMP:ERROR
  - - SSC SSC1 igmp -L -h <target_ip> -m 224.1.1.1
    - - R SSC1 C +IGMP:OK
  execution time: 0.0
  expected result: |-
    1. success
    2. failed
    3. failed
    4. failed
    5. succeed
  initial condition: STAM2
  level: Integration
  module: TCPIP
  steps: |-
    1. join group with correct host addr and multicast addr
    2. leave group with correct host addr and wrong multicast addr
    3. leave group with wrong host addr and correct multicast addr
    4. leave group with wrong host addr and wrong multicast addr
    5. leave group with correct host addr and correct multicast addr
  sub module: IGMP
  summary: station IGMP leave group address check
  test environment: SSC_T1_5
  test point 1: basic function
  test point 2: IGMP API parameter check
  version: v1 (2016-8-15)
- CI ready: 'Yes'
  ID: TCPIP_IGMP_0103
  SDK: |-
    8266_NonOS
  Test App: SSC
  allow fail: ''
  auto test: 'Yes'
  category: Function
  cmd set:
  - ''
  - - SSC SSC1 igmp -J -h <target_ap_ip> -m 224.1.1.1
    - - R SSC1 C +IGMP:OK
  - - SSC SSC1 igmp -L -h <target_ap_ip> -m 224.1.1.1
    - - R SSC1 C +IGMP:OK
  - - SSC SSC1 igmp -J -h <target_ap_ip> -m 223.1.1.1
    - - R SSC1 C +IGMP:ERROR
  - - SSC SSC1 igmp -J -h <target_ap_ip> -m 240.1.1.1
    - - R SSC1 C +IGMP:ERROR
  - - SSC SSC1 igmp -J -h 192.168.237.77 -m 224.1.1.1
    - - R SSC1 C +IGMP:ERROR
  - - SSC SSC1 igmp -J -h 192.168.237.77 -m 240.1.1.1
    - - R SSC1 C +IGMP:ERROR
  execution time: 0.0
  expected result: |-
    1. success
    2. success
    3. failed
    4. failed
    5. failed
    6. failed
  initial condition: APM2
  level: Integration
  module: TCPIP
  steps: |-
    1. join group with correct host addr and multicast addr
    2. leave group with correct host addr and multicast addr
    3. join group with correct host addr and wrong multicast addr
    4. join group with correct host addr and wrong multicast addr
    5. join group with wrong host addr and correct multicast addr
    6. join group with wrong host addr and wrong multicast addr
  sub module: IGMP
  summary: softAP IGMP join group address check
  test environment: SSC_T1_7
  test point 1: basic function
  test point 2: IGMP API parameter check
  version: v1 (2016-8-15)
- CI ready: 'Yes'
  ID: TCPIP_IGMP_0104
  SDK: |-
    8266_NonOS
  Test App: SSC
  allow fail: ''
  auto test: 'Yes'
  category: Function
  cmd set:
  - ''
  - - SSC SSC1 igmp -J -h <target_ap_ip> -m 224.1.1.1
    - - R SSC1 C +IGMP:OK
  - - SSC SSC1 igmp -L -h <target_ap_ip> -m 224.1.1.2
    - - R SSC1 C +IGMP:ERROR
  - - SSC SSC1 igmp -L -h 192.168.237.77 -m 224.1.1.1
    - - R SSC1 C +IGMP:ERROR
  - - SSC SSC1 igmp -L -h 192.168.237.77 -m 240.1.1.1
    - - R SSC1 C +IGMP:ERROR
  - - SSC SSC1 igmp -L -h <target_ap_ip> -m 224.1.1.1
    - - R SSC1 C +IGMP:OK
  execution time: 0.0
  expected result: |-
    1. success
    2. failed
    3. failed
    4. failed
    5. succeed
  initial condition: APM2
  level: Integration
  module: TCPIP
  steps: |-
    1. join group with correct host addr and multicast addr
    2. leave group with correct host addr and wrong multicast addr
    3. leave group with wrong host addr and correct multicast addr
    4. leave group with wrong host addr and wrong multicast addr
    5. leave group with correct host addr and correct multicast addr
  sub module: IGMP
  summary: softAP IGMP leave group address check
  test environment: SSC_T1_7
  test point 1: basic function
  test point 2: IGMP API parameter check
  version: v1 (2016-8-15)
- CI ready: 'Yes'
  ID: TCPIP_IGMP_0201
  SDK: |-
    8266_NonOS
  Test App: SSC
  allow fail: ''
  auto test: 'Yes'
  category: Function
  cmd set:
  - ''
  - - SSC SSC1 igmp -J -h <target_ip> -m 224.1.1.1
    - - R SSC1 C +IGMP:OK
  - - SSC SSC1 soc -B -t UDP -i 224.1.1.1 -p <test_udp_port1>
    - - R SSC1 A <sock1>:\+BIND:(\d+),OK
  - - SOC SOC1 BIND <test_udp_port1>
    - - R SOC_COM L OK
  - - SOC SOC1 SENDTO 1 <test_udp_port1> 224.1.1.1
    - - R SSC1 SL <sock1>+1
  - - SSC SSC1 igmp -L -h <target_ip> -m 224.1.1.1
    - - R SSC1 C +IGMP:OK
  execution time: 0.0
  expected result: |-
    1. succeed
    2. succeed
    3. succeed
    4. able to recv packet
    5. succeed
  initial condition: STAM2
  level: Integration
  module: TCPIP
  steps: |-
    1. join group
    2. create UDP socket using multicast addr
    3. PC bind UDP
    4. PC send UDP packet to multicast addr
    5. leave group
  sub module: IGMP
  summary: station IGMP recv packets
  test environment: SSC_T1_6
  test point 1: basic function
  test point 2: IGMP send/recv test
  version: v1 (2016-8-15)
- CI ready: 'Yes'
  ID: TCPIP_IGMP_0202
  SDK: |-
    8266_NonOS
  Test App: SSC
  allow fail: ''
  auto test: 'Yes'
  category: Function
  cmd set:
  - ''
  - - SSC SSC2 op -S -o 1
    - - R SSC2 C +MODE:OK
  - - SSC SSC2 dhcp -S -o 1
    - - R SSC2 C +DHCP
  - - SSC SSC2 sta -C -s <ap_ssid> -p <ap_password>
    - - R SSC2 C +JAP:CONNECTED
  - - SSC SSC2 soc -T
    - - R SSC2 C +CLOSEALL
  - - SSC SSC1 igmp -J -h <target_ip> -m 224.1.1.1
    - - R SSC1 C +IGMP:OK
  - - SSC SSC1 soc -B -t UDP -i 224.1.1.1 -p <test_udp_port1>
    - - R SSC1 A <sock1>:\+BIND:(\d+),OK
  - - SSC SSC2 soc -B -t UDP -p <random_port>
    - - R SSC2 A <sock2>:\+BIND:(\d+),OK
  - - SSC SSC2 soc -S -s <sock2> -i 224.1.1.1 -p <test_udp_port1> -l 10
    - - R SSC1 SL <sock1>+1
  - - SSC SSC1 igmp -L -h <target_ip> -m 224.1.1.1
    - - R SSC1 C +IGMP:OK
  execution time: 0.0
  expected result: |-
    1. OK
    2. join AP
    3. DUT2 close socket
    4. OK
    5. OK
    6. OK
    7. DUT1 recv multicast packet
    8. OK
  initial condition: STAM2
  level: Integration
  module: TCPIP
  steps: |-
    1. DUT2 set to sta mode
    2. DUT2 enable DHCP and join AP
    3. DUT2 close socket
    4. DUT1 join group
    5. DUT1 create UDP socket using multicast addr
    6. DUT2 create UDP socket
    7. DUT2 send to multicast addr
    8. DUT1 leave group
  sub module: IGMP
  summary: station send multicast packets
  test environment: SSC_T2_3
  test point 1: basic function
  test point 2: IGMP send/recv test
  version: v1 (2016-8-15)
- CI ready: 'Yes'
  ID: TCPIP_IGMP_0203
  SDK: |-
    8266_NonOS
  Test App: SSC
  allow fail: ''
  auto test: 'Yes'
  category: Function
  cmd set:
  - ''
  - - SSC SSC1 igmp -J -h <target_ap_ip> -m 224.1.1.1
    - - R SSC1 C +IGMP:OK
  - - SSC SSC1 soc -B -t UDP -i 224.1.1.1 -p <test_udp_port1>
    - - R SSC1 A <sock1>:BIND:(\d+),OK
  - - SOC SOC1 BIND <test_udp_port1> <pc_ip_wifi>
    - - R SOC_COM L OK
  - - SOC SOC1 SENDTO 1 <test_udp_port1> 224.1.1.1
    - - R SSC1 SL <sock1>+1
  - - SSC SSC1 igmp -L -h <target_ap_ip> -m 224.1.1.1
    - - R SSC1 C +IGMP:OK
  execution time: 0.0
  expected result: |-
    1. succeed
    2. succeed
    3. succeed
    4. able to recv packet
    5. OK
  initial condition: APM2
  level: Integration
  module: TCPIP
  steps: |-
    1. join group
    2. create UDP socket using multicast addr
    3. PC bind UDP
    4. PC send UDP packet to multicast addr
    5. leave group
  sub module: IGMP
  summary: softAP IGMP recv packets
  test environment: SSC_T1_7
  test point 1: basic function
  test point 2: IGMP send/recv test
  version: v1 (2016-8-15)
- CI ready: 'Yes'
  ID: TCPIP_IGMP_0204
  SDK: |-
    8266_NonOS
  Test App: SSC
  allow fail: ''
  auto test: 'Yes'
  category: Function
  cmd set:
  - ''
  - - SSC SSC1 ap -S -s <target_ssid> -p <target_password> -t <target_auth_enum>
    - - R SSC1 C +SAP:OK
  - - SSC SSC2 sta -C -s <target_ssid> -p <target_password>
    - - R SSC2 C +JAP:CONNECTED
  - - SSC SSC1 igmp -J -h <target_ap_ip> -m 224.1.1.1
    - - R SSC1 C +IGMP:OK
  - - SSC SSC1 soc -B -t UDP -i 224.1.1.1 -p <test_udp_port1>
    - - R SSC1 A <sock1>:\+BIND:(\d+),OK
  - - SSC SSC2 soc -B -t UDP -p <test_udp_port1>
    - - R SSC2 A <sock2>:\+BIND:(\d+),OK
  - - SSC SSC2 soc -S -s <sock2> -i 224.1.1.1 -p <test_udp_port1> -l 10
    - - R SSC1 SL <sock1>+1
  - - SSC SSC1 igmp -L -h <target_ap_ip> -m 224.1.1.1
    - - R SSC1 C +IGMP:OK
  execution time: 0.0
  expected result: |-
    1. succeed
    2. join softap
    3. succeed
    4. succeed
    5. succeed
    6. DUT1 recv multicast packet
    7. succeed
  initial condition: T2_1
  level: Integration
  module: TCPIP
  steps: |-
    1. DUT1 set softap mode
    2. DUT2 join SoftAP
    3. DUT1 join group
    4. DUT1 create UDP socket using multicast addr
    5. DUT2 create UDP socket
    6. DUT2 send to multicast addr
    7. DUT1 leave group
  sub module: IGMP
  summary: softAP send multicast packets
  test environment: SSC_T2_5
  test point 1: basic function
  test point 2: IGMP send/recv test
  version: v1 (2016-8-15)
- CI ready: 'Yes'
  ID: TCPIP_IGMP_0101
  SDK: |-
    8266_RTOS
    ESP32_IDF
  Test App: SSC
  allow fail: ''
  auto test: 'Yes'
  category: Function
  cmd set:
  - ''
  - - SSC SSC1 soc -B -t UDP -p <test_udp_port1>
    - - R SSC1 A <sock1>:\+BIND:(\d+),OK
  - - SSC SSC1 soc -J -s <sock1> -m 224.1.1.1
    - - R SSC1 C +IGMP:OK
  - - SSC SSC1 soc -G -s <sock1> -m 224.1.1.1
    - - R SSC1 C +IGMP:OK
  - - SSC SSC1 soc -J -s <sock1> -m 223.1.1.1
    - - R SSC1 C +IGMP:ERROR
  - - SSC SSC1 soc -J -s <sock1> -m 240.1.1.1
    - - R SSC1 C +IGMP:ERROR
  execution time: 0.0
  expected result: |
    1. OK
    2. OK
    3. OK
    4. ERROR
    5. ERROR
  initial condition: STAM2
  level: Integration
  module: TCPIP
  steps: |
    1. create UDP socket
    2. join group with correct multicast addr
    3. leave group with correct multicast addr
    4. join group with wrong multicast addr
    5. join group with wrong multicast addr
  sub module: IGMP
  summary: station IGMP join group address check
  test environment: SSC_T1_5
  test point 1: basic function
  test point 2: IGMP API parameter check
  version: v1 (2016-8-15)
- CI ready: 'Yes'
  ID: TCPIP_IGMP_0102
  SDK: |-
    8266_RTOS
    ESP32_IDF
  Test App: SSC
  allow fail: ''
  auto test: 'Yes'
  category: Function
  cmd set:
  - ''
  - - SSC SSC1 soc -B -t UDP -p <test_udp_port1>
    - - R SSC1 A <sock1>:\+BIND:(\d+),OK
  - - SSC SSC1 soc -J -s <sock1> -m 224.1.1.1
    - - R SSC1 C +IGMP:OK
  - - SSC SSC1 soc -G -s <sock1> -m 224.1.1.1
    - - R SSC1 C +IGMP:OK
  - - SSC SSC1 soc -B -t UDP -p <random_port>
    - - R SSC1 A <sock2>:\+BIND:(\d+),OK
  - - SSC SSC1 soc -J -s <sock2> -m 224.1.1.2
    - - R SSC1 C +IGMP:OK
  - - SSC SSC1 soc -G -s <sock2> -m 224.1.1.1
    - - R SSC1 C +IGMP:ERROR
  execution time: 0.0
  expected result: |
    1. OK
    2. OK
    3. OK
    4. OK
    5. OK
    6. ERROR
  initial condition: STAM2
  level: Integration
  module: TCPIP
  steps: |
    1. create UDP socket
    2. join group with correct multicast addr
    3. leave group with correct multicast addr
    4. create UDP socket
    5. join group with correct multicast addr
    6. leave group with wrong multicast addr
  sub module: IGMP
  summary: station IGMP leave group address check
  test environment: SSC_T1_5
  test point 1: basic function
  test point 2: IGMP API parameter check
  version: v1 (2016-8-15)
- CI ready: 'Yes'
  ID: TCPIP_IGMP_0103
  SDK: |-
    8266_RTOS
    ESP32_IDF
  Test App: SSC
  allow fail: ''
  auto test: 'Yes'
  category: Function
  cmd set:
  - ''
  - - SSC SSC1 soc -B -t UDP -p <test_udp_port1>
    - - R SSC1 A <sock1>:\+BIND:(\d+),OK
  - - SSC SSC1 soc -J -s <sock1> -m 224.1.1.1
    - - R SSC1 C +IGMP:OK
  - - SSC SSC1 soc -G -s <sock1> -m 224.1.1.1
    - - R SSC1 C +IGMP:OK
  - - SSC SSC1 soc -J -s <sock1> -m 223.1.1.1
    - - R SSC1 C +IGMP:ERROR
  - - SSC SSC1 soc -J -s <sock1> -m 240.1.1.1
    - - R SSC1 C +IGMP:ERROR
  execution time: 0.0
  expected result: |
    1. OK
    2. OK
    3. OK
    4. ERROR
    5. ERROR
  initial condition: APM2
  level: Integration
  module: TCPIP
  steps: |
    1. create UDP socket
    2. join group with correct multicast addr
    3. leave group with correct multicast addr
    4. join group with wrong multicast addr
    5. join group with wrong multicast addr
  sub module: IGMP
  summary: softAP IGMP join group address check
  test environment: SSC_T1_7
  test point 1: basic function
  test point 2: IGMP API parameter check
  version: v1 (2016-8-15)
- CI ready: 'Yes'
  ID: TCPIP_IGMP_0104
  SDK: |-
    8266_RTOS
    ESP32_IDF
  Test App: SSC
  allow fail: ''
  auto test: 'Yes'
  category: Function
  cmd set:
  - ''
  - - SSC SSC1 soc -B -t UDP -p <test_udp_port1>
    - - R SSC1 A <sock1>:\+BIND:(\d+),OK
  - - SSC SSC1 soc -J -s <sock1> -m 224.1.1.1
    - - R SSC1 C +IGMP:OK
  - - SSC SSC1 soc -G -s <sock1> -m 224.1.1.1
    - - R SSC1 C +IGMP:OK
  - - SSC SSC1 soc -B -t UDP -p <random_port>
    - - R SSC1 A <sock2>:\+BIND:(\d+),OK
  - - SSC SSC1 soc -J -s <sock2> -m 224.1.1.2
    - - R SSC1 C +IGMP:OK
  - - SSC SSC1 soc -G -s <sock2> -m 224.1.1.1
    - - R SSC1 C +IGMP:ERROR
  execution time: 0.0
  expected result: |
    1. OK
    2. OK
    3. OK
    4. OK
    5. OK
    6. ERROR
  initial condition: APM2
  level: Integration
  module: TCPIP
  steps: |
    1. create UDP socket
    2. join group with correct multicast addr
    3. leave group with correct multicast addr
    4. create UDP socket
    5. join group with correct multicast addr
    6. leave group with wrong multicast addr
  sub module: IGMP
  summary: softAP IGMP leave group address check
  test environment: SSC_T1_7
  test point 1: basic function
  test point 2: IGMP API parameter check
  version: v1 (2016-8-15)
- CI ready: 'Yes'
  ID: TCPIP_IGMP_0201
  SDK: |-
    8266_RTOS
    ESP32_IDF
  Test App: SSC
  allow fail: '1/3'
  auto test: 'Yes'
  category: Function
  cmd set:
  - ''
  - - SSC SSC1 soc -B -t UDP -p <test_udp_port2>
    - - R SSC1 A <sock1>:\+BIND:(\d+),OK
  - - SSC SSC1 soc -J -s <sock1> -m 224.1.1.1
    - - R SSC1 C +IGMP:OK
  - - SOC SOC1 BIND <test_udp_port2>
    - - R SOC_COM L OK
  - - SOC SOC1 SENDTO 1 <test_udp_port2> 224.1.1.1
    - - R SSC1 SL <sock1>+1
  - - SSC SSC1 soc -G -s <sock1> -m 224.1.1.1
    - - R SSC1 C +IGMP:OK
  - - SOC SOC1 SENDTO 1 <test_udp_port2> 224.1.1.1
    - - R SSC1 NC +RECVFROM
      - - R SOC_COM L OK
  execution time: 0.0
  expected result: |
    1. OK
    2. OK
    3. OK
    4. able to recv packet
    5. OK
    6. not able to recv packet
  initial condition: STAM2
  level: Integration
  module: TCPIP
  steps: |
    1. create UDP socket
    2. join group with correct multicast addr
    3. PC create UDP, bind <test_udp_port2> <pc_ip>
    4. PC send UDP packet to multicast addr
    5. leave group with correct multicast addr
    6. PC send UDP packet to multicast addr
  sub module: IGMP
  summary: station IGMP recv packets
  test environment: SSC_T1_6
  test point 1: basic function
  test point 2: IGMP send/recv test
  version: v1 (2016-8-15)
- CI ready: 'Yes'
  ID: TCPIP_IGMP_0202
  SDK: |-
    8266_RTOS
    ESP32_IDF
  Test App: SSC
  allow fail: '1/3'
  auto test: 'Yes'
  category: Function
  cmd set:
  - ''
  - - SSC SSC2 op -S -o 1
    - - R SSC2 C +MODE:OK
  - - SSC SSC2 dhcp -S -o 1
    - - R SSC2 C +DHCP
  - - SSC SSC2 sta -C -s <ap_ssid> -p <ap_password>
    - - R SSC2 C +JAP:CONNECTED
  - - SSC SSC2 soc -T
    - - R SSC2 C +CLOSEALL
  - - SSC SSC1 soc -B -t UDP -p <test_udp_port1>
    - - R SSC1 A <sock1>:\+BIND:(\d+),OK
  - - SSC SSC1 soc -J -s <sock1> -m 224.1.1.1
    - - R SSC1 C +IGMP:OK
  - - SSC SSC2 soc -B -t UDP -p <random_port>
    - - R SSC2 A <sock2>:\+BIND:(\d+),OK
  - - SSC SSC2 soc -S -s <sock2> -i 224.1.1.1 -p <test_udp_port1> -l 10
    - - R SSC1 SL <sock1>+1
  - - SSC SSC1 soc -G -s <sock1> -m 224.1.1.1
    - - R SSC1 C +IGMP:OK
  - - SSC SSC2 soc -S -s <sock2> -i 224.1.1.1 -p <test_udp_port1> -l 10
    - - R SSC1 NC +RECVFROM
      - - R SSC2 A <sock2>:\+SEND:(\d+),OK
  execution time: 0.0
  expected result: |
    1. OK
    2. DUT2 connect succeed
    3. CLOSEALL
    4. OK
    5. OK
    6. OK
    7. able to recv packet
    8. OK
    9. not able to recv packet
  initial condition: STAM2
  level: Integration
  module: TCPIP
  steps: |
    1. DUT2 set to sta mode
    2. DUT2 enable DHCP and join AP
    3. DUT2 close socket
    4. DUT1 create UDP socket
    5. DUT1 join group using multicast addr
    6. DUT2 create UDP socket
    7. DUT2 send to multicast addr
    8. DUT1 leave group with correct multicast addr
    9. DUT2 send to multicast addr
  sub module: IGMP
  summary: station send multicast packets
  test environment: SSC_T2_3
  test point 1: basic function
  test point 2: IGMP send/recv test
  version: v1 (2016-8-15)
- CI ready: 'Yes'
  ID: TCPIP_IGMP_0203
  SDK: |-
    8266_RTOS
    ESP32_IDF
  Test App: SSC
  allow fail: '1/3'
  auto test: 'Yes'
  category: Function
  cmd set:
  - ''
  - - SSC SSC1 soc -B -t UDP -p <test_udp_port1>
    - - R SSC1 A <sock1>:\+BIND:(\d+),OK
  - - SSC SSC1 soc -J -s <sock1> -m 224.1.1.1
    - - R SSC1 C +IGMP:OK
  - - SOC SOC1 BIND <test_udp_port1> <pc_ip_wifi>
    - - R SOC_COM L OK
  - - SOC SOC1 SENDTO 1 <test_udp_port1> 224.1.1.1
    - - R SSC1 SL <sock1>+1
  - - SSC SSC1 soc -G -s <sock1> -m 224.1.1.1
    - - R SSC1 C +IGMP:OK
  - - SOC SOC1 SENDTO 1 <test_udp_port1> 224.1.1.1
    - - R SSC1 NC +RECVFROM
      - - R SOC_COM L OK
  execution time: 0.0
  expected result: |
    1. OK
    2. OK
    3. OK
    4. able to recv packet
    5. OK
    6. not able to recv packet
  initial condition: APM2
  level: Integration
  module: TCPIP
  steps: |
    1. create UDP socket
    2. join group using multicast addr
    3. PC create UDP, bind <test_udp_port1> <pc_ip_wifi>
    4. PC send UDP packet to multicast addr
    5. leave group with correct multicast addr
    6. PC send UDP packet to multicast addr
  sub module: IGMP
  summary: softAP IGMP recv packets
  test environment: SSC_T1_7
  test point 1: basic function
  test point 2: IGMP send/recv test
  version: v1 (2016-8-15)
- CI ready: 'Yes'
  ID: TCPIP_IGMP_0204
  SDK: |-
    8266_RTOS
    ESP32_IDF
  Test App: SSC
  allow fail: ''
  auto test: 'Yes'
  category: Function
  cmd set:
  - ''
  - - SSC SSC1 ap -S -s <target_ssid> -p <target_password> -t <target_auth_enum>
    - - R SSC1 C +SAP:OK
  - - SSC SSC2 sta -C -s <target_ssid> -p <target_password>
    - - R SSC2 C +JAP:CONNECTED
  - - SSC SSC1 soc -B -t UDP -p <test_udp_port1>
    - - R SSC1 A <sock1>:\+BIND:(\d+),OK
  - - SSC SSC1 soc -J -s <sock1> -m 224.1.1.1
    - - R SSC1 C +IGMP:OK
  - - SSC SSC2 soc -B -t UDP -p <random_port>
    - - R SSC2 A <sock2>:\+BIND:(\d+),OK
  - - SSC SSC2 soc -S -s <sock2> -i 224.1.1.1 -p <test_udp_port1> -l 10
    - - R SSC1 SL <sock1>+1
  - - SSC SSC1 soc -G -s <sock1> -m 224.1.1.1
    - - R SSC1 C +IGMP:OK
  - - SSC SSC2 soc -S -s <sock2> -i 224.1.1.1 -p <test_udp_port1> -l 10
    - - R SSC1 NC +RECVFROM
      - - R SSC2 A <sock2>:\+SEND:(\d+),OK
  execution time: 0.0
  expected result: |
    1. OK
    2. DUT2 connect succeed
    3. OK
    4. OK
    5. OK
    6. DUT1 able to recv packet
    7. OK
    8. DUT1 not able to recv packet
  initial condition: T2_1
  level: Integration
  module: TCPIP
  steps: |
    1. DUT1 set AP
    2. DUT2 join Softap
    3. DUT1 create UDP socket
    4. DUT1 join group using multicast addr
    5. DUT2 create UDP socket
    6. DUT2 send to multicast addr
    7. DUT1 leave group with correct multicast addr
    8. DUT2 send to multicast addr
  sub module: IGMP
  summary: softAP send multicast packets
  test environment: SSC_T2_5
  test point 1: basic function
  test point 2: IGMP send/recv test
  version: v1 (2016-8-15)
- CI ready: 'Yes'
  ID: TCPIP_IGMP_0301
  SDK: |-
    8266_RTOS
    ESP32_IDF
  Test App: SSC
  allow fail: ''
  auto test: 'Yes'
  category: Function
  cmd set:
  - ''
  - - SSC SSC1 soc -B -t UDPv6 -p <random_port>
    - - R SSC1 A <sock1>:\+BIND:(\d+),OK
  - - SSC SSC1 soc -J -s <sock1> -m FF02::1
    - - R SSC1 C +IGMP:OK
  - - SSC SSC1 soc -G -s <sock1> -m FF02::1
    - - R SSC1 C +IGMP:OK
  - - SSC SSC1 soc -J -s <sock1> -m FE80::1
    - - R SSC1 C +IGMP:ERROR
  execution time: 0.0
  expected result: |
    1. OK
    2. OK
    3. OK
    4. ERROR
  initial condition: STAM2
  level: Integration
  module: TCPIP
  steps: |
    1. create UDP socket
    2. join group with ipv6 multicast addr
    3. leave group with ipv6 multicast addr
    4. join group with wrong multicast addr
  sub module: IGMP
  summary: (IPv6)station IGMP join ipv6 group address check
  test environment: SSC_T1_5
  test point 1: basic function
  test point 2: IGMP API parameter check
  version: v1 (2016-8-15)
- CI ready: 'Yes'
  ID: TCPIP_IGMP_0302
  SDK: |-
    8266_RTOS
    ESP32_IDF
  Test App: SSC
  allow fail: ''
  auto test: 'Yes'
  category: Function
  cmd set:
  - ''
  - - SSC SSC1 soc -B -t UDPv6 -p <random_port>
    - - R SSC1 A <sock1>:\+BIND:(\d+),OK
  - - SSC SSC1 soc -J -s <sock1> -m FF02::1
    - - R SSC1 C +IGMP:OK
  - - SSC SSC1 soc -G -s <sock1> -m FF02::1
    - - R SSC1 C +IGMP:OK
  - - SSC SSC1 soc -B -t UDPv6 -p <test_udp_port1>
    - - R SSC1 A <sock2>:\+BIND:(\d+),OK
  - - SSC SSC1 soc -J -s <sock2> -m FF02::1
    - - R SSC1 C +IGMP:OK
  - - SSC SSC1 soc -G -s <sock2> -m FF02::2
    - - R SSC1 C +IGMP:ERROR
  execution time: 0.0
  expected result: |
    1. OK
    2. OK
    3. OK
    4. OK
    5. OK
    6. ERROR
  initial condition: STAM2
  level: Integration
  module: TCPIP
  steps: |
    1. create UDP socket
    2. join group with ipv6 multicast addr
    3. leave group with ipv6 multicast addr
    4. create UDP socket
    5. join group with ipv6 multicast addr
    6. leave group with wrong multicast addr
  sub module: IGMP
  summary: (IPv6)station IGMP leave ipv6 group address check
  test environment: SSC_T1_5
  test point 1: basic function
  test point 2: IGMP API parameter check
  version: v1 (2016-8-15)
- CI ready: 'Yes'
  ID: TCPIP_IGMP_0303
  SDK: |-
    8266_RTOS
    ESP32_IDF
  Test App: SSC
  allow fail: ''
  auto test: 'Yes'
  category: Function
  cmd set:
  - ''
  - - SSC SSC1 soc -B -t UDPv6 -p <random_port>
    - - R SSC1 A <sock1>:\+BIND:(\d+),OK
  - - SSC SSC1 soc -J -s <sock1> -m FF02::1
    - - R SSC1 C +IGMP:OK
  - - SSC SSC1 soc -G -s <sock1> -m FF02::1
    - - R SSC1 C +IGMP:OK
  - - SSC SSC1 soc -J -s <sock1> -m FE80::1
    - - R SSC1 C +IGMP:ERROR
  execution time: 0.0
  expected result: |
    1. OK
    2. OK
    3. OK
    4. ERROR
  initial condition: APM2
  level: Integration
  module: TCPIP
  steps:  |
    1. create UDP socket
    2. join group with ipv6 multicast addr
    3. leave group with ipv6 multicast addr
    4. join group with wrong multicast addr
  sub module: IGMP
  summary: (IPv6)softAP IGMP join ipv6 group address check
  test environment: SSC_T1_7
  test point 1: basic function
  test point 2: IGMP API parameter check
  version: v1 (2016-8-15)
- CI ready: 'Yes'
  ID: TCPIP_IGMP_0304
  SDK: |-
    8266_RTOS
    ESP32_IDF
  Test App: SSC
  allow fail: ''
  auto test: 'Yes'
  category: Function
  cmd set:
  - ''
  - - SSC SSC1 soc -B -t UDPv6 -p <random_port>
    - - R SSC1 A <sock1>:\+BIND:(\d+),OK
  - - SSC SSC1 soc -J -s <sock1> -m FF02::1
    - - R SSC1 C +IGMP:OK
  - - SSC SSC1 soc -G -s <sock1> -m FF02::1
    - - R SSC1 C +IGMP:OK
  - - SSC SSC1 soc -B -t UDPv6 -p <test_udp_port1>
    - - R SSC1 A <sock2>:\+BIND:(\d+),OK
  - - SSC SSC1 soc -J -s <sock2> -m FF02::1
    - - R SSC1 C +IGMP:OK
  - - SSC SSC1 soc -G -s <sock2> -m FF02::2
    - - R SSC1 C +IGMP:ERROR
  execution time: 0.0
  expected result: |
    1. OK
    2. OK
    3. OK
    4. OK
    5. OK
    6. ERROR
  initial condition: APM2
  level: Integration
  module: TCPIP
  steps: |
    1. create UDP socket
    2. join group with ipv6 multicast addr
    3. leave group with ipv6 multicast addr
    4. create UDP socket
    5. join group with ipv6 multicast addr
    6. leave group with wrong multicast addr
  sub module: IGMP
  summary: (IPv6)softAP IGMP leave ipv6 group address check
  test environment: SSC_T1_7
  test point 1: basic function
  test point 2: IGMP API parameter check
  version: v1 (2016-8-15)
- CI ready: 'Yes'
  ID: TCPIP_IGMP_0305
  SDK: |-
    8266_RTOS
    ESP32_IDF
  Test App: SSC
  allow fail: ''
  auto test: 'Yes'
  category: Function
  cmd set:
  - ''
  - - SSC SSC1 soc -B -t UDPv6 -p <random_port>
    - - R SSC1 A <sock1>:\+BIND:(\d+),OK
  - - SSC SSC1 soc -J -s <sock1> -m 224.1.1.1
    - - R SSC1 C +IGMP:OK
  - - SSC SSC1 soc -G -s <sock1> -m 224.1.1.1
    - - R SSC1 C +IGMP:OK
  - - SSC SSC1 soc -J -s <sock1> -m 223.1.1.1
    - - R SSC1 C +IGMP:ERROR
  execution time: 0.0
  expected result: |
    1. OK
    2. OK
    3. OK
    4. ERROR
  initial condition: STAM2
  level: Integration
  module: TCPIP
  steps: |
    1. create UDP socket
    2. join group with ipv4 multicast addr
    3. leave group with ipv4 multicast addr
    4. join group with wrong multicast addr
  sub module: IGMP
  summary: (IPv6)station IGMP join ipv4 group address check
  test environment: SSC_T1_5
  test point 1: basic function
  test point 2: IGMP API parameter check
  version: v1 (2016-8-15)
- CI ready: 'Yes'
  ID: TCPIP_IGMP_0306
  SDK: |-
    8266_RTOS
    ESP32_IDF
  Test App: SSC
  allow fail: ''
  auto test: 'Yes'
  category: Function
  cmd set:
  - ''
  - - SSC SSC1 soc -B -t UDPv6 -p <random_port>
    - - R SSC1 A <sock1>:\+BIND:(\d+),OK
  - - SSC SSC1 soc -J -s <sock1> -m 224.1.1.1
    - - R SSC1 C +IGMP:OK
  - - SSC SSC1 soc -G -s <sock1> -m 224.1.1.1
    - - R SSC1 C +IGMP:OK
  - - SSC SSC1 soc -B -t UDPv6 -p <test_udp_port1>
    - - R SSC1 A <sock2>:\+BIND:(\d+),OK
  - - SSC SSC1 soc -J -s <sock2> -m 224.1.1.1
    - - R SSC1 C +IGMP:OK
  - - SSC SSC1 soc -G -s <sock2> -m 224.1.1.2
    - - R SSC1 C +IGMP:ERROR
  execution time: 0.0
  expected result: |
    1. OK
    2. OK
    3. OK
    4. OK
    5. OK
    6. ERROR
  initial condition: STAM2
  level: Integration
  module: TCPIP
  steps: |
    1. create UDP socket
    2. join group with ipv4 multicast addr
    3. leave group with ipv4 multicast addr
    4. create UDP socket
    5. join group with ipv4 multicast addr
    6. leave group with wrong multicast addr
  sub module: IGMP
  summary: (IPv6)station IGMP leave ipv4 group address check
  test environment: SSC_T1_5
  test point 1: basic function
  test point 2: IGMP API parameter check
  version: v1 (2016-8-15)
- CI ready: 'Yes'
  ID: TCPIP_IGMP_0307
  SDK: |-
    8266_RTOS
    ESP32_IDF
  Test App: SSC
  allow fail: ''
  auto test: 'Yes'
  category: Function
  cmd set:
  - ''
  - - SSC SSC1 soc -B -t UDPv6 -p <random_port>
    - - R SSC1 A <sock1>:\+BIND:(\d+),OK
  - - SSC SSC1 soc -J -s <sock1> -m 224.1.1.1
    - - R SSC1 C +IGMP:OK
  - - SSC SSC1 soc -G -s <sock1> -m 224.1.1.1
    - - R SSC1 C +IGMP:OK
  - - SSC SSC1 soc -J -s <sock1> -m 223.1.1.1
    - - R SSC1 C +IGMP:ERROR
  execution time: 0.0
  expected result: |
    1. OK
    2. OK
    3. OK
    4. ERROR
  initial condition: APM2
  level: Integration
  module: TCPIP
  steps:  |
    1. create UDP socket
    2. join group with ipv4 multicast addr
    3. leave group with ipv4 multicast addr
    4. join group with wrong multicast addr
  sub module: IGMP
  summary: (IPv6)softAP IGMP join ipv4 group address check
  test environment: SSC_T1_7
  test point 1: basic function
  test point 2: IGMP API parameter check
  version: v1 (2016-8-15)
- CI ready: 'Yes'
  ID: TCPIP_IGMP_0308
  SDK: |-
    8266_RTOS
    ESP32_IDF
  Test App: SSC
  allow fail: ''
  auto test: 'Yes'
  category: Function
  cmd set:
  - ''
  - - SSC SSC1 soc -B -t UDPv6 -p <random_port>
    - - R SSC1 A <sock1>:\+BIND:(\d+),OK
  - - SSC SSC1 soc -J -s <sock1> -m 224.1.1.1
    - - R SSC1 C +IGMP:OK
  - - SSC SSC1 soc -G -s <sock1> -m 224.1.1.1
    - - R SSC1 C +IGMP:OK
  - - SSC SSC1 soc -B -t UDPv6 -p <test_udp_port1>
    - - R SSC1 A <sock2>:\+BIND:(\d+),OK
  - - SSC SSC1 soc -J -s <sock2> -m 224.1.1.1
    - - R SSC1 C +IGMP:OK
  - - SSC SSC1 soc -G -s <sock2> -m 224.1.1.2
    - - R SSC1 C +IGMP:ERROR
  execution time: 0.0
  expected result: |
    1. OK
    2. OK
    3. OK
    4. OK
    5. OK
    6. ERROR
  initial condition: APM2
  level: Integration
  module: TCPIP
  steps: |
    1. create UDP socket
    2. join group with ipv4 multicast addr
    3. leave group with ipv4 multicast addr
    4. create UDP socket
    5. join group with ipv4 multicast addr
    6. leave group with wrong multicast addr
  sub module: IGMP
  summary: (IPv6)softAP IGMP leave ipv4 group address check
  test environment: SSC_T1_7
  test point 1: basic function
  test point 2: IGMP API parameter check
  version: v1 (2016-8-15)
- CI ready: 'Yes'
  ID: TCPIP_IGMP_0401
  SDK: |-
    8266_RTOS
    ESP32_IDF
  Test App: SSC
  allow fail: '1/3'
  auto test: 'Yes'
  category: Function
  cmd set:
  - ''
  - - SSC SSC1 soc -B -t UDPv6 -p <random_port>
    - - R SSC1 A <sock1>:\+BIND:(\d+),OK
  - - SSC SSC1 soc -J -s <sock1> -m FF02::1
    - - R SSC1 C +IGMP:OK
  - - SOC SOC1 BIND_v6 <random_port> <pc_ip_v6>
    - - R SOC_COM L OK
  - - SOC SOC1 SENDTO 1 <random_port> FF02::1
    - - R SSC1 SL <sock1>+1
  - - SSC SSC1 soc -G -s <sock1> -m FF02::1
    - - R SSC1 C +IGMP:OK
  - - SOC SOC1 SENDTO 1 <random_port> FF02::1
    - - R SSC1 NC +RECVFROM
      - - R SOC_COM L OK
  execution time: 0.0
  expected result: |
    1. OK
    2. OK
    3. OK
    4. able to recv packet
    5. OK
    6. not able to recv packet
  initial condition: STAM2
  level: Integration
  module: TCPIP
  steps: |
    1. create UDP socket
    2. join group with ipv6 multicast addr
    3. PC create UDP, bind <random_port> <pc_ip_v6>
    4. PC send UDP packet to ipv6 multicast addr
    5. leave group with ipv6 multicast addr
    6. PC send UDP packet to ipv6 multicast addr
  sub module: IGMP
  summary: (IPv6)station IGMP recv packets with ipv6 group address
  test environment: SSC_T1_6
  test point 1: basic function
  test point 2: IGMP send/recv test
  version: v1 (2016-8-15)
- CI ready: 'Yes'
  ID: TCPIP_IGMP_0402
  SDK: |-
    8266_RTOS
    ESP32_IDF
  Test App: SSC
  allow fail: '1/3'
  auto test: 'Yes'
  category: Function
  cmd set:
  - ''
  - - SSC SSC2 op -S -o 1
    - - R SSC2 C +MODE:OK
  - - SSC SSC2 dhcp -S -o 1
    - - R SSC2 C +DHCP
  - - SSC SSC2 sta -C -s <ap_ssid> -p <ap_password>
    - - R SSC2 C +JAP:CONNECTED
  - - SSC SSC2 soc -T
    - - R SSC2 C +CLOSEALL
  - - SSC SSC1 soc -B -t UDPv6 -p <test_udp_port2>
    - - R SSC1 A <sock1>:\+BIND:(\d+),OK
  - - SSC SSC1 soc -J -s <sock1> -m FF02::1
    - - R SSC1 C +IGMP:OK
  - - DELAY 10
    - - ''
  - - SSC SSC2 soc -B -t UDPv6 -p <random_port>
    - - R SSC2 A <sock2>:\+BIND:(\d+),OK
  - - SSC SSC2 soc -S -s <sock2> -i FF02::1 -p <test_udp_port2> -l 100
    - - R SSC1 SL <sock1>+1
  - - SSC SSC1 soc -G -s <sock1> -m FF02::1
    - - R SSC1 C +IGMP:OK
  - - SSC SSC2 soc -S -s <sock2> -i FF02::1 -p <test_udp_port2> -l 100
    - - R SSC1 NC +RECVFROM
      - - R SSC2 A <sock2>:\+SEND:(\d+),OK
  execution time: 0.0
  expected result: |
    1. OK
    2. DUT2 connect succeed
    3. DUT2 close socket
    4. OK
    5. OK
    6. Delay done
    7. OK
    8. able to recv packet
    9. OK
    10. not able to recv packet
  initial condition: STAM2
  level: Integration
  module: TCPIP
  steps: |
    1. DUT2 set to sta mode
    2. DUT2 enable DHCP and join AP
    3. DUT2 close socket
    4. DUT1 create UDP socket
    5. DUT1 join group using ipv6 multicast addr
    6. Delay
    7. DUT2 create UDP socket
    8. DUT2 send to ipv6 multicast addr
    9. DUT1 leave group with ipv6 multicast addr
    10. DUT2 send to ipv6 multicast addr
  sub module: IGMP
  summary: (IPv6)station send multicast packets with ipv6 group address
  test environment: SSC_T2_3
  test point 1: basic function
  test point 2: IGMP send/recv test
  version: v1 (2016-8-15)
- CI ready: 'Yes'
  ID: TCPIP_IGMP_0403
  SDK: |-
    8266_RTOS
    ESP32_IDF
  Test App: SSC
  allow fail: '1/3'
  auto test: 'Yes'
  category: Function
  cmd set:
  - ''
  - - SSC SSC1 soc -B -t UDPv6 -p <random_port>
    - - R SSC1 A <sock1>:\+BIND:(\d+),OK
  - - SSC SSC1 soc -J -s <sock1> -m FF02::1
    - - R SSC1 C +IGMP:OK
  - - SOC SOC1 BIND_v6 <random_port> <pc_ip_wifi_v6>
    - - R SOC_COM L OK
  - - SOC SOC1 SENDTO 1 <random_port> FF02::1
    - - R SSC1 SL <sock1>+1
  - - SSC SSC1 soc -G -s <sock1> -m FF02::1
    - - R SSC1 C +IGMP:OK
  - - SOC SOC1 SENDTO 1 <random_port> FF02::1
    - - R SSC1 NC +RECVFROM
      - - R SOC_COM L OK
  execution time: 0.0
  expected result: |
    1. OK
    2. OK
    3. OK
    4. able to recv packet
    5. OK
    6. not able to recv packet
  initial condition: APM2
  level: Integration
  module: TCPIP
  steps: |
    1. create UDP socket
    2. join group with ipv6 multicast addr
    3. PC create UDP, bind <random_port> <pc_ip_wifi_v6>
    4. PC send UDP packet to ipv6 multicast addr
    5. leave group with ipv6 multicast addr
    6. PC send UDP packet to ipv6 multicast addr
  sub module: IGMP
  summary: (IPv6)softAP IGMP recv packets with ipv6 group address
  test environment: SSC_T1_7
  test point 1: basic function
  test point 2: IGMP send/recv test
  version: v1 (2016-8-15)
- CI ready: 'Yes'
  ID: TCPIP_IGMP_0404
  SDK: |-
    8266_RTOS
    ESP32_IDF
  Test App: SSC
  allow fail: '1/3'
  auto test: 'Yes'
  category: Function
  cmd set:
  - ''
  - - SSC SSC2 op -S -o 1
    - - R SSC2 C +MODE:OK
  - - SSC SSC2 sta -C -s <target_ssid> -p <target_password>
    - - R SSC2 C +JAP:CONNECTED
  - - SSC SSC2 soc -T
    - - R SSC2 C +CLOSEALL
  - - DELAY 10
    - - ''
  - - SSC SSC1 soc -B -t UDPv6 -p <test_udp_port1>
    - - R SSC1 A <sock1>:\+BIND:(\d+),OK
  - - SSC SSC1 soc -J -s <sock1> -m FF02::1
    - - R SSC1 C +IGMP:OK
  - - SSC SSC2 soc -B -t UDPv6 -p <random_port>
    - - R SSC2 A <sock2>:\+BIND:(\d+),OK
  - - SSC SSC2 soc -S -s <sock2> -i FF02::1 -p <test_udp_port1> -l 100
    - - R SSC1 SL <sock1>+1
  - - SSC SSC1 soc -G -s <sock1> -m FF02::1
    - - R SSC1 C +IGMP:OK
  - - SSC SSC2 soc -S -s <sock2> -i FF02::1 -p <test_udp_port1> -l 100
    - - R SSC1 SL NC +RECVFROM
      - - R SSC2 A <sock2>:\+SEND:(\d+),OK
  execution time: 0.0
  expected result: |
    1. OK
    2. join AP
    3. DUT2 close socket
    4. DELAY
    5. OK
    6. OK
    7. OK
    8. able to recv packet
    9. OK
    10. not able to recv packet
  initial condition: APM2
  level: Integration
  module: TCPIP
  steps: |
    1. DUT2 set station mode
    2. DUT2 join AP
    3. DUT2 close socket
    4. DELAY
    5. DUT1 create UDP socket
    6. DUT1 join group using ipv6 multicast addr
    7. DUT2 create UDP socket
    8. DUT2 send to ipv6 multicast addr
    9. DUT1 leave group with ipv6 multicast addr
    10. DUT2 send to ipv6 multicast addr
  sub module: IGMP
  summary: (IPv6)softAP send multicast packets with ipv6 group address
  test environment: SSC_T2_2
  test point 1: basic function
  test point 2: IGMP send/recv test
  version: v1 (2016-8-15)
- CI ready: 'Yes'
  ID: TCPIP_IGMP_0405
  SDK: |-
    8266_RTOS
    ESP32_IDF
  Test App: SSC
  allow fail: '1/3'
  auto test: 'Yes'
  category: Function
  cmd set:
  - ''
  - - SSC SSC1 soc -B -t UDPv6 -p <random_port>
    - - R SSC1 A <sock1>:\+BIND:(\d+),OK
  - - SSC SSC1 soc -J -s <sock1> -m 224.1.1.1
    - - R SSC1 C +IGMP:OK
  - - SOC SOC1 BIND <random_port> <pc_ip>
    - - R SOC_COM L OK
  - - SOC SOC1 SENDTO 1 <random_port> 224.1.1.1
    - - R SSC1 SL <sock1>+1
  - - SSC SSC1 soc -G -s <sock1> -m 224.1.1.1
    - - R SSC1 C +IGMP:OK
  - - SOC SOC1 SENDTO 1 <random_port> 224.1.1.1
    - - R SSC1 NC +RECVFROM
      - - R SOC_COM L OK
  execution time: 0.0
  expected result: |
    1. OK
    2. OK
    3. OK
    4. able to recv packet
    5. OK
    6. not able to recv packet
  initial condition: STAM2
  level: Integration
  module: TCPIP
  steps: |
    1. create UDP socket
    2. join group with ipv4 multicast addr
    3. PC create UDP, bind <random_port> <pc_ip>
    4. PC send UDP packet to ipv4 multicast addr
    5. leave group with ipv4 multicast addr
    6. PC send UDP packet to ipv4 multicast addr
  sub module: IGMP
  summary: (IPv6)station IGMP recv packets with ipv4 group address
  test environment: SSC_T1_6
  test point 1: basic function
  test point 2: IGMP send/recv test
  version: v1 (2016-8-15)
- CI ready: 'Yes'
  ID: TCPIP_IGMP_0406
  SDK: |-
    8266_RTOS
    ESP32_IDF
  Test App: SSC
  allow fail: '1/3'
  auto test: 'Yes'
  category: Function
  cmd set:
  - ''
  - - SSC SSC2 op -S -o 1
    - - R SSC2 C +MODE:OK
  - - SSC SSC2 dhcp -S -o 1
    - - R SSC2 C +DHCP
  - - SSC SSC2 sta -C -s <ap_ssid> -p <ap_password>
    - - R SSC2 C +JAP:CONNECTED
  - - SSC SSC2 soc -T
    - - R SSC2 C +CLOSEALL
  - - SSC SSC1 soc -B -t UDPv6 -p <test_udp_port1>
    - - R SSC1 A <sock1>:\+BIND:(\d+),OK
  - - SSC SSC1 soc -J -s <sock1> -m 224.1.1.1
    - - R SSC1 C +IGMP:OK
  - - SSC SSC2 soc -B -t UDP -p <random_port>
    - - R SSC2 A <sock2>:\+BIND:(\d+),OK
  - - SSC SSC2 soc -S -s <sock2> -i 224.1.1.1 -p <test_udp_port1> -l 100
    - - R SSC1 SL <sock1>+1
  - - SSC SSC1 soc -G -s <sock1> -m 224.1.1.1
    - - R SSC1 C +IGMP:OK
  - - SSC SSC2 soc -S -s <sock2> -i 224.1.1.1 -p <test_udp_port1> -l 100
    - - R SSC1 NC +RECVFROM
      - - R SSC2 A <sock2>:\+SEND:(\d+),OK
  execution time: 0.0
  expected result: |
    1. OK
    2. DUT2 connect succeed
    3. DUT2 close socket
    4. OK
    5. OK
    6. OK
    7. able to recv packet
    8. OK
    9. not able to recv packet
  initial condition: STAM2
  level: Integration
  module: TCPIP
  steps: |
    1. DUT2 set to sta mode
    2. DUT2 enable DHCP and join AP
    3. DUT2 close socket
    4. DUT1 create UDP socket
    5. DUT1 join group using ipv4 multicast addr
    6. DUT2 create UDP socket
    7. DUT2 send to ipv4 multicast addr
    8. DUT1 leave group with ipv4 multicast addr
    9. DUT2 send to ipv4 multicast addr
  sub module: IGMP
  summary: (IPv6)station send multicast packets with ipv4 group address
  test environment: SSC_T2_3
  test point 1: basic function
  test point 2: IGMP send/recv test
  version: v1 (2016-8-15)
- CI ready: 'Yes'
  ID: TCPIP_IGMP_0407
  SDK: |-
    8266_RTOS
    ESP32_IDF
  Test App: SSC
  allow fail: '1/3'
  auto test: 'Yes'
  category: Function
  cmd set:
  - ''
  - - SSC SSC1 soc -B -t UDPv6 -p <random_port>
    - - R SSC1 A <sock1>:\+BIND:(\d+),OK
  - - SSC SSC1 soc -J -s <sock1> -m 224.1.1.1
    - - R SSC1 C +IGMP:OK
  - - SOC SOC1 BIND <random_port> <pc_ip_wifi>
    - - R SOC_COM L OK
  - - SOC SOC1 SENDTO 1 <random_port> 224.1.1.1
    - - R SSC1 SL <sock1>+1
  - - SSC SSC1 soc -G -s <sock1> -m 224.1.1.1
    - - R SSC1 C +IGMP:OK
  - - SOC SOC1 SENDTO 1 <random_port> 224.1.1.1
    - - R SSC1 NC +RECVFROM
      - - R SOC_COM L OK
  execution time: 0.0
  expected result: |
    1. OK
    2. OK
    3. OK
    4. able to recv packet
    5. OK
    6. not able to recv packet
  initial condition: APM2
  level: Integration
  module: TCPIP
  steps: |
    1. create UDP socket
    2. join group with ipv4 multicast addr
    3. PC create UDP, bind <random_port> <pc_ip_wifi>
    4. PC send UDP packet to ipv4 multicast addr
    5. leave group with ipv4 multicast addr
    6. PC send UDP packet to ipv4 multicast addr
  sub module: IGMP
  summary: (IPv6)softAP IGMP recv packets with ipv4 group address
  test environment: SSC_T1_7
  test point 1: basic function
  test point 2: IGMP send/recv test
  version: v1 (2016-8-15)
- CI ready: 'Yes'
  ID: TCPIP_IGMP_0408
  SDK: |-
    8266_RTOS
    ESP32_IDF
  Test App: SSC
  allow fail: '1/3'
  auto test: 'Yes'
  category: Function
  cmd set:
  - ''
  - - SSC SSC2 op -S -o 1
    - - R SSC2 C +MODE:OK
  - - SSC SSC2 sta -C -s <target_ssid> -p <target_password>
    - - R SSC2 C +JAP:CONNECTED
  - - SSC SSC2 soc -T
    - - R SSC2 C +CLOSEALL
  - - SSC SSC1 soc -B -t UDPv6 -p <test_udp_port1>
    - - R SSC1 A <sock1>:\+BIND:(\d+),OK
  - - SSC SSC1 soc -J -s <sock1> -m 224.1.1.1
    - - R SSC1 C +IGMP:OK
  - - SSC SSC2 soc -B -t UDP -p <random_port>
    - - R SSC2 A <sock2>:\+BIND:(\d+),OK
  - - SSC SSC2 soc -S -s <sock2> -i 224.1.1.1 -p <test_udp_port1> -l 100
    - - R SSC1 SL <sock1>+1
  - - SSC SSC1 soc -G -s <sock1> -m 224.1.1.1
    - - R SSC1 C +IGMP:OK
  - - SSC SSC2 soc -S -s <sock2> -i 224.1.1.1 -p <test_udp_port1> -l 100
    - - R SSC1 NC +RECVFROM
      - - R SSC2 A <sock2>:\+SEND:(\d+),OK
  execution time: 0.0
  expected result: |
    1. OK
    2. DUT2 connect succeed
    3. DUT2 close socket
    4. OK
    5. OK
    6. OK
    7. able to recv packet
    8. OK
    9. not able to recv packet
  initial condition: APM2
  level: Integration
  module: TCPIP
  steps: |
    1. DUT2 set sta mode
    2. DUT2 join AP
    3. DUT2 close socket
    4. DUT1 create UDP socket
    5. DUT1 join group using ipv4 multicast addr
    6. DUT2 create UDP socket
    7. DUT2 send to ipv4 multicast addr
    8. DUT1 leave group with ipv4 multicast addr
    9. DUT2 send to ipv4 multicast addr
  sub module: IGMP
  summary: (IPv6)softAP send multicast packets with ipv4 group address
  test environment: SSC_T2_2
  test point 1: basic function
  test point 2: IGMP send/recv test
  version: v1 (2016-8-15)
