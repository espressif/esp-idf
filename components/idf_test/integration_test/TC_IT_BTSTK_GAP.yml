.GAP_CASE: &GAP_CASE
  SDK: ESP32_IDF
  Test App: SSC_BLE
  auto test: 'Yes'
  category: Function
  test point 1: basic function
  initial condition: BLE_INIT2
  test environment: SSC_T2_1
  execution time: 0
  module: BT Stack
  sub module: GAP
  version: v1 (2016-12-31)
  CI ready: 'Yes'
  level: Integration
  allow fail: ''

.dut1_stop_adv: &dut1_stop_adv
  LIST_MERGE:
    - - "SSC SSC1 bleadv -D -z stop"
      - ["R SSC1 C +BLEADV:Stop,OK"]

.dut2_stop_adv: &dut2_stop_adv
  LIST_MERGE:
    - - "SSC SSC2 bleadv -D -z stop"
      - ["R SSC2 C +BLEADV:Stop,OK"]

.dut1_start_adv: &dut1_start_adv
  LIST_MERGE:
    - - "SSC SSC1 bleadv -D -z start"
      - ["R SSC1 C +BLEADV:Start,OK"]

.set_default_ble_name: &set_default_ble_name
  LIST_MERGE:
    - - "SSC SSC1 ble -S -z name -n <dut1_ble_name>"
      - ["R SSC1 C +BLE:OK"]

.set_default_adv_data: &set_default_adv_data
  LIST_MERGE:
    - - "SSC SSC1 bleadv -D -z stop"
      - ["R SSC1 C +BLEADV:Stop,OK"]
    - - "SSC SSC1 bleadv -L -c 0 -t 3"
      - ["R SSC1 C +BLEADV:SetAdv,OK C +BLEADV:SetScanRes,OK"]
    - - "SSC SSC1 bleadv -D -z start"
      - ["R SSC1 C +BLEADV:Start,OK"]

.open_capture_nic: &open_capture_nic
  LIST_MERGE:
    - - "NIC BLENIC START <bt_capture_nic> bt+capture"
      - ['R PC_COM C +NIC_START:OK']

.dut1_connect_to_dut2: &dut1_connect_to_dut2
  LIST_MERGE:
    - - "SSC SSC1 bleconn -C -p 0x10 -a <dut2_bt_mac>"
      - ['R SSC1 C +BLE:GattcConnect,OK', 'R SSC2 C +BLE:GattsConnect']

test cases:
- ID: BTSTK_GAP_01001
  <<: *GAP_CASE
  test point 2: BLE GAP param device name test
  summary: ble set ascii device name
  steps: |
    1. DUT1 set ascii device name
    2. stop advertising
    3. config scan response and start advertising
    4. DUT2 do active scan
  expected result: |
    1. succeed
    2. succeed
    3. succeed
    4. device name in scan result
  cmd set:
  - ""
  - *set_default_ble_name
  - *set_default_adv_data
  - *dut2_stop_adv
  - - "SSC SSC2 blescan -L -c 0"
    - ["R SSC2 C +BLESCAN:SetScanParam,OK"]
  - - "SSC SSC2 blescan -D -z start -t 3"
    - ["R SSC2 P <dut1_ble_name>"]
- ID: BTSTK_GAP_01002
  <<: *GAP_CASE
  test point 2: BLE GAP param device name test
  summary: ble set non-ascii device name
  steps: |
    1. DUT1 set non-ascii device name
    2. stop advertising
    3. config scan response and start advertising
    4. DUT2 do active scan
  expected result: |
    1. succeed
    2. succeed
    3. succeed
    4. device name in scan result
  cmd set:
  - ""
  - - "SSC SSC1 ble -S -z name -n <dut1_ble_name_hex>"
    - ["R SSC1 C +BLE:OK"]
  - *set_default_adv_data
  - *dut2_stop_adv
  - - "SSC SSC2 blescan -L -c 0"
    - ["R SSC2 C +BLESCAN:SetScanParam,OK"]
  - - "SSC SSC2 blescan -D -z start -t 3"
    - ["R SSC2 P <dut1_ble_name_hex>"]
- ID: BTSTK_GAP_01003
  <<: *GAP_CASE
  test point 2: BLE GAP param device name test
  summary: ble set long device name
  steps: |
    1. DUT1 set 32 byte device name A
    2. stop advertising
    3. config scan response and start advertising
    4. DUT2 do active scan
    5. DUT1 set 33 bytes device name
    6. stop advertising
    7. config scan response and start advertising
    8. DUT2 do active scan
  expected result: |
    1. succeed
    2. succeed
    3. succeed
    4. DUT1 mac in scan result (device name is too long)
    5. failed
    6. succeed
    7. succeed
    8. DUT1 mac in scan result (device name is too long)
  cmd set:
  - ""
  - - "SSC SSC1 ble -S -z name -n <dut1_ble_name_32>"
    - ["R SSC1 C +BLE:OK"]
  - *set_default_adv_data
  - *dut2_stop_adv
  - - "SSC SSC2 blescan -L -c 0 -s 1"
    - ["R SSC2 C +BLESCAN:SetScanParam,OK"]
  - - "SSC SSC2 blescan -D -z start -t 3"
    - ["R SSC2 P <dut1_bt_mac> C Complete"]
  - - "SSC SSC1 ble -S -z name -n 123456789012345678901234567890123"
    - ["R SSC1 C +BLE:ERROR"]
  - *set_default_adv_data
  - - "SSC SSC2 blescan -L -c 0 -s 1"
    - ["R SSC2 C +BLESCAN:SetScanParam,OK"]
  - - "SSC SSC2 blescan -D -z start -t 3"
    - ["R SSC2 P <dut1_bt_mac> C Complete"]
- ID: BTSTK_GAP_02001
  <<: *GAP_CASE
  test point 2: BLE GAP config advertising data
  summary: ble set advertising data / scan response include name
  steps: |
    1. DUT1 stop advertise and set short device name
    2. DUT1 set include device name for adv data and scan response
    3. DUT1 start advertising
    4. PC do active scan and capture advertising report
    5. DUT1 stop advertising
    6. DUT1 set not include device name for adv data and scan response
    7. DUT1 start advertising
    8. PC do active scan and capture advertising report
  expected result: |
    1. succeed
    2. succeed
    3. succeed
    4. get complete device name in ADV_IND and SCAN_RSP
    5. succeed
    6. succeed
    7. succeed
    8. do not have complete device name in ADV_IND and SCAN_RSP
  initial condition: BLE_INIT1
  test environment: SSC_T1_3
  version: v2 (2016-03-01)
  cmd set:
  - ""
  - *dut1_stop_adv
  - *set_default_ble_name
  - - "SSC SSC1 bleadv -L -c 0 -n 1 -t 3"
    - ["R SSC1 C +BLEADV:SetAdv,OK"]
  - *dut1_start_adv
  - *open_capture_nic
  - - "HCITOOL 2 -i <hci_nic> lescan"
    - - 'P PC_COM C +HCITOOL:OK'
      - 'P BLENIC PDU (HCIEvent.le_sub_event_code="LEAdvReport")(HCIEvent.event_type_0="ADV_IND")(HCIEvent.address_0=<dut1_bt_mac>)(HCIEvent.data_0.NameComplete=<dut1_ble_name>)'
      - 'P BLENIC PDU (HCIEvent.le_sub_event_code="LEAdvReport")(HCIEvent.event_type_0="SCAN_RSP")(HCIEvent.address_0=<dut1_bt_mac>)(HCIEvent.data_0.NameComplete=<dut1_ble_name>)'
  - *dut1_stop_adv
  - - "SSC SSC1 bleadv -L -c 0 -n 0 -t 3"
    - ["R SSC1 C +BLEADV:SetAdv,OK"]
  - *dut1_start_adv
  - - "HCITOOL 2 -i <hci_nic> lescan"
    - - 'P PC_COM C +HCITOOL:OK'
      - 'P BLENIC PDU (HCIEvent.le_sub_event_code="LEAdvReport")(HCIEvent.event_type_0="ADV_IND")(HCIEvent.address_0=<dut1_bt_mac>)(!HCIEvent.data_0.NameComplete)'
      - 'P BLENIC PDU (HCIEvent.le_sub_event_code="LEAdvReport")(HCIEvent.event_type_0="SCAN_RSP")(HCIEvent.address_0=<dut1_bt_mac>)(!HCIEvent.data_0.NameComplete)'
- ID: BTSTK_GAP_02002
  <<: *GAP_CASE
  test point 2: BLE GAP config advertising data
  summary: ble set advertising data / scan response include Tx power
  steps: |
    1. DUT1 stop advertise and set short device name
    2. DUT1 set include Tx power for adv data and scan response
    3. DUT1 start advertising
    4. PC do active scan and capture advertising report
    5. DUT1 stop advertising
    6. DUT1 set not include Tx power for adv data and scan response
    7. DUT1 start advertising
    8. PC do active scan and capture advertising report
  expected result: |
    1. succeed
    2. succeed
    3. succeed
    4. get Tx power in ADV_IND and SCAN_RSP
    5. succeed
    6. succeed
    7. succeed
    8. do not have Tx power in ADV_IND and SCAN_RSP
  initial condition: BLE_INIT1
  test environment: SSC_T1_3
  version: v2 (2016-03-01)
  cmd set:
  - ""
  - *dut1_stop_adv
  - *set_default_ble_name
  - - "SSC SSC1 bleadv -L -c 0 -x 1 -t 3"
    - ["R SSC1 C +BLEADV:SetAdv,OK"]
  - *dut1_start_adv
  - *open_capture_nic
  - - "HCITOOL 2 -i <hci_nic> lescan"
    - - 'P PC_COM C +HCITOOL:OK'
      - 'P BLENIC PDU (HCIEvent.le_sub_event_code="LEAdvReport")(HCIEvent.event_type_0="ADV_IND")(HCIEvent.address_0=<dut1_bt_mac>)(HCIEvent.data_0.TxPower="")'
      - 'P BLENIC PDU (HCIEvent.le_sub_event_code="LEAdvReport")(HCIEvent.event_type_0="SCAN_RSP")(HCIEvent.address_0=<dut1_bt_mac>)(HCIEvent.data_0.TxPower="")'
  - *dut1_stop_adv
  - - "SSC SSC1 bleadv -L -c 0 -x 0 -t 3"
    - ["R SSC1 C +BLEADV:SetAdv,OK"]
  - *dut1_start_adv
  - - "HCITOOL 2 -i <hci_nic> lescan"
    - - 'P PC_COM C +HCITOOL:OK'
      - 'P BLENIC PDU (HCIEvent.le_sub_event_code="LEAdvReport")(HCIEvent.event_type_0="ADV_IND")(HCIEvent.address_0=<dut1_bt_mac>)(!HCIEvent.data_0.TxPower)'
      - 'P BLENIC PDU (HCIEvent.le_sub_event_code="LEAdvReport")(HCIEvent.event_type_0="SCAN_RSP")(HCIEvent.address_0=<dut1_bt_mac>)(!HCIEvent.data_0.TxPower)'
- ID: BTSTK_GAP_02003
  <<: *GAP_CASE
  test point 2: BLE GAP config advertising data
  summary: ble set advertising data / scan response adv interval
  steps: |
    1. DUT1 stop advertise and set short device name
    2. DUT1 set max interval 0x40 min interval 0x20 for adv data and scan response
    3. DUT1 start advertising
    4. PC do active scan and capture advertising report
    5. DUT1 stop advertising
    6. DUT1 set max interval 0x400 min interval 0x200 for adv data and scan response
    7. DUT1 start advertising
    8. PC do active scan and capture advertising report
  expected result: |
    1. succeed
    2. succeed
    3. succeed
    4. get interval 0x40 0x20 in ADV_IND and SCAN_RSP
    5. succeed
    6. succeed
    7. succeed
    8. get interval 0x400 0x200 in ADV_IND and SCAN_RSP
  initial condition: BLE_INIT1
  test environment: SSC_T1_3
  version: v2 (2016-03-01)
  cmd set:
  - ""
  - *dut1_stop_adv
  - *set_default_ble_name
  - - "SSC SSC1 bleadv -L -c 0 -i 0x20-0x40 -t 3"
    - ["R SSC1 C +BLEADV:SetAdv,OK"]
  - *dut1_start_adv
  - *open_capture_nic
  - - "HCITOOL 2 -i <hci_nic> lescan"
    - - 'P PC_COM C +HCITOOL:OK'
      - 'P BLENIC PDU (HCIEvent.le_sub_event_code="LEAdvReport")(HCIEvent.event_type_0="ADV_IND")(HCIEvent.address_0=<dut1_bt_mac>)(HCIEvent.data_0.SlaveConnIntervalRange="0x0020-0x0040")'
      - 'P BLENIC PDU (HCIEvent.le_sub_event_code="LEAdvReport")(HCIEvent.event_type_0="SCAN_RSP")(HCIEvent.address_0=<dut1_bt_mac>)(HCIEvent.data_0.SlaveConnIntervalRange="0x0020-0x0040")'
  - *dut1_stop_adv
  - - "SSC SSC1 bleadv -L -c 0 -i 0x200-0x400 -t 3"
    - ["R SSC1 C +BLEADV:SetAdv,OK"]
  - *dut1_start_adv
  - - "HCITOOL 2 -i <hci_nic> lescan"
    - - 'P PC_COM C +HCITOOL:OK'
      - 'P BLENIC PDU (HCIEvent.le_sub_event_code="LEAdvReport")(HCIEvent.event_type_0="ADV_IND")(HCIEvent.address_0=<dut1_bt_mac>)(HCIEvent.data_0.SlaveConnIntervalRange="0x0200-0x0400")'
      - 'P BLENIC PDU (HCIEvent.le_sub_event_code="LEAdvReport")(HCIEvent.event_type_0="SCAN_RSP")(HCIEvent.address_0=<dut1_bt_mac>)(HCIEvent.data_0.SlaveConnIntervalRange="0x0200-0x0400")'
- ID: BTSTK_GAP_02004
  <<: *GAP_CASE
  test point 2: BLE GAP config advertising data
  summary: ble set advertising data / scan response appearance
  steps: |
    1. DUT1 stop advertise and set short device name
    2. DUT1 set appearance to 0 for adv data and scan response
    3. DUT1 start advertising
    4. PC do active scan and capture advertising report
    5. DUT1 stop advertising
    6. DUT1 set appearance to 1 for adv data and scan response
    7. DUT1 start advertising
    8. PC do active scan and capture advertising report
  expected result: |
    1. succeed
    2. succeed
    3. succeed
    4. do not have appearance in ADV_IND and SCAN_RSP
    5. succeed
    6. succeed
    7. succeed
    8. get appearance 1 in ADV_IND and SCAN_RSP
  initial condition: BLE_INIT1
  test environment: SSC_T1_3
  version: v2 (2016-03-01)
  cmd set:
  - ""
  - *dut1_stop_adv
  - *set_default_ble_name
  - - "SSC SSC1 bleadv -L -c 0 -a 0 -t 3"
    - ["R SSC1 C +BLEADV:SetAdv,OK"]
  - *dut1_start_adv
  - *open_capture_nic
  - - "HCITOOL 2 -i <hci_nic> lescan"
    - - 'P PC_COM C +HCITOOL:OK'
      - 'P BLENIC PDU (HCIEvent.le_sub_event_code="LEAdvReport")(HCIEvent.event_type_0="ADV_IND")(HCIEvent.address_0=<dut1_bt_mac>)(!HCIEvent.data_0.Appearance)'
      - 'P BLENIC PDU (HCIEvent.le_sub_event_code="LEAdvReport")(HCIEvent.event_type_0="SCAN_RSP")(HCIEvent.address_0=<dut1_bt_mac>)(!HCIEvent.data_0.Appearance)'
  - *dut1_stop_adv
  - - "SSC SSC1 bleadv -L -c 0 -a 1 -t 3"
    - ["R SSC1 C +BLEADV:SetAdv,OK"]
  - *dut1_start_adv
  - - "HCITOOL 2 -i <hci_nic> lescan"
    - - 'P PC_COM C +HCITOOL:OK'
      - 'P BLENIC PDU (HCIEvent.le_sub_event_code="LEAdvReport")(HCIEvent.event_type_0="ADV_IND")(HCIEvent.address_0=<dut1_bt_mac>)(HCIEvent.data_0.Appearance="0x01")'
      - 'P BLENIC PDU (HCIEvent.le_sub_event_code="LEAdvReport")(HCIEvent.event_type_0="SCAN_RSP")(HCIEvent.address_0=<dut1_bt_mac>)(HCIEvent.data_0.Appearance="0x01")'
- ID: BTSTK_GAP_02005
  <<: *GAP_CASE
  test point 2: BLE GAP config advertising data
  summary: ble set advertising data / scan response manufacturer data
  steps: |
    1. DUT1 stop advertise and set short device name
    2. DUT1 set manufacturer to 0x12345678 for adv data and scan response
    3. DUT1 start advertising
    4. PC do active scan and capture advertising report
  expected result: |
    1. succeed
    2. succeed
    3. succeed
    4. get manufacturer data 0x12345678 in ADV_IND and SCAN_RSP
  initial condition: BLE_INIT1
  test environment: SSC_T1_3
  version: v2 (2016-03-01)
  cmd set:
  - ""
  - *dut1_stop_adv
  - *set_default_ble_name
  - - "SSC SSC1 bleadv -L -c 0 -m 0x12345678 -t 3"
    - ["R SSC1 C +BLEADV:SetAdv,OK"]
  - *dut1_start_adv
  - *open_capture_nic
  - - "HCITOOL 2 -i <hci_nic> lescan"
    - - 'P PC_COM C +HCITOOL:OK'
      - 'P BLENIC PDU (HCIEvent.le_sub_event_code="LEAdvReport")(HCIEvent.event_type_0="ADV_IND")(HCIEvent.address_0=<dut1_bt_mac>)(HCIEvent.data_0.ManufacturerSpecificData="0x12345678")'
      - 'P BLENIC PDU (HCIEvent.le_sub_event_code="LEAdvReport")(HCIEvent.event_type_0="SCAN_RSP")(HCIEvent.address_0=<dut1_bt_mac>)(HCIEvent.data_0.ManufacturerSpecificData="0x12345678")'
- ID: BTSTK_GAP_02006
  <<: *GAP_CASE
  test point 2: BLE GAP config advertising data
  summary: ble set advertising data / scan response service data
  steps: |
    1. DUT1 stop advertise
    2. DUT1 set advertising data and scan response service data 0x1234123456 and not include device name
    3. DUT1 start advertising
    4. PC do active scan and capture advertising report
  expected result: |
    1. succeed
    2. succeed
    3. succeed
    4. get ServiceData16BitUUID 0x1234123456 in ADV_IND and SCAN_RSP
  initial condition: BLE_INIT1
  test environment: SSC_T1_3
  version: v2 (2016-03-01)
  cmd set:
  - ""
  - *dut1_stop_adv
  - *set_default_ble_name
  - - "SSC SSC1 bleadv -L -c 0 -n 0 -d 0x1234123456 -t 3"
    - ["R SSC1 C +BLEADV:SetAdv,OK"]
  - *dut1_start_adv
  - *open_capture_nic
  - - "HCITOOL 2 -i <hci_nic> lescan"
    - - 'P PC_COM C +HCITOOL:OK'
      - 'P BLENIC PDU (HCIEvent.le_sub_event_code="LEAdvReport")(HCIEvent.event_type_0="ADV_IND")(HCIEvent.address_0=<dut1_bt_mac>)(HCIEvent.data_0.ServiceData16BitUUID="1234123456")'
      - 'P BLENIC PDU (HCIEvent.le_sub_event_code="LEAdvReport")(HCIEvent.event_type_0="SCAN_RSP")(HCIEvent.address_0=<dut1_bt_mac>)(HCIEvent.data_0.ServiceData16BitUUID="1234123456")'
- ID: BTSTK_GAP_02007
  <<: *GAP_CASE
  test point 2: BLE GAP config advertising data
  summary: ble set advertising data / scan response service uuid list
  steps: |
    1. DUT1 stop advertise
    2. DUT1 set advertising data and scan response not include name, service uuid list 0xABCD,ABCDDCBA,12349B5F8000008000100000ABCD0000
    3. DUT1 start advertising
    4. PC do active scan and capture advertising report
  expected result: |
    1. succeed
    2. succeed
    3. succeed
    4. get Complete16BitServiceUUID 0xABCD Complete32BitServiceUUID 0xABCDDCBA
    and Complete128BitServiceUUID 0x12349B5F8000008000100000ABCD0000 in ADV_IND and SCAN_RSP
  initial condition: BLE_INIT1
  test environment: SSC_T1_3
  version: v2 (2016-03-01)
  cmd set:
  - ""
  - *dut1_stop_adv
  - - "SSC SSC1 bleadv -L -c 0 -n 0 -x 0 -i 0x00-0x00 -s ABCD,ABCDDCBA,12349B5F8000008000100000ABCD0000 -t 3"
    - ["R SSC1 C +BLEADV:SetAdv,OK"]
  - *dut1_start_adv
  - *open_capture_nic
  - - "HCITOOL 2 -i <hci_nic> lescan"
    - - 'P PC_COM C +HCITOOL:OK'
      - 'P BLENIC PDU (HCIEvent.le_sub_event_code="LEAdvReport")(HCIEvent.event_type_0="ADV_IND")(HCIEvent.address_0=<dut1_bt_mac>)(HCIEvent.data_0.Complete16BitServiceUUID="ABCD")(HCIEvent.data_0.Complete32BitServiceUUID="ABCDDCBA")(HCIEvent.data_0.Complete128BitServiceUUID="12349B5F8000008000100000ABCD0000")'
      - 'P BLENIC PDU (HCIEvent.le_sub_event_code="LEAdvReport")(HCIEvent.event_type_0="SCAN_RSP")(HCIEvent.address_0=<dut1_bt_mac>)(HCIEvent.data_0.Complete16BitServiceUUID="ABCD")(HCIEvent.data_0.Complete32BitServiceUUID="ABCDDCBA")(HCIEvent.data_0.Complete128BitServiceUUID="12349B5F8000008000100000ABCD0000")'
- ID: BTSTK_GAP_03001
  <<: *GAP_CASE
  test point 2: BLE GAP set advertise param
  summary: ble set adv parameter adv_type
  steps: |
    1. DUT1 stop advertise and set short device name
    2. DUT1 start adv with adv_type ADV_IND
    3. PC do active scan and capture advertising report
    4. repeat step 1-3 with adv_type ADV_TYPE_DIRECT_IND_HIGH
    5. repeat step 1-3 with adv_type ADV_TYPE_SCAN_IND
    6. repeat step 1-3 with adv_type ADV_TYPE_NONCONN_IND
    7. repeat step 1-3 with adv_type ADV_TYPE_DIRECT_IND_LOW
  expected result: |
    1. succeed
    2. succeed
    3. get ADV_IND with DUT1 BT MAC
    4. get ADV_DIRECT_IND with DUT1 BT MAC
    5. get ADV_SCAN_IND with DUT1 BT MAC
    6. get ADV_NONCONN_IND with DUT1 BT MAC
    7. can not get ADV_DIRECT_IND with DUT1 BT MAC
  initial condition: BLE_INIT1
  test environment: SSC_T1_3
  cmd set:
  - ""
  - *set_default_ble_name
  - - "SSC SSC1 bleadv -L -c 0 -t 3"
    - ["R SSC1 C +BLEADV:SetAdv,OK"]
  - *open_capture_nic
  - *dut1_stop_adv
  - - "SSC SSC1 bleadv -D -z start -t 0"
    - ["R SSC1 C +BLEADV:OK"]
  - - "HCITOOL 2 -i <hci_nic> lescan"
    - - 'P PC_COM C +HCITOOL:OK'
      - 'P BLENIC PDU (HCIEvent.le_sub_event_code="LEAdvReport")(HCIEvent.event_type_0="ADV_IND")(HCIEvent.address_0=<dut1_bt_mac>)'
  - - "SSC SSC1 bleadv -D -z start -t 1 -y 0 -b <hci_nic_mac>"
    - ["R SSC1 C +BLEADV:OK"]
  - - "HCITOOL 2 -i <hci_nic> lescan"
    - - 'P PC_COM C +HCITOOL:OK'
      - 'P BLENIC PDU (HCIEvent.le_sub_event_code="LEAdvReport")(HCIEvent.event_type_0="ADV_DIRECT_IND")(HCIEvent.address_0=<dut1_bt_mac>)'
  - - "SSC SSC1 bleadv -L -c 0 -i 0x00B0-0x0200 -t 3"
    - ["R SSC1 C +BLEADV:OK"]
  - - "SSC SSC1 bleadv -D -z start -t 2 -i 0x00B0-0x0200"
    - ["R SSC1 C +BLEADV:OK"]
  - - "HCITOOL 2 -i <hci_nic> lescan"
    - - 'P PC_COM C +HCITOOL:OK'
      - 'P BLENIC PDU (HCIEvent.le_sub_event_code="LEAdvReport")(HCIEvent.event_type_0="ADV_SCAN_IND")(HCIEvent.address_0=<dut1_bt_mac>)'
  - - "SSC SSC1 bleadv -D -z start -t 3 -i 0x00B0-0x0200"
    - ["R SSC1 C +BLEADV:OK"]
  - - "HCITOOL 2 -i <hci_nic> lescan"
    - - 'P PC_COM C +HCITOOL:OK'
      - 'P BLENIC PDU (HCIEvent.le_sub_event_code="LEAdvReport")(HCIEvent.event_type_0="ADV_NONCONN_IND")(HCIEvent.address_0=<dut1_bt_mac>)'
  - *dut1_stop_adv
  - - "SSC SSC1 bleadv -L -c 0 -i 0x0640-0x0780 -t 3"
    - ["R SSC1 C +BLEADV:OK"]
  - - "SSC SSC1 bleadv -D -z start -t 4 -i 0x0640-0x0780 -y 0 -b <hci_nic_mac>"
    - ["R SSC1 C +BLEADV:OK"]
  - - "HCITOOL 3 -i <hci_nic> lescan"
    - - 'P PC_COM C +HCITOOL:OK'
      - 'P BLENIC PDU (HCIEvent.le_sub_event_code="LEAdvReport")(HCIEvent.address_0!=<dut1_bt_mac>)'
- ID: BTSTK_GAP_03002
  <<: *GAP_CASE
  test point 2: BLE GAP set advertise param
  summary: ble set adv parameter channel map
  steps: |
    1. DUT1 stop advertise
    2. DUT1 start adv on channel 37
    3. PC do active scan and capture advertising report
    4. repeat step 1-3 with channel map 38, 39, all
    4. repeat step 1-3 with channel map not valid
  expected result: |
    1. succeed
    2. succeed
    3. get ADV_IND with DUT1 BT MAC
    4. get ADV_IND with DUT1 BT MAC
    5. can not get ADV_IND with DUT1 BT MAC
  initial condition: BLE_INIT1
  test environment: SSC_T1_3
  allow fail: 1/2
  cmd set:
  - ""
  - *set_default_ble_name
  - - "SSC SSC1 bleadv -L -c 0 -t 3"
    - ["R SSC1 C +BLEADV:SetAdv,OK"]
  - *open_capture_nic
  - - LOOP 7 3 "[1,2,3,4,5,6,7]" "['PDU','PDU','PDU','PDU','PDU','PDU','PDU']"
  - *dut1_stop_adv
  - - "SSC SSC1 bleadv -D -z start -t 0 -h {%d}"
    - ["R SSC1 C +BLEADV:Start,OK"]
  - - "HCITOOL 2 -i <hci_nic> lescan"
    - - 'P PC_COM C +HCITOOL:OK'
      - 'P BLENIC {%s} (HCIEvent.le_sub_event_code="LEAdvReport")(HCIEvent.event_type_0="ADV_IND")(HCIEvent.address_0=<dut1_bt_mac>)'
  - - "SSC SSC1 bleadv -D -z start -t 0 -h 8"
    - ["R SSC1 C +BLEADV:Start,ERROR"]
- ID: BTSTK_GAP_03003
  <<: *GAP_CASE
  test point 2: BLE GAP set advertise param
  summary: ble set adv parameter own address type
  steps: |
    1. DUT1 stop advertise
    2. DUT1 start adv with own address type public
    3. PC do active scan and capture advertising report
    4. repeat step 1-3 with own address type random, rpa_public, rpa_random
    5. repeat step 1-3 with channel map not valid
  expected result: |
    1. succeed
    2. succeed
    3. get ADV_IND with DUT1 BT MAC
    4. get ADV_IND with DUT1 BT MAC
    5. can not get ADV_IND with DUT1 BT MAC
  initial condition: BLE_INIT1
  test environment: SSC_T1_3
  cmd set:
  - ""
  - *set_default_ble_name
  - - "SSC SSC1 bleadv -L -c 0 -t 3"
    - ["R SSC1 C +BLEADV:SetAdv,OK"]
  - *open_capture_nic
  - - LOOP 4 3 "[0,2,1,3]" "['PDU','PDU','NPDU','NPDU']"
  - *dut1_stop_adv
  - - "SSC SSC1 bleadv -D -z start -t 0 -o {%d}"
    - ["R SSC1 C +BLEADV:OK"]
  - - "HCITOOL 2 -i <hci_nic> lescan"
    - - 'P PC_COM C +HCITOOL:OK'
      - 'P BLENIC {%s} (HCIEvent.le_sub_event_code="LEAdvReport")(HCIEvent.event_type_0="ADV_IND")(HCIEvent.data_0.NameComplete=<dut1_ble_name>)(HCIEvent.address_0=<dut1_bt_mac>)'
- ID: BTSTK_GAP_03004
  <<: *GAP_CASE
  test point 2: BLE GAP set advertise param
  summary: ble set adv parameter peer address and peer address type
  steps: |
    1. DUT1 stop advertise
    2. DUT1 start adv with adv type DIRECT_IND_HIGH, peer address type public and peer address as <hci_nic_mac>
    3. PC do active scan and capture advertising report
    4. repeat step 1-3 with adv type DIRECT_IND_HIGH, peer address type random and peer address as <hci_nic_mac>
  expected result: |
    1. succeed
    2. succeed
    3. get ADV_IND with DUT1 name DUT1 BT MAC
    4. get ADV_IND with DUT1 name and DUT1 BT MAC
  initial condition: BLE_INIT1
  test environment: SSC_T1_3
  allow fail: 2/3
  cmd set:
  - ""
  - *set_default_ble_name
  - - "SSC SSC1 bleadv -L -c 0 -t 3"
    - ["R SSC1 C +BLEADV:SetAdv,OK"]
  - *open_capture_nic
  - *dut1_stop_adv
  - - LOOP 2 2 "[0,1]" "['=','!=']"
    - [""]
  - - "SSC SSC1 bleadv -D -z start -t 1 -y {%d} -b <hci_nic_mac>"
    - ["R SSC1 C +BLEADV:OK"]
  - - "HCITOOL 2 -i <hci_nic> lescan"
    - - 'P PC_COM C +HCITOOL:OK'
      - 'P BLENIC PDU (HCIEvent.le_sub_event_code="LEAdvReport")(HCIEvent.address_0{%s}<dut1_bt_mac>)'
- ID: BTSTK_GAP_03005
  <<: *GAP_CASE
  test point 2: BLE GAP set advertise param
  summary: ble set adv parameter adv interval
  steps: |
    1. DUT1 stop advertise
    2. DUT1 start adv with adv interval 0x20-0x20 on channel 1
    3. PC do active scan and capture advertising report
    4. repeat step 1-3 with adv interval 0x40-0x40, 0x60-0x60
  expected result: |
    1. succeed
    2. succeed
    3. calculate adv intervals, within the interval range in adv param
    4. calculate adv intervals, within the interval range in adv param
  initial condition: BLE_INIT1
  test environment: SSC_T1_3
  cmd set:
  - "BLEFunction/AdvInterval"
  - - interval_list = ["0x0020-0x0020", "0x0040-0x0040", "0x0060-0x0060"]
    - ['']
  - - deviation = 0.3
    - ['']
- ID: BTSTK_GAP_03006
  <<: *GAP_CASE
  test point 2: BLE GAP set advertise param
  summary: ble set paramters for SCAN_IND
  steps: |
    1. DUT1 stop advertise
    2. DUT1 set incorrect adv interval for SCAN_IND
    3. PC do active scan and capture advertising report
    4. repeat step 1-3 with correct adv interval
  expected result: |
    1. succeed
    2. succeed
    3. can not get SCAN_IND with DUT1 BT MAC
    4. get SCAN_IND with DUT1 BT MAC
  initial condition: BLE_INIT1
  test environment: SSC_T1_3
  cmd set:
  - ""
  - *set_default_ble_name
  - - "SSC SSC1 bleadv -L -c 0 -t 3"
    - ["R SSC1 C +BLEADV:SetAdv,OK"]
  - *open_capture_nic
  - *dut1_stop_adv
  - - LOOP 2 2 "['0x20-0x40','0xA0-0xB0']" "['PDU','PDU']"
    - [""]
  - - "SSC SSC1 bleadv -D -z start -t 2 -i {%s}"
    - ["R SSC1 C +BLEADV:OK"]
  - - "HCITOOL 2 -i <hci_nic> lescan"
    - - 'P PC_COM C +HCITOOL:OK'
      - 'P BLENIC {%s} (HCIEvent.le_sub_event_code="LEAdvReport")(HCIEvent.event_type_0="SCAN_IND")(HCIEvent.address_0=<dut1_bt_mac>)'
- ID: BTSTK_GAP_03007
  <<: *GAP_CASE
  test point 2: BLE GAP set advertise param
  summary: ble set paramters for NONCONN_IND
  steps: |
    1. DUT1 stop advertise
    2. DUT1 set incorrect adv interval for NONCONN_IND
    3. PC do active scan and capture advertising report
    4. repeat step 1-3 with correct adv interval
  expected result: |
    1. succeed
    2. succeed
    3. can not get SCAN_IND with DUT1 BT MAC
    4. get SCAN_IND with DUT1 BT MAC
  initial condition: BLE_INIT1
  test environment: SSC_T1_3
  cmd set:
  - ""
  - *set_default_ble_name
  - - "SSC SSC1 bleadv -L -c 0 -t 3"
    - ["R SSC1 C +BLEADV:SetAdv,OK"]
  - *open_capture_nic
  - *dut1_stop_adv
  - - LOOP 2 2 "['0x20-0x40','0xA0-0xB0']" "['PDU','PDU']"
    - [""]
  - - "SSC SSC1 bleadv -D -z start -t 3 -i {%s}"
    - ["R SSC1 C +BLEADV:OK"]
  - - "HCITOOL 2 -i <hci_nic> lescan"
    - - 'P PC_COM C +HCITOOL:OK'
      - 'P BLENIC {%s} (HCIEvent.le_sub_event_code="LEAdvReport")(HCIEvent.event_type_0="NONCONN_IND")(HCIEvent.address_0=<dut1_bt_mac>)'
- ID: BTSTK_GAP_04001
  <<: *GAP_CASE
  test point 2: BLE GAP set scan param
  summary: ble set scan type
  steps: |
    1. stop advertise and set short device name
    2. DUT1 set adv data with manufacturer data A
    3. DUT1 set scan response data with manufacturer data B
    4. DUT2 do passive scan
    5. DUT2 do active scan
  expected result: |
    1. succeed
    2. succeed
    3. succeed
    4. get manufacturer data A
    5. get manufacturer data B
  cmd set:
  - ""
  - *dut1_stop_adv
  - - "SSC SSC1 bleadv -R -t 1 -r 0x15FF1011121314151617181910111213141516171819"
    - ["R SSC1 C +BLEADV:SetAdv,OK"]
  - - "SSC SSC1 bleadv -R -t 2 -r 0x020AEB"
    - ["R SSC1 C +BLEADV:SetScanRes,OK"]
  - *dut1_start_adv
  - *dut2_stop_adv
  - - "SSC SSC2 blescan -L -c 0 -s 0"
    - ["R SSC2 C +BLESCAN:SetScanParam,OK"]
  - - "SSC SSC2 blescan -D -z start -t 3 -e 2"
    - - 'P SSC2 RE "\+BTSCANEXT:%%s,man,0x1011121314151617181910111213141516171819"%%(<dut1_bt_mac>)'
      - 'R SSC2 NRE "\+BTSCANEXT:%%s,txp,0xEB"%%(<dut1_bt_mac>) C Complete'
  - - "SSC SSC2 blescan -D -z stop"
    - ['R SSC2 C +BLESCAN']
  - - "SSC SSC2 blescan -L -c 0 -s 1"
    - ["R SSC2 C +BLESCAN:SetScanParam,OK"]
  - - "SSC SSC2 blescan -D -z start -t 3 -e 1"
    - - 'P SSC2 RE "\+BTSCANEXT:%%s,man,0x1011121314151617181910111213141516171819"%%(<dut1_bt_mac>)'
      - 'P SSC2 RE "\+BTSCANEXT:%%s,txp,0xEB"%%(<dut1_bt_mac>)'
      - 'R SSC2 C Complete'
- ID: BTSTK_GAP_04002
  <<: *GAP_CASE
  test point 2: BLE GAP set scan param
  summary: ble set scan own address type (not test if own address work as expected)
  steps: |
    1. DUT1 start advertising
    2. DUT2 set own addr type (public, random, rpa_public, rpa_random)
    3. DUT2 do active scan
    4. DUT2 set invalid own addr type
  expected result: |
    1. succeed
    2. succeed
    3. able to scan DUT1
    4. error
  cmd set:
  - ""
  - *set_default_ble_name
  - *dut1_stop_adv
  - - "SSC SSC1 bleadv -L -c 0 -t 3"
    - ["R SSC1 C +BLEADV:SetScanRes,OK"]
  - *dut1_start_adv
  - *dut2_stop_adv
  - - LOOP 4 2 "[0,1,2,3]"
    - ['']
  - - "SSC SSC2 blescan -L -c 0 -s 1 -o {%d}"
    - ["R SSC2 C +BLESCAN:SetScanParam,OK"]
  - - "SSC SSC2 blescan -D -z start -t 1"
    - ['R SSC2 P <dut1_bt_mac> C Complete']
  - - "SSC SSC2 blescan -L -c 0 -o 4"
    - ["R SSC2 C +BLESCAN:SetScanParam,ERROR"]
- ID: BTSTK_GAP_04003
  <<: *GAP_CASE
  test point 2: BLE GAP set scan param
  summary: ble set scan interval (will not test if scan interval work as expected)
  steps: |
    1. DUT2 start advertising
    2. DUT1 set scan interval 0x0004
    3. DUT1 set scan interval 0x4000
    4. DUT1 set invalid scan interval
  expected result: |
    1. succeed
    2. succeed
    3. succeed
    4. error
  cmd set:
  - ""
  - - "SSC SSC2 bleadv -D -z start"
    - ["R SSC2 C +BLEADV:OK"]
  - *dut1_stop_adv
  - - "SSC SSC1 blescan -L -c 0 -s 1 -i 0x0004"
    - ["R SSC1 C +BLESCAN:SetScanParam,OK"]
  - - "SSC SSC1 blescan -L -c 0 -s 1 -i 0x4000"
    - ["R SSC1 C +BLESCAN:SetScanParam,OK"]
  - - "SSC SSC1 blescan -L -c 0 -s 1 -i 0x0003"
    - ["R SSC1 C +BLESCAN:SetScanParam,ERROR"]
  - - "SSC SSC1 blescan -L -c 0 -s 1 -i 0x4001"
    - ["R SSC1 C +BLESCAN:SetScanParam,ERROR"]
- ID: BTSTK_GAP_04004
  <<: *GAP_CASE
  test point 2: BLE GAP set scan param
  summary: ble set scan window (will not test if scan window work as excepted)
  steps: |
    1. DUT2 set scan interval 0x0004
    2. DUT2 set scan interval 0x4000
    3. DUT2 set scan interval 0x0003
    4. DUT2 set scan interval 0x4001
  expected result: |
    1. succeed
    2. succeed
    3. fail
    4. fail
  initial condition: BLE_INIT1
  test environment: SSC_T1_1
  cmd set:
  - ""
  - - "SSC SSC1 blescan -L -c 0 -w 0x0004"
    - ["R SSC1 C +BLESCAN:SetScanParam,OK"]
  - - "SSC SSC1 blescan -L -c 0 -w 0x4000"
    - ["R SSC1 C +BLESCAN:SetScanParam,OK"]
  - - "SSC SSC1 blescan -L -c 0 -w 0x0003"
    - ["R SSC1 C +BLESCAN:SetScanParam,ERROR"]
  - - "SSC SSC1 blescan -L -c 0 -w 0x4001"
    - ["R SSC1 C +BLESCAN:SetScanParam,ERROR"]
- ID: BTSTK_GAP_05001
  <<: *GAP_CASE
  test point 2: BLE GAP start stop adv / scan
  summary: stop and start adv in wrong state
  steps: |
    1. DUT1 stop adv
    2. DUT1 stop adv
    3. DUT2 do passive scan
    4. DUT1 start adv
    5. DUT1 start adv
    6. DUT2 do passive scan
  expected result: |
    1. succeed
    2. succeed
    3. DUT1 not in scan result
    4. succeed
    5. succeed
    6. DUT1 in scan result
  initial condition: BLE_INIT2
  test environment: SSC_T2_1
  cmd set:
  - ""
  - *dut1_stop_adv
  - *dut1_stop_adv
  - - "SSC SSC2 blescan -L -c 0"
    - ["R SSC2 C +BLESCAN:SetScanParam,OK"]
  - - "SSC SSC2 blescan -D -z start -t 1"
    - ["R SSC2 NP <dut1_bt_mac> C Complete"]
  - *dut1_start_adv
  - *dut1_start_adv
  - - "SSC SSC2 blescan -L -c 0"
    - ["R SSC2 C +BLESCAN:SetScanParam,OK"]
  - - "SSC SSC2 blescan -D -z start -t 1"
    - ["R SSC2 P <dut1_bt_mac> C Complete"]
- ID: BTSTK_GAP_05002
  <<: *GAP_CASE
  test point 2: BLE GAP start stop adv / scan
  summary: cancel scan when scanning or not scanning
  steps: |
    1. DUT1 start scanning for 3 seconds
    2. DUT1 stop scanning
    3. DUT1 stop scanning
  expected result: |
    1. succeed
    2. succeed
    3. failed
  initial condition: BLE_INIT1
  test environment: SSC_T1_1
  cmd set:
  - ""
  - - "SSC SSC1 blescan -L -c 0"
    - ["R SSC1 C +BLESCAN:SetScanParam,OK"]
  - - "SSC SSC1 blescan -D -z start -t 3"
    - ["R SSC1 C +BLESCAN:OK"]
  - - "SSC SSC1 blescan -D -z stop"
    - ["R SSC1 C +BLESCAN:Stop,OK"]
  - - "SSC SSC1 blescan -D -z stop"
    - ["R SSC1 C +BLESCAN:Stop,ERROR"]
- ID: BTSTK_GAP_06001
  <<: *GAP_CASE
  test point 2: BLE GAP connect / disconnect
  summary: ble connect as "client" and "server"
  allow fail: 1/2
  steps: |
    1. DUT1 connect to DUT2 as "client"
    2. DUT1 disconnected with DUT2
    3. DUT1 start gatt server app
    4. DUT1 connect to DUT2 as "server"
  expected result: |
    1. succeed
    2. succeed
    3. succeed
    4. succeed
  cmd set:
  - ""
  - *dut1_connect_to_dut2
  - - "SSC SSC1 bleconn -D -p 0x10"
    - ['R SSC1 C +BLE:CLOSE,OK']
  - - "SSC SSC1 gatts -S -z load -p 0xA0"
    - ['R SSC1 C +GATTS:LoadProfile,OK']
  - - "SSC SSC2 bleadv -D -z start"
    - ['R SSC2 C +BLEADV:OK']
  - - "SSC SSC1 bleconn -C -p 0xA0 -a <dut2_bt_mac> -z server"
    - ['R SSC1 C +BLE:GattsConnect']
- ID: BTSTK_GAP_06002
  <<: *GAP_CASE
  test point 2: BLE GAP connect / disconnect
  summary: ble disconnect as "client" and "server"
  steps: |
    1. DUT1 connect to DUT2 as "client"
    2. DUT1 disconnected with DUT2 as "client"
    3. DUT1 start gatt server app
    4. DUT1 connect to DUT2 as client
    5. DUT1 disconnect with DUT2 as "server"
  expected result: |
    1. succeed
    2. succeed
    3. succeed
    4. succeed
    5. succeed
  cmd set:
  - ""
  - *dut1_connect_to_dut2
  - - "SSC SSC1 bleconn -D -p 0x10"
    - ['R SSC1 C +BLE:CLOSE,OK']
  - - "SSC SSC2 bleadv -D -z start"
    - ['R SSC2 C +BLEADV:OK']
  - - "SSC SSC1 gatts -S -z load -p 0xA0"
    - ['R SSC1 C +GATTS:LoadProfile,OK']
  - *dut1_connect_to_dut2
  - - "SSC SSC1 bleconn -D -p 0x10"
    - ['R SSC1 C +BLE:CLOSE,OK']
- ID: BTSTK_GAP_06003
  <<: *GAP_CASE
  allow fail: 1/2
  test point 2: BLE GAP connect / disconnect
  summary: ble connect/disconnect to same connection multiple times 
  steps: |
    1. DUT1 connect to DUT2 as "client"
    2. DUT1 start gatt server app
    3. DUT1 connect to DUT2 as "client" again
    4. DUT1 connect to DUT2 as "server"
    5. DUT1 disconnected with DUT2 as "client"
    6. DUT1 disconnected with DUT2 as "server"
  expected result: |
    1. succeed
    2. succeed
    3. succeed
    4. succeed
    5. succeed
    6. succeed
  cmd set:
  - ""
  - *dut1_connect_to_dut2
  - - "SSC SSC1 gatts -S -z load -p 0xA0"
    - ['R SSC1 C +GATTS:LoadProfile,OK']
  - - "SSC SSC1 bleconn -C -p 0x10 -a <dut2_bt_mac>"
    - ['R SSC1 C +BLE:GattcOpen,OK']
  - - "SSC SSC1 bleconn -C -p 0xA0 -a <dut2_bt_mac> -z server"
    - ['R SSC1 C +BLE:GattsOpen,OK,00A0']
  - - "SSC SSC1 bleconn -D -p 0x10"
    - ['R SSC1 C +BLE:CLOSE,OK']
  - - "SSC SSC1 bleconn -D -p 0xA0 -z server"
    - ['R SSC1 C +BLE:GattsClose,OK']
- ID: BTSTK_GAP_06004
  <<: *GAP_CASE
  test point 2: BLE GAP connect / disconnect
  summary: ble connect to invalid address
  allow fail: 2/3
  steps: |
    1. DUT1 connect to invalid address
    2. DUT1 connect to DUT2
  expected result: |
    1. failed
    2. succeed
  cmd set:
  - ""
  - - "SSC SSC1 bleconn -C -p 0x10 -a 24:0a:c4:04:26:50"
    - ['R SSC1 C +BLECONN:OK']
  - - DELAY 30
    - ['R SSC1 C +BLE:GattcOpen,ERROR']
  - *dut1_connect_to_dut2
- ID: BTSTK_GAP_06005
  <<: *GAP_CASE
  test point 2: BLE GAP connect / disconnect
  summary: ble connect/disconnect event to active app
  steps: |
    1. DUT1 create gatts app
    2. DUT1 connect to DUT2 as "client"
    3. DUT1 do disconnect as "server"
  expected result: |
    1. succeed
    2. succeed, DUT1 and DUT2 gatts get connect event
    3. DUT1 and DUT2 gatts get disconnect event
  cmd set:
  - ""
  - - "SSC SSC1 gatts -S -z load -p 0xA0"
    - ['R SSC1 C +GATTS:LoadProfile,OK']
  - - "SSC SSC1 bleconn -C -p 0x10 -a <dut2_bt_mac>"
    - ['P SSC1 C +BLE:GattcConnect C +BLE:GattsConnect', 'P SSC2 C +BLE:GattsConnect']
  - - "SSC SSC1 bleconn -D -p 0xA0 -z server"
    - ['P SSC1 C +BLE:GattsClose']
- ID: BTSTK_GAP_07001
  <<: *GAP_CASE
  test point 2: BLE GAP update connect parameters
  summary: update connect parameters by master
  steps: |
    1. update connect parameters by master
  expected result: |
    1. succeed
  initial condition: BLE_CONN2
  cmd set:
  - "BLEFunction/ConnParamUpdate"
  - - dut = ["SSC1"]
    - ['']
  - - interval=["32-64"]
    - ['']
  - - latency=["0"]
    - ['']
  - - supervision_timeout=["32"]
    - ['']
  - - expect_result=["OK"]
    - ['']
- ID: BTSTK_GAP_07002
  <<: *GAP_CASE
  test point 2: BLE GAP update connect parameters
  summary: update connect parameters by slave
  steps: |
    1. update connect parameters by slave
  expected result: |
    1. succeed
  initial condition: BLE_CONN2
  cmd set:
  - "BLEFunction/ConnParamUpdate"
  - - dut = ["SSC2"]
    - ['']
  - - interval=["32-64"]
    - ['']
  - - latency=["0"]
    - ['']
  - - supervision_timeout=["32"]
    - ['']
  - - expect_result=["OK"]
    - ['']
- ID: BTSTK_GAP_07003
  <<: *GAP_CASE
  test point 2: BLE GAP update connect parameters
  summary: update invalid connect parameters(timeout<(1+latency)*2*MAX_interval*1.25)
  steps: |
    1. update invalid connect parameters(timeout<(1+latency)*2*MAX_interval*1.25)
  expected result: |
    1. fail
  initial condition: BLE_CONN2
  cmd set:
  - "BLEFunction/ConnParamUpdate"
  - - dut = ["SSC1"]
    - ['']
  - - interval=["7-90"]
    - ['']
  - - latency=["1"]
    - ['']
  - - supervision_timeout=["41"]
    - ['']
  - - expect_result=["ERROR"]
    - ['']
- ID: BTSTK_GAP_07004
  <<: *GAP_CASE
  test point 2: BLE GAP update connect parameters
  summary: update connnect parameters and interval within allowed range
  steps: |
    1. DUT1 update connection parametres and interval is 6-128
    2. DUT1 update connection parametres and interval is 33-3200
  expected result: |
    1. succeed
    2. succeed
  initial condition: BLE_CONN2
  cmd set:
  - "BLEFunction/ConnParamUpdate"
  - - dut = ["SSC1","SSC1"]
    - ['']
  - - interval=["6-128","33-3200"]
    - ['']
  - - latency=["0","0"]
    - ['']
  - - supervision_timeout=["50","1000"]
    - ['']
  - - expect_result=["OK","OK"]
    - ['']
- ID: BTSTK_GAP_07005
  <<: *GAP_CASE
  test point 2: BLE GAP update connect parameters
  summary: update connect parameters interval and interval out of allowed range
  steps: |
    1. DUT1 update invalid interval and interval is 16-3201
    2. DUT1 update invalid interval and interval is 5-64
  expected result: |
    1. fail
    2. fail
  initial condition: BLE_CONN2
  cmd set:
  - "BLEFunction/ConnParamUpdate"
  - - dut = ["SSC1","SSC1"]
    - ['']
  - - interval=["16-3201","5-64"]
    - ['']
  - - latency=["0","0"]
    - ['']
  - - supervision_timeout=["32","32"]
    - ['']
  - - expect_result=["ERROR","ERROR"]
    - ['']
- ID: BTSTK_GAP_07006
  <<: *GAP_CASE
  test point 2: BLE GAP update connect parameters
  summary: update connect parameters latency and latency within allowed range and timeout<(1+latency)*2*MAX_interval*1.25
  steps: |
    1. DUT1 update connect parameters latency and latency within allowed range and timeout<(1+latency)*2*MAX_interval*1.25
  expected result: |
    1. fail
  initial condition: BLE_CONN2
  cmd set:
  - "BLEFunction/ConnParamUpdate"
  - - dut = ["SSC1"]
    - ['']
  - - interval=["32-64"]
    - ['']
  - - latency=["8"]
    - ['']
  - - supervision_timeout=["32"]
    - ['']
  - - expect_result=["ERROR"]
    - ['']
- ID: BTSTK_GAP_07007
  <<: *GAP_CASE
  test point 2: BLE GAP update connect parameters
  summary: update connect parameters latency and latency = 501
  steps: |
    1. DUT1 uupdate connect parameters latency and latency = 501
  expected result: |
    1. fail
  initial condition: BLE_CONN2
  cmd set:
  - "BLEFunction/ConnParamUpdate"
  - - dut = ["SSC1"]
    - ['']
  - - interval=["6-8"]
    - ['']
  - - latency=["501"]
    - ['']
  - - supervision_timeout=["1003"]
    - ['']
  - - expect_result=["ERROR"]
    - ['']
- ID: BTSTK_GAP_07008
  <<: *GAP_CASE
  test point 2: BLE GAP update connect parameters
  summary: update connect parameters latency and latency = 500
  steps: |
    1. DUT1 update connect parameters latency and latency = 500
  expected result: |
    1. succeed
  initial condition: BLE_CONN2
  cmd set:
  - "BLEFunction/ConnParamUpdate"
  - - dut = ["SSC1"]
    - ['']
  - - interval=["6-8"]
    - ['']
  - - latency=["500"]
    - ['']
  - - supervision_timeout=["1003"]
    - ['']
  - - expect_result=["OK"]
    - ['']
- ID: BTSTK_GAP_07009
  <<: *GAP_CASE
  test point 2: BLE GAP update connect parameters
  summary: update connect parameters timeout and timeout within allowed range and timeout<(1+latency)*2*MAX_interval*1.25
  steps: |
    1. DUT1 update connect parameters timeout and timeout within allowed range and timeout<(1+latency)*2*MAX_interval*1.25
  expected result: |
    1. fail
  initial condition: BLE_CONN2
  cmd set:
  - "BLEFunction/ConnParamUpdate"
  - - dut = ["SSC1"]
    - ['']
  - - interval=["32-64"]
    - ['']
  - - latency=["0"]
    - ['']
  - - supervision_timeout=["12"]
    - ['']
  - - expect_result=["ERROR"]
    - ['']
- ID: BTSTK_GAP_07010
  <<: *GAP_CASE
  test point 2: BLE GAP update connect parameters
  summary: update connect parameters timeout and timeout = 9
  steps: |
    1. DUT1 update connect parameters timeout and timeout = 9
  expected result: |
    1. fail
  initial condition: BLE_CONN2
  cmd set:
  - "BLEFunction/ConnParamUpdate"
  - - dut = ["SSC1"]
    - ['']
  - - interval=["8-10"]
    - ['']
  - - latency=["0"]
    - ['']
  - - supervision_timeout=["9"]
    - ['']
  - - expect_result=["ERROR"]
    - ['']
- ID: BTSTK_GAP_07011
  <<: *GAP_CASE
  test point 2: BLE GAP update connect parameters
  summary: update connect parameters timeout and timeout within allowed range
  steps: |
    1. DUT1 update timeout = 10
    2. DUT1 update timeout = 3200
  expected result: |
    1. succeed
    2. succeed
  initial condition: BLE_CONN2
  cmd set:
  - "BLEFunction/ConnParamUpdate"
  - - dut = ["SSC1","SSC1"]
    - ['']
  - - interval=["8-10","8-10"]
    - ['']
  - - latency=["0","0"]
    - ['']
  - - supervision_timeout=["10","3200"]
    - ['']
  - - expect_result=["OK","OK"]
    - ['']
- ID: BTSTK_GAP_07012
  <<: *GAP_CASE
  test point 2: BLE GAP update connect parameters
  summary: update connect parameters timeout and timeout = 3201
  steps: |
    1. DUT1 update timeout = 3201
  expected result: |
    1. fail
  initial condition: BLE_CONN2
  cmd set:
  - "BLEFunction/ConnParamUpdate"
  - - dut = ["SSC1"]
    - ['']
  - - interval=["8-10"]
    - ['']
  - - latency=["0"]
    - ['']
  - - supervision_timeout=["3201"]
    - ['']
  - - expect_result=["ERROR"]
    - ['']
- ID: BTSTK_GAP_07013
  <<: *GAP_CASE
  test point 2: BLE GAP update connect parameters
  summary: update invalid connect parameters before configure connect param event back
  steps: |
    1. DUT1 update valid interval
    2. DUT1 update valid interval
  expected result: |
    1.
    2. succeed
  initial condition: BLE_CONN2
  cmd set:
  - ""
  - - "SSC SSC1 bleconn -S -z ConnParam -a <dut2_bt_mac>"
    - ['']
  - - "SSC SSC1 bleconn -S -z ConnParam -a <dut2_bt_mac> -t 0x40"
    - ['R SSC1 C pending']
- ID: BTSTK_GAP_07014
  <<: *GAP_CASE
  test point 2: BLE GAP update connect parameters
  summary: update invalid connect param and unpdate valid connect params by master
  steps: |
    1. DUT1 update invalid connect parameters
    2. DUT2 update valid connect
  expected result: |
    1. fail
    2. succeed
  initial condition: BLE_CONN2
  cmd set:
  - "BLEFunction/ConnParamUpdate"
  - - dut = ["SSC1","SSC1"]
    - ['']
  - - interval=["32-64","32-64"]
    - ['']
  - - latency=["9","0"]
    - ['']
  - - supervision_timeout=["32","32"]
    - ['']
  - - expect_result=["ERROR","OK"]
    - ['']
- ID: BTSTK_GAP_07015
  <<: *GAP_CASE
  test point 2: BLE GAP update connect parameters
  summary: update valid connect parameters twice
  allow fail: 1/2
  steps: |
    1. DUT1 update valid connect parameters
    2. DUT1 update valid connect parameters
  expected result: |
    1. succeed
    2. succeed
  initial condition: BLE_CONN2
  cmd set:
  - "BLEFunction/ConnParamUpdate"
  - - dut = ["SSC1","SSC1"]
    - ['']
  - - interval=["7-80","10-100"]
    - ['']
  - - latency=["1","0"]
    - ['']
  - - supervision_timeout=["41","30"]
    - ['']
  - - expect_result=["OK","OK"]
    - ['']
- ID: BTSTK_GAP_07016
  <<: *GAP_CASE
  test point 2: BLE GAP update connect parameters
  summary: update valid connect parameters(timeout<(1+latency)*2*MAX_interval*1.25) by slave
  steps: |
    1. DUT2 update valid connect parameters(timeout<(1+latency)*2*MAX_interval*1.25) by slave
  expected result: |
    1. fail
  initial condition: BLE_CONN2
  cmd set:
  - "BLEFunction/ConnParamUpdate"
  - - dut = ["SSC2"]
    - ['']
  - - interval=["7-90"]
    - ['']
  - - latency=["1"]
    - ['']
  - - supervision_timeout=["41"]
    - ['']
  - - expect_result=["ERROR"]
    - ['']
- ID: BTSTK_GAP_07017
  <<: *GAP_CASE
  test point 2: BLE GAP update connect parameters
  summary: update connnect parameters interval within allowed range by slave
  steps: |
    1. DUT2 update interval 6-128
    2. DUT2 update interval 21-3200
  expected result: |
    1. succeed
    2. succeed
  initial condition: BLE_CONN2
  cmd set:
  - "BLEFunction/ConnParamUpdate"
  - - dut = ["SSC2","SSC2"]
    - ['']
  - - interval=["6-128","21-3200"]
    - ['']
  - - latency=["0","0"]
    - ['']
  - - supervision_timeout=["50","1000"]
    - ['']
  - - expect_result=["OK","OK"]
    - ['']
- ID: BTSTK_GAP_07018
  <<: *GAP_CASE
  test point 2: BLE GAP update connect parameters
  summary: update connnect parameters interval out of allowed range by slave
  steps: |
    1. DUT2 update invalid interval 10-3201
    2. DUT2 update invalid interval 5-64
  expected result: |
    1. fail
    2. fail
  initial condition: BLE_CONN2
  cmd set:
  - "BLEFunction/ConnParamUpdate"
  - - dut = ["SSC2","SSC2"]
    - ['']
  - - interval=["10-3201","5-64"]
    - ['']
  - - latency=["0","0"]
    - ['']
  - - supervision_timeout=["32","32"]
    - ['']
  - - expect_result=["ERROR","ERROR"]
    - ['']
- ID: BTSTK_GAP_07019
  <<: *GAP_CASE
  test point 2: BLE GAP update connect parameters
  summary: update connnect parameters and latency within allowed range and timeout<(1+latency)*2*MAX_interval*1.25 by slave
  steps: |
    1. DUT2 update connnect parameters and latency within allowed range and timeout<(1+latency)*2*MAX_interval*1.25 by slave
  expected result: |
    1. fail
  initial condition: BLE_CONN2
  cmd set:
  - "BLEFunction/ConnParamUpdate"
  - - dut = ["SSC2"]
    - ['']
  - - interval=["32-64"]
    - ['']
  - - latency=["8"]
    - ['']
  - - supervision_timeout=["32"]
    - ['']
  - - expect_result=["ERROR"]
    - ['']
- ID: BTSTK_GAP_07020
  <<: *GAP_CASE
  test point 2: BLE GAP update connect parameters
  summary: update connect parameters latency and latency out of allowed range by slave
  steps: |
    1. DUT2 update invalid latency = 501
  expected result: |
    1. fail
  initial condition: BLE_CONN2
  cmd set:
  - "BLEFunction/ConnParamUpdate"
  - - dut = ["SSC2"]
    - ['']
  - - interval=["6-8"]
    - ['']
  - - latency=["501"]
    - ['']
  - - supervision_timeout=["1003"]
    - ['']
  - - expect_result=["ERROR"]
    - ['']
- ID: BTSTK_GAP_07021
  <<: *GAP_CASE
  test point 2: BLE GAP update connect parameters
  summary: update valid connect parameters and latency = 500 by slave
  steps: |
    1. DUT2 update latency = 500
  expected result: |
    1. success
  initial condition: BLE_CONN2
  cmd set:
  - "BLEFunction/ConnParamUpdate"
  - - dut = ["SSC2"]
    - ['']
  - - interval=["6-8"]
    - ['']
  - - latency=["500"]
    - ['']
  - - supervision_timeout=["1003"]
    - ['']
  - - expect_result=["OK"]
    - ['']
- ID: BTSTK_GAP_07022
  <<: *GAP_CASE
  test point 2: BLE GAP update connect parameters
  summary: update connect parameters timeout and timeout = 9 by slave
  steps: |
    1. DUT2 update connect parameters timeout and timeout = 9
  expected result: |
    1. fail
  initial condition: BLE_CONN2
  cmd set:
  - "BLEFunction/ConnParamUpdate"
  - - dut = ["SSC2"]
    - ['']
  - - interval=["8-10"]
    - ['']
  - - latency=["0"]
    - ['']
  - - supervision_timeout=["9"]
    - ['']
  - - expect_result=["ERROR"]
    - ['']
- ID: BTSTK_GAP_07023
  <<: *GAP_CASE
  test point 2: BLE GAP update connect parameters
  summary: update connect parameters timeout and timeout = 10 by slave
  steps: |
    1. DUT2 update connect parameters timeout and timeout = 10 by slave
  expected result: |
    1. fail
  initial condition: BLE_CONN2
  cmd set:
  - "BLEFunction/ConnParamUpdate"
  - - dut = ["SSC2"]
    - ['']
  - - interval=["8-10"]
    - ['']
  - - latency=["0"]
    - ['']
  - - supervision_timeout=["10"]
    - ['']
  - - expect_result=["OK"]
    - ['']
- ID: BTSTK_GAP_07024
  <<: *GAP_CASE
  test point 2: BLE GAP update connect parameters
  summary: update connect parameters timeout and timeout = 3200 by slave
  steps: |
    1. DUT2 update connect parameters timeout and timeout = 3200 by slave
  expected result: |
    1. fail
  initial condition: BLE_CONN2
  cmd set:
  - "BLEFunction/ConnParamUpdate"
  - - dut = ["SSC2"]
    - ['']
  - - interval=["8-10"]
    - ['']
  - - latency=["0"]
    - ['']
  - - supervision_timeout=["3200"]
    - ['']
  - - expect_result=["OK"]
    - ['']
- ID: BTSTK_GAP_07025
  <<: *GAP_CASE
  test point 2: BLE GAP update connect parameters
  summary: update connect parameters timeout and timeout = 3201 by slave
  steps: |
    1. DUT2 update connect parameters timeout and timeout = 3201 by slave
  expected result: |
    1. fail
  initial condition: BLE_CONN2
  cmd set:
  - "BLEFunction/ConnParamUpdate"
  - - dut = ["SSC2"]
    - ['']
  - - interval=["8-10"]
    - ['']
  - - latency=["0"]
    - ['']
  - - supervision_timeout=["3201"]
    - ['']
  - - expect_result=["ERROR"]
    - ['']
- ID: BTSTK_GAP_07026
  <<: *GAP_CASE
  test point 2: BLE GAP update connect parameters
  summary: update invalid connect parameters before configure connect param event back by slave
  steps: |
    1. DUT2 update valid interval
    2. DUT2 update valid interval
  expected result: |
    1.
    2. pending
  initial condition: BLE_CONN2
  cmd set:
  - ""
  - - "SSC SSC2 bleconn -S -z ConnParam -a <dut1_bt_mac>"
    - ['']
  - - "SSC SSC2 bleconn -S -z ConnParam -a <dut1_bt_mac> -t 0x40"
    - ['R SSC2 C pending']
- ID: BTSTK_GAP_07027
  <<: *GAP_CASE
  test point 2: BLE GAP update connect parameters
  summary: update invalid connect param and update valid connect params by slave
  steps: |
    1. DUT2 update invalid connect
    2. DUT2 update valid connect
  expected result: |
    1. fail
    2. succeed
  initial condition: BLE_CONN2
  cmd set:
  - "BLEFunction/ConnParamUpdate"
  - - dut = ["SSC2","SSC2"]
    - ['']
  - - interval=["32-64","32-64"]
    - ['']
  - - latency=["0","0"]
    - ['']
  - - supervision_timeout=["9","21"]
    - ['']
  - - expect_result=["ERROR","OK"]
    - ['']
- ID: BTSTK_GAP_07028
  <<: *GAP_CASE
  test point 2: BLE GAP update connect parameters
  summary: update valid connect parameters twice by slave
  allow fail: 1/2
  steps: |
    1. DUT2 update valid interval
    2. DUT2 update valid interval
  expected result: |
    1. succeed
    2. succeed
  initial condition: BLE_CONN2
  cmd set:
  - "BLEFunction/ConnParamUpdate"
  - - dut = ["SSC2","SSC2"]
    - ['']
  - - interval=["7-80","10-100"]
    - ['']
  - - latency=["1","0"]
    - ['']
  - - supervision_timeout=["41","30"]
    - ['']
  - - expect_result=["OK","OK"]
    - ['']
- ID: BTSTK_GAP_07029
  <<: *GAP_CASE
  test point 2: BLE GAP update connect parameters
  summary: update invalid connect param by master and update valid connect params by slave
  steps: |
    1. DUT1 update invalid connect
    2. DUT2 update valid connect
  expected result: |
    1. fail
    2. succeed
  initial condition: BLE_CONN2
  cmd set:
  - "BLEFunction/ConnParamUpdate"
  - - dut = ["SSC1","SSC2"]
    - ['']
  - - interval=["32-64","32-64"]
    - ['']
  - - latency=["9","0"]
    - ['']
  - - supervision_timeout=["32","32"]
    - ['']
  - - expect_result=["ERROR","OK"]
    - ['']
- ID: BTSTK_GAP_07030
  <<: *GAP_CASE
  test point 2: BLE GAP update connect parameters
  summary: update valid connect param by master and update valid connect params by slave
  steps: |
    1. DUT1 update valid interval
    2. DUT2 update valid interval
  expected result: |
    1. succeed
    2. succeed
  initial condition: BLE_CONN2
  cmd set:
  - "BLEFunction/ConnParamUpdate"
  - - dut = ["SSC1","SSC2"]
    - ['']
  - - interval=["7-80","10-100"]
    - ['']
  - - latency=["1","0"]
    - ['']
  - - supervision_timeout=["41","30"]
    - ['']
  - - expect_result=["OK","OK"]
    - ['']
- ID: BTSTK_GAP_07031
  <<: *GAP_CASE
  test point 2: BLE GAP update connect parameters
  summary: update invalid connect param by slave and update valid connect params by master
  steps: |
    1. DUT1 update invalid connect
    2. DUT2 update valid connect
  expected result: |
    1. fail
    2. success
  initial condition: BLE_CONN2
  cmd set:
  - "BLEFunction/ConnParamUpdate"
  - - dut = ["SSC2","SSC1"]
    - ['']
  - - interval=["32-64","32-64"]
    - ['']
  - - latency=["9","0"]
    - ['']
  - - supervision_timeout=["32","32"]
    - ['']
  - - expect_result=["ERROR","OK"]
    - ['']
- ID: BTSTK_GAP_07032
  <<: *GAP_CASE
  test point 2: BLE GAP update connect parameters
  summary: update valid connect param by slave and update valid connect params by master
  allow fail: 1/2
  steps: |
    1. DUT2 update valid interval
    2. DUT1 update valid interval
  expected result: |
    1. succeed
    2. succeed
  initial condition: BLE_CONN2
  cmd set:
  - "BLEFunction/ConnParamUpdate"
  - - dut = ["SSC2","SSC1"]
    - ['']
  - - interval=["7-80","10-100"]
    - ['']
  - - latency=["1","0"]
    - ['']
  - - supervision_timeout=["41","30"]
    - ['']
  - - expect_result=["OK","OK"]
    - ['']
- ID: BTSTK_GAP_07033
  <<: *GAP_CASE
  test point 2: BLE GAP update connect parameters
  summary: update connect parameters by master after pairing
  steps: |
    1. DUT1 update connection parameters
  expected result: |
    1. succeed
  initial condition: BLE_CONN_SMP
  cmd set:
  - "BLEFunction/ConnParamUpdate"
  - - dut = ["SSC1"]
    - ['']
  - - interval=["32-64"]
    - ['']
  - - latency=["0"]
    - ['']
  - - supervision_timeout=["32"]
    - ['']
  - - expect_result=["OK"]
    - ['']
- ID: BTSTK_GAP_08001
  <<: *GAP_CASE
  test point 2: BLE GAP operation without init/enable BT or register callback
  summary: do adv, scan, set name when BT is deinit
  steps: |
    1. DUT1 do adv
    2. DUT1 do scan
    3. DUT1 do set name
  expected result: |
    1. fail
    2. fail
    3. fail
  initial condition: BLE_DEINIT1
  test environment: SSC_T1_1
  cmd set:
  - ""
  - - "SSC SSC1 bleadv -L -c 0"
    - ["R SSC1 C +BLEADV"]
  - - "SSC SSC1 bleadv -D -z start"
    - ["R SSC1 C +BLEADV"]
  - - "SSC SSC1 blescan -L -c 0"
    - ["R SSC1 C +BLESCAN"]
  - - "SSC SSC1 blescan -D -z start"
    - ["R SSC1 C +BLESCAN"]
  - - "SSC SSC1 ble -S -z name -n abcde"
    - ["R SSC1 C +BLE"]
- ID: BTSTK_GAP_08002
  <<: *GAP_CASE
  test point 2: BLE GAP operation without init/enable BT or register callback
  summary: do adv, scan, set name, conn when BT is disable
  steps: |
    1. DUT1 do init
    2. DUT1 do adv
    3. DUT1 do scan
    4. DUT2 do set name
  expected result: |
    1. succeed
    2. fail
    3. fail
    4. fail
  initial condition: BLE_DEINIT1
  test environment: SSC_T1_1
  cmd set:
  - ""
  - - "SSC SSC1 bt -D -z init"
    - ["R SSC1 C +BT:OK"]
  - - "SSC SSC1 bleadv -L -c 0"
    - ["R SSC1 C +BLEADV"]
  - - "SSC SSC1 bleadv -D -z start"
    - ["R SSC1 C +BLEADV"]
  - - "SSC SSC1 blescan -L -c 0"
    - ["R SSC1 C +BLESCAN"]
  - - "SSC SSC1 blescan -D -z start"
    - ["R SSC1 C +BLESCAN"]
  - - "SSC SSC1 ble -S -z name -n abcde"
    - ["R SSC1 C +BLE"]
- ID: BTSTK_GAP_08003
  <<: *GAP_CASE
  test point 2: BLE GAP operation without init/enable BT or register callback
  summary: do adv, scan, set name, conn when BT is enable but no callback registered
  steps: |
    1. DUT1 do init and enable
    2. DUT1 do adv
    3. DUT1 do scan
    4. DUT2 do set name
  expected result: |
    1. succeed
    2. fail
    3. fail
    4. fail
  initial condition: BLE_DEINIT1
  test environment: SSC_T1_1
  cmd set:
  - ""
  - - "SSC SSC1 bt -D -z start"
    - ["R SSC1 C +BT:OK"]
  - - "SSC SSC1 bleadv -L -c 0"
    - ["R SSC1 C +BLEADV"]
  - - "SSC SSC1 bleadv -D -z start"
    - ["R SSC1 C +BLEADV"]
  - - "SSC SSC1 blescan -L -c 0"
    - ["R SSC1 C +BLESCAN"]
  - - "SSC SSC1 blescan -D -z start"
    - ["R SSC1 C +BLESCAN"]
  - - "SSC SSC1 ble -S -z name -n abcde"
    - ["R SSC1 C +BLE"]
- ID: BTSTK_GAP_09001
  <<: *GAP_CASE
  test point 2: BLE GAP processing scan data
  summary: process scan data txp, manufacturer data, interval range, appearence, flag
  steps: |
    1. DUT1 set raw adv data tx power, manufacturer data, interval range, apperaence, flag
    2. DUT1 start adv
    3. DUT2 do active scan with extended scan data 19
  expected result: |
    1. succeed
    2. succeed
    3. scan with the correct adv data
  cmd set:
  - ""
  - - "SSC SSC2 blescan -L -c 0 -d 1"
    - ["R SSC2 C +BLESCAN:SetScanParam,OK"]
  - *dut1_stop_adv
  - - "SSC SSC1 bleadv -R -t 1 -r 0x020AEB06FF1112131415051220004000021901020106"
    - ["R SSC1 C +BLEADV:OK"]
  - *dut1_start_adv
  - *dut2_stop_adv
  - - "SSC SSC2 blescan -D -z start -t 1 -e 1"
    - - 'P SSC2 RE "\+BTSCANEXT:%%s,man,0x1112131415"%%(<dut1_bt_mac>)'
      - 'P SSC2 RE "\+BTSCANEXT:%%s,txp,0xEB"%%(<dut1_bt_mac>)'
      - 'P SSC2 RE "\+BTSCANEXT:%%s,intrange,0x20004000"%%(<dut1_bt_mac>)'
      - 'P SSC2 RE "\+BTSCANEXT:%%s,app,0x01"%%(<dut1_bt_mac>)'
      - 'P SSC2 RE "\+BTSCANEXT:%%s,flag,0x06"%%(<dut1_bt_mac>)'
      - 'R SSC2 C Complete'
- ID: BTSTK_GAP_09002
  <<: *GAP_CASE
  test point 2: BLE GAP processing scan data
  summary: process scan data service UUIDs
  steps: |
    1. DUT1 set raw adv 16 bit Complete UUID list
    2. DUT1 start adv
    3. DUT2 do active scan with extended scan data
    4. repeat step 1-3 with 16 bit incomplete UUID, 32 bit complete/incomplete UUID, 128 bit complete/incomplete UUID
  expected result: |
    1. succeed
    2. succeed
    3. scan with the correct adv data
    4. scan with the correct adv data
  cmd set:
  - ""
  - *dut1_stop_adv
  - *dut2_stop_adv
  - - "SSC SSC2 blescan -L -c 0 -d 1"
    - ["R SSC2 C +BLESCAN:SetScanParam,OK"]
  - - LOOP 4 3 "['0302ABCD','0303ABCD','0504ABCDABCD','0505ABCDABCD',]" "['insrv16,0xABCD','srv16,0xABCD','insrv32,0xABCDABCD','srv32,0xABCDABCD']"
  - - "SSC SSC1 bleadv -R -t 1 -r 0x{%s}"
    - ["R SSC1 C +BLEADV:OK"]
  - *dut1_start_adv
  - - "SSC SSC2 blescan -D -z start -t 1 -e 1"
    - - 'P SSC2 RE "\+BTSCANEXT:%%s,{%s}"%%(<dut1_bt_mac>)'
      - 'R SSC2 C Complete'
  - - LOOP 2 3 "['1106ABCDABCDABCDABCDABCDABCDABCDABCD','1107ABCDABCDABCDABCDABCDABCDABCDABCD']" "['insrv128,0xABCDABCDABCDABCDABCDABCDABCDABCD','srv128,0xABCDABCDABCDABCDABCDABCDABCDABCD']"
  - - "SSC SSC1 bleadv -R -t 1 -r 0x{%s}"
    - ["R SSC1 C +BLEADV:OK"]
  - *dut1_start_adv
  - - "SSC SSC2 blescan -D -z start -t 1 -e 1"
    - - 'P SSC2 RE "\+BTSCANEXT:%%s,{%s}"%%(<dut1_bt_mac>)'
      - 'R SSC2 C Complete'
- ID: BTSTK_GAP_09003
  <<: *GAP_CASE
  test point 2: BLE GAP processing scan data
  summary: process scan data service data
  steps: |
    1. DUT1 set raw adv 16 bit service data
    2. DUT1 start adv
    3. DUT2 do active scan with extended scan data
    4. repeat step 1-3 with 32 bit service data, 128 bit service data
  expected result: |
    1. succeed
    2. succeed
    3. scan with the correct adv data
    4. scan with the correct adv data
  cmd set:
  - ""
  - *dut1_stop_adv
  - *dut2_stop_adv
  - - "SSC SSC2 blescan -L -c 0 -d 1"
    - ["R SSC2 C +BLESCAN:SetScanParam,OK"]
  - - LOOP 3 3 "['0416ABCDEF','0620ABCDABCDEF','1221ABCDABCDABCDABCDABCDABCDABCDABCDEF',]" "['srvdata,0xABCDEF','srvdata32,0xABCDABCDEF','srvdata128,0xABCDABCDABCDABCDABCDABCDABCDABCDEF']"
  - - "SSC SSC1 bleadv -R -t 1 -r 0x{%s}"
    - ["R SSC1 C +BLEADV:OK"]
  - *dut1_start_adv
  - - "SSC SSC2 blescan -D -z start -t 1 -e 1"
    - - 'P SSC2 RE "\+BTSCANEXT:%%s,{%s}"%%(<dut1_bt_mac>)'
      - 'R SSC2 C Complete'
- ID: BTSTK_GAP_09004
  <<: *GAP_CASE
  test point 2: BLE GAP processing scan data
  summary: process combined adv data and scan response data
  steps: |
    1. DUT1 set raw adv data manufacturer data
    2. DUT1 set scan response data tx power, interval range, apperaence, flag
    2. DUT1 start adv
    3. DUT2 do active scan with extended scan data 19
  expected result: |
    1. succeed
    2. succeed
    3. scan with the correct adv data
  cmd set:
  - ""
  - *dut1_stop_adv
  - - "SSC SSC2 blescan -L -c 0 -d 1"
    - ["R SSC2 C +BLESCAN:SetScanParam,OK"]
  - - "SSC SSC1 bleadv -R -t 1 -r 0x15FF1011121314151617181910111213141516171819"
    - ["R SSC1 C +BLEADV:OK"]
  - - "SSC SSC1 bleadv -R -t 2 -r 0x020AEB051220004000021901020106"
    - ["R SSC1 C +BLEADV:OK"]
  - *dut1_start_adv
  - *dut2_stop_adv
  - - "SSC SSC2 blescan -D -z start -t 1 -e 1"
    - - 'P SSC2 RE "\+BTSCANEXT:%%s,man,0x1011121314151617181910111213141516171819"%%(<dut1_bt_mac>)'
      - 'P SSC2 RE "\+BTSCANEXT:%%s,txp,0xEB"%%(<dut1_bt_mac>)'
      - 'P SSC2 RE "\+BTSCANEXT:%%s,intrange,0x20004000"%%(<dut1_bt_mac>)'
      - 'P SSC2 RE "\+BTSCANEXT:%%s,app,0x01"%%(<dut1_bt_mac>)'
      - 'P SSC2 RE "\+BTSCANEXT:%%s,flag,0x06"%%(<dut1_bt_mac>)'
      - 'R SSC2 C Complete'
- ID: BTSTK_GAP_09005
  <<: *GAP_CASE
  test point 2: BLE GAP processing scan data
  summary: proccess scan data included device name
  steps: |
    1. DUT1 stop advertise and set short device name abcde
    2. DUT1 set include device name for adv data and scan response
    3. DUT1 start advertising
    4. DUT2 start scan and processing scan data
    5. DUT1 stop advertising
    6. DUT1 set not include device name for adv data and scan response
    7. DUT1 start advertising
    8. DUT2 start scan and processing scan data
  expected result: |
    1. succeed
    2. succeed
    3. succeed
    4. scan with the correct adv data
    5. succeed
    6. succeed
    7. succeed
    8. scan with the correct adv data
  cmd set:
  - ""
  - *dut1_stop_adv
  - - "SSC SSC2 blescan -L -c 0 -d 1"
    - ["R SSC2 C +BLESCAN:SetScanParam,OK"]
  - - "SSC SSC1 ble -S -z name -n abcde"
    - ["R SSC1 C +BLE"]
  - - "SSC SSC1 bleadv -L -c 0 -n 1 -t 3"
    - ["R SSC1 C +BLEADV:SetAdv,OK"]
  - *dut1_start_adv
  - - "SSC SSC2 blescan -D -z start -t 1 -e 1"
    - - 'P SSC2 RE "\+BTSCAN:INQ,%%s,abcde"%%(<dut1_bt_mac>)'
      - 'R SSC2 C Complete'
  - *dut1_stop_adv
  - - "SSC SSC1 bleadv -L -c 0 -n 0 -t 3"
    - ["R SSC1 C +BLEADV:SetAdv,OK"]
  - *dut1_start_adv
  - - "SSC SSC2 blescan -D -z start -t 1 -e 1"
    - - 'P SSC2 RE "\+BTSCAN:INQ,%%s,NULL"%%(<dut1_bt_mac>)'
      - 'R SSC2 C Complete'
- ID: BTSTK_GAP_09006
  <<: *GAP_CASE
  test point 2: BLE GAP processing scan data
  summary: proccess scan data included Tx power
  steps: |
    1. DUT1 stop advertise and set short device name
    2. DUT1 set include Tx power for adv data and scan response
    3. DUT1 start advertising
    4. DUT2 start scan and processing scan data
    5. DUT1 stop advertising
    6. DUT1 set not include Tx power for adv data and scan response
    7. DUT1 start advertising
    8. DUT2 start scan and processing scan data
  expected result: |
    1. succeed
    2. succeed
    3. succeed
    4. scan with the correct adv data
    5. succeed
    6. succeed
    7. succeed
    8. scan with the correct adv data
  cmd set:
  - ""
  - *dut1_stop_adv
  - - "SSC SSC2 blescan -L -c 0 -d 1"
    - ["R SSC2 C +BLESCAN:SetScanParam,OK"]
  - *set_default_ble_name
  - - "SSC SSC1 bleadv -L -c 0 -x 1 -t 3"
    - ["R SSC1 C +BLEADV:SetAdv,OK"]
  - *dut1_start_adv
  - - "SSC SSC2 blescan -D -z start -t 1 -e 1"
    - - 'P SSC2 RE "\+BTSCANEXT:%%s,txp,0xEB"%%(<dut1_bt_mac>)' 
      - 'R SSC2 C Complete'
  - *dut1_stop_adv
  - - "SSC SSC1 bleadv -L -c 0 -x 0 -t 3"
    - ["R SSC1 C +BLEADV:SetAdv,OK"]
  - *dut1_start_adv
  - - "SSC SSC2 blescan -D -z start -t 1 -e 1"
    - - 'R SSC2 NRE "\+BTSCANEXT:%%s,txp,0xEB"%%(<dut1_bt_mac>)'
      - 'R SSC2 C Complete'
- ID: BTSTK_GAP_09007
  <<: *GAP_CASE
  test point 2: BLE GAP processing scan data
  summary: proccess scan data included adv interval
  steps: |
    1. DUT1 stop advertise and set short device name
    2. DUT1 set max interval 0x40 min interval 0x20 for adv data and scan response
    3. DUT1 start advertising
    4. DUT2 start scan and processing scan data
    5. DUT1 stop advertising
    6. DUT1 set max interval 0x400 min interval 0x200 for adv data and scan response
    7. DUT1 start advertising
    8. DUT2 start scan and processing scan data
  expected result: |
    1. succeed
    2. succeed
    3. succeed
    4. scan with the correct adv data
    5. succeed
    6. succeed
    7. succeed
    8. scan with the correct adv data
  cmd set:
  - ""
  - *dut1_stop_adv
  - - "SSC SSC2 blescan -L -c 0 -d 1"
    - ["R SSC2 C +BLESCAN:SetScanParam,OK"]
  - *set_default_ble_name
  - - "SSC SSC1 bleadv -L -c 0 -i 0x20-0x40 -t 3"
    - ["R SSC1 C +BLEADV:SetAdv,OK"]
  - *dut1_start_adv
  - - "SSC SSC2 blescan -D -z start -t 1 -e 1"
    - - 'P SSC2 RE "\+BTSCANEXT:%%s,intrange,0x20004000"%%(<dut1_bt_mac>)'
      - 'R SSC2 C Complete'
  - *dut1_stop_adv
  - - "SSC SSC1 bleadv -L -c 0 -i 0x200-0x400 -t 3"
    - ["R SSC1 C +BLEADV:SetAdv,OK"]
  - *dut1_start_adv
  - - "SSC SSC2 blescan -D -z start -t 1 -e 1"
    - - 'P SSC2 RE "\+BTSCANEXT:%%s,intrange,0x00020004"%%(<dut1_bt_mac>)'
      - 'R SSC2 C Complete'
- ID: BTSTK_GAP_09008
  <<: *GAP_CASE
  test point 2: BLE GAP processing scan data
  summary: proccess scan data included appearance
  steps: |
    1. DUT1 stop advertise and set short device name
    2. DUT1 set appearance to 0 for adv data and scan response
    3. DUT1 start advertising
    4. DUT2 start scan and processing scan data
    5. DUT1 stop advertising
    6. DUT1 set appearance to 1 for adv data and scan response
    7. DUT1 start advertising
    8. DUT2 start scan and processing scan data
  expected result: |
    1. succeed
    2. succeed
    3. succeed
    4. scan with the correct adv data
    5. succeed
    6. succeed
    7. succeed
    8. scan with the correct adv data
  cmd set:
  - ""
  - *dut1_stop_adv
  - - "SSC SSC2 blescan -L -c 0 -d 1"
    - ["R SSC2 C +BLESCAN:SetScanParam,OK"]
  - *set_default_ble_name
  - - "SSC SSC1 bleadv -L -c 0 -a 0 -t 3"
    - ["R SSC1 C +BLEADV:SetAdv,OK"]
  - *dut1_start_adv
  - - "SSC SSC2 blescan -D -z start -t 1 -e 1"
    - - 'P SSC2 NRE "\+BTSCANEXT:%%s,app,0x0100"%%(<dut1_bt_mac>)'
      - 'R SSC2 C Complete'
  - *dut1_stop_adv
  - - "SSC SSC1 bleadv -L -c 0 -a 1 -t 3"
    - ["R SSC1 C +BLEADV:SetAdv,OK"]
  - *dut1_start_adv
  - - "SSC SSC2 blescan -D -z start -t 1 -e 1"
    - - 'P SSC2 RE "\+BTSCANEXT:%%s,app,0x0100"%%(<dut1_bt_mac>)'
      - 'R SSC2 C Complete'
- ID: BTSTK_GAP_09009
  <<: *GAP_CASE
  test point 2: BLE GAP processing scan data
  summary: proccess scan data included manufacturer data
  steps: |
    1. DUT1 stop advertise and set short device name
    2. DUT1 set manufacturer to 0x12345678 for adv data and scan response
    3. DUT1 start advertising
    4. DUT2 start scan and processing scan data
  expected result: |
    1. succeed
    2. succeed
    3. succeed
    4. scan with the correct adv data
  cmd set:
  - ""
  - *dut1_stop_adv
  - - "SSC SSC2 blescan -L -c 0 -d 1"
    - ["R SSC2 C +BLESCAN:SetScanParam,OK"]
  - *set_default_ble_name
  - - "SSC SSC1 bleadv -L -c 0 -m 0x12345678 -t 3"
    - ["R SSC1 C +BLEADV:SetAdv,OK"]
  - *dut1_start_adv
  - - "SSC SSC2 blescan -D -z start -t 1 -e 1"
    - - 'P SSC2 RE "\+BTSCANEXT:%%s,man,0x12345678"%%(<dut1_bt_mac>)'
      - 'R SSC2 C Complete'
- ID: BTSTK_GAP_09010
  <<: *GAP_CASE
  test point 2: BLE GAP processing scan data
  summary: proccess scan data included service data
  steps: |
    1. DUT1 stop advertise
    2. DUT1 set advertising data and scan response service data 0x1234123456 and not include device name
    3. DUT1 start advertising
    4. DUT2 start scan and processing scan data
  expected result: |
    1. succeed
    2. succeed
    3. succeed
    4. scan with the correct adv data
  cmd set:
  - ""
  - *dut1_stop_adv
  - - "SSC SSC2 blescan -L -c 0 -d 1"
    - ["R SSC2 C +BLESCAN:SetScanParam,OK"]
  - *set_default_ble_name
  - - "SSC SSC1 bleadv -L -c 0 -n 0 -d 0x1234123456 -t 3"
    - ["R SSC1 C +BLEADV:SetAdv,OK"]
  - *dut1_start_adv
  - - "SSC SSC2 blescan -D -z start -t 1 -e 1"
    - - 'P SSC2 RE "\+BTSCANEXT:%%s,srvdata,0x1234123456"%%(<dut1_bt_mac>)'
      - 'R SSC2 C Complete'
- ID: BTSTK_GAP_09011
  <<: *GAP_CASE
  test point 2: BLE GAP processing scan data
  summary: proccess scan data included service uuid list
  steps: |
    1. DUT1 stop advertise
    2. DUT1 set advertising data and scan response not include name, service uuid list 0xABCD,ABCDDCBA,12349B5F8000008000100000ABCD0000
    3. DUT1 start advertising
    4. DUT2 start scan and processing scan data
  expected result: |
    1. succeed
    2. succeed
    3. succeed
    4. scan with the correct adv data
  cmd set:
  - ""
  - *dut1_stop_adv
  - - "SSC SSC2 blescan -L -c 0 -d 1"
    - ["R SSC2 C +BLESCAN:SetScanParam,OK"]
  - - "SSC SSC1 bleadv -L -c 0 -n 0 -x 0 -i 0x00-0x00 -s ABCD,ABCDDCBA,12349B5F8000008000100000ABCD0000 -t 3"
    - ["R SSC1 C +BLEADV:SetAdv,OK"]
  - *dut1_start_adv
  - - "SSC SSC2 blescan -D -z start -t 1 -e 1"
    - - 'P SSC2 RE "\+BTSCANEXT:%%s,srv16,0xABCD"%%(<dut1_bt_mac>)'
      - 'P SSC2 RE "\+BTSCANEXT:%%s,srv32,0xABCDDCBA"%%(<dut1_bt_mac>)'
      - 'P SSC2 RE "\+BTSCANEXT:%%s,srv128,0x12349B5F8000008000100000ABCD0000"%%(<dut1_bt_mac>)'
      - 'R SSC2 C Complete'
- ID: BTSTK_GAP_10001
  <<: *GAP_CASE
  test point 2: BLE GAP master multi connection test
  summary: master connect to 3 slaves with different app and master do disconnect
  steps: |
    1. DUT2-DUT4 starts adv
    2. DUT1 connect to DUT2 - DUT4
    3. DUT1 disconnect with DUT2 - DUT4
  expected result: |
    1. succeed
    2. succeed
    3. succeed
  initial condition: BLE_INIT5
  test environment: SSC_T5_1
  cmd set:
  - ""
  - - "SSC SSC[2-4] bleadv -D -z start"
    - ["P SSC[2-4] C +BLEADV:Start,OK"]
  - - LOOP 3 1 "[0,1,2]" "[2,3,4]"
    - ""
  - - "SSC SSC1 bleconn -C -p 0x1{%d} -a <dut{%d}_bt_mac>"
    - ['R SSC1 C +BLE:GattcOpen,OK']
  - - LOOP 3 1 "[2,1,0]" "[4,3,2]"
    - ""
  - - "SSC SSC1 bleconn -D -z client -p 0x1{%d}"
    - ['P SSC1 C +BLE:GattcDisconnect,OK', 'P SSC{%d} C +BLE:GattsDisconnect,OK']
- ID: BTSTK_GAP_10002
  <<: *GAP_CASE
  test point 2: BLE GAP master multi connection test
  summary: master connect to 3 slaves with different app and slave do disconnect
  steps: |
    1. DUT2-DUT4 starts adv
    2. DUT1 connect to DUT2 - DUT4
    3. DUT1 disconnect with DUT2 - DUT4
  expected result: |
    1. succeed
    2. succeed
    3. succeed
  initial condition: BLE_INIT5
  test environment: SSC_T5_1
  cmd set:
  - ""
  - - "SSC SSC[2-4] bleadv -D -z start"
    - ["P SSC[2-4] C +BLEADV:Start,OK"]
  - - LOOP 3 1 "[0,1,2]" "[2,3,4]" "[2,3,4]"
    - ""
  - - "SSC SSC1 bleconn -C -p 0x1{%d} -a <dut{%d}_bt_mac>"
    - ['R SSC1 C +BLE:GattcConnect,OK', 'R SSC{%d} C +BLE:GattsConnect']
    - - LOOP 3 1 "[2,3,4]" "[2,3,4]"
    - ""
  - - "SSC SSC{%d} bleconn -D -z server -p 0xA0"
    - ['P SSC1 C +BLE:GattcDisconnect,OK,001[0-2]', 'P SSC{%d} C +BLE:GattsDisconnect,OK']
- ID: BTSTK_GAP_10003
  <<: *GAP_CASE
  test point 2: BLE GAP master multi connection test
  summary: master connect to 4 slaves with same app and master do disconnect
  steps: |
    1. DUT2-DUT4 starts adv
    2. DUT1 connect to DUT2 - DUT5
    3. DUT1 disconnect with DUT2 - DUT5
  expected result: |
    1. succeed
    2. succeed
    3. succeed
  initial condition: BLE_INIT5
  test environment: SSC_T5_1
  cmd set:
  - ""
  - - "SSC SSC[2-5] bleadv -D -z start"
    - ["P SSC[2-5] C +BLEADV:Start,OK"]
  - - LOOP 4 1 "[2,3,4,5]" "[2,3,4,5]"
    - ""
  - - "SSC SSC1 bleconn -C -p 0x10 -a <dut{%d}_bt_mac>"
    - ['R SSC1 C +BLE:GattcConnect,OK', 'R SSC{%d} C +BLE:GattsConnect']
  - - LOOP 4 1 "[2,3,4,5]" "[2,3,4,5]"
    - ""
  - - "SSC SSC1 bleconn -D -z client -p 0x10 -a <dut{%d}_bt_mac>"
    - ['P SSC1 C +BLE:GattcDisconnect,OK', 'P SSC{%d} C +BLE:GattsDisconnect,OK']
- ID: BTSTK_GAP_10004
  <<: *GAP_CASE
  test point 2: BLE GAP master multi connection test
  summary: master connect to 4 slaves with same app and slave do disconnect
  steps: |
    1. DUT2-DUT4 starts adv
    2. DUT1 connect to DUT2 - DUT5
    3. DUT1 disconnect with DUT2 - DUT5
  expected result: |
    1. succeed
    2. succeed
    3. succeed
  initial condition: BLE_INIT5
  test environment: SSC_T5_1
  cmd set:
  - ""
  - - "SSC SSC[2-5] bleadv -D -z start"
    - ["P SSC[2-5] C +BLEADV:Start,OK"]
  - - LOOP 4 1 "[2,3,4,5]" "[2,3,4,5]"
    - ""
  - - "SSC SSC1 bleconn -C -p 0x10 -a <dut{%d}_bt_mac>"
    - ['R SSC1 C +BLE:GattcConnect,OK', 'R SSC{%d} C +BLE:GattsConnect']
  - - LOOP 4 1 "[2,3,4,5]" "[2,3,4,5]" "[2,3,4,5]"
    - ""
  - - "SSC SSC{%d} bleconn -D -z server -p 0xA0"
    - ['P SSC1 RE "BLE:GattcDisconnect,OK,0010,%%s"%%(<dut{%d}_bt_mac>)', 'P SSC{%d} C +BLE:GattsDisconnect']
- ID: BTSTK_GAP_11001
  <<: *GAP_CASE
  test point 2: BLE GAP slave multi connection test
  summary: slave connected by 4 master and master do disconnect
  steps: |
    1. DUT2-DUT5 starts adv
    2. DUT1 connect to DUT2 - DUT5
    3. DUT1 disconnect with DUT2 - DUT5
  expected result: |
    1. succeed
    2. succeed
    3. succeed
  initial condition: BLE_INIT5
  test environment: SSC_T5_1
  cmd set:
  - ""
  - - "SSC SSC1 gatts -S -z load -p 0xA0"
    - ['R SSC1 C +GATTS:StartService,OK,A000']
  - - LOOP 4 2 "[2,3,4,5]" "[2,3,4,5]"
    - ""
  - - "SSC SSC1 bleadv -D -z start"
    - ["P SSC1 C +BLEADV:Start,OK"]
  - - "SSC SSC{%d} bleconn -C -p 0x10 -a <dut1_bt_mac>"
    - ['R SSC{%d} C +BLE:GattcConnect,OK,0010', 'R SSC1 C +BLE:GattsConnect']
  - - LOOP 4 1 "[2,3,4,5]" "[2,3,4,5]"
  - - "SSC SSC{%d} bleconn -D -z client -p 0x10"
    - ['P SSC{%d} C +BLE:GattcDisconnect,OK', 'P SSC1 C +BLE:GattsDisconnect,OK']
- ID: BTSTK_GAP_11002
  <<: *GAP_CASE
  test point 2: BLE GAP slave multi connection test
  summary: slave connected by 4 master and slave do disconnect
  steps: |
    1. DUT2-DUT5 starts adv
    2. DUT1 connect to DUT2 - DUT5
    3. DUT1 disconnect with DUT2 - DUT5
  expected result: |
    1. succeed
    2. succeed
    3. succeed
  initial condition: BLE_INIT5
  test environment: SSC_T5_1
  cmd set:
  - ""
  - - "SSC SSC1 gatts -S -z load -p 0xA0"
    - ['R SSC1 C +GATTS:StartService,OK,A000']
  - - LOOP 4 2 "[2,3,4,5]" "[2,3,4,5]"
    - ""
  - - "SSC SSC1 bleadv -D -z start"
    - ["P SSC1 C +BLEADV:Start,OK"]
  - - "SSC SSC{%d} bleconn -C -p 0x10 -a <dut1_bt_mac>"
    - ['R SSC{%d} C +BLE:GattcConnect,OK,0010', 'R SSC1 C +BLE:GattsConnect']
  - - LOOP 4 1 "[2,3,4,5]" "[2,3,4,5]"
    - ""
  - - "SSC SSC1 bleconn -D -z server -p 0xA0 -a <dut{%d}_bt_mac>"
    - ['P SSC{%d} C +BLE:GattcDisconnect,OK', 'P SSC1 C +BLE:GattsDisconnect,OK']
- ID: BTSTK_GAP_12001
  <<: *GAP_CASE
  test point 2: BLE GAP multi connection as both master and slave role test
  summary:  connected by 2 masters and connect to 2 slaves and do disconnect
  steps: |
    1. DUT1 starts adv
    2. DUT2 DUT3 connect to DUT1
    3. DUT1 connect to DUT4 DUT5
    4. DUT1 do disconnect
  expected result: |
    1. succeed
    2. succeed
    3. succeed
    4. succeed
  initial condition: BLE_INIT5
  test environment: SSC_T5_1
  cmd set:
  - ""
  - - "SSC SSC1 gatts -S -z load -p 0xA0"
    - ['R SSC1 C +GATTS:StartService,OK,A000']
  - - LOOP 2 2 "[2,3]" "[2,3]"
    - ""
  - - "SSC SSC1 bleadv -D -z start"
    - ["P SSC1 C +BLEADV:Start,OK"]
  - - "SSC SSC{%d} bleconn -C -p 0x10 -a <dut1_bt_mac>"
    - ['R SSC{%d} C +BLE:GattcConnect,OK,0010', 'P SSC1 C +BLE:GattsConnect']
  - - "SSC SSC[4-5] bleadv -D -z start"
    - ["P SSC[4-5] C +BLEADV:Start,OK"]
  - - LOOP 2 1 "[4,5]" "[4,5]"
    - ""
  - - "SSC SSC1 bleconn -C -p 0x10 -a <dut{%d}_bt_mac>"
    - ['P SSC1 C +BLE:GattcConnect,OK', 'P SSC{%d} C +BLE:GattsConnect']
  - - "SSC SSC1 bleconn -D -z all"
    - ["P SSC[2-5] C Disconnect"]
- ID: BTSTK_GAP_12002
  <<: *GAP_CASE
  test point 2: BLE GAP multi connection as both master and slave role test
  summary:  connected by 2 masters and connect to 2 slaves and be disconnected
  steps: |
    1. DUT1 starts adv
    2. DUT2 DUT3 connect to DUT1
    3. DUT1 connect to DUT4 DUT5
    4. DUT[2-5] do disconnect
  expected result: |
    1. succeed
    2. succeed
    3. succeed
    4. succeed
  initial condition: BLE_INIT5
  test environment: SSC_T5_1
  cmd set:
  - ""
  - - "SSC SSC1 gatts -S -z load -p 0xA0"
    - ['R SSC1 C +GATTS:StartService,OK,A000']
  - - LOOP 2 2 "[2,3]" "[2,3]"
    - ""
  - - "SSC SSC1 bleadv -D -z start"
    - ["P SSC1 C +BLEADV:Start,OK"]
  - - "SSC SSC{%d} bleconn -C -p 0x10 -a <dut1_bt_mac>"
    - ['R SSC{%d} C +BLE:GattcConnect,OK,0010', 'R SSC1 C +BLE:GattsConnect']
  - - "SSC SSC[4-5] bleadv -D -z start"
    - ["P SSC[4-5] C +BLEADV:Start,OK"]
  - - LOOP 2 1 "[4,5]" "[4,5]"
    - ""
  - - "SSC SSC1 bleconn -C -p 0x10 -a <dut{%d}_bt_mac>"
    - ['R SSC1 C +BLE:GattcConnect,OK', 'R SSC{%d} C +BLE:GattsConnect']
  - - LOOP 4 1 "[2,3,4,5]"
  - - "SSC SSC{%d} bleconn -D -z all"
    - ["P SSC1 C Disconnect"]
- ID: BTSTK_GAP_40001
  <<: *GAP_CASE
  test point 2: test if BLE work after switch off some sub modules
  summary: GAP only test
  steps: |
    1. download GAP only SSC bin on both DUT
    2. DUT1 set ascii device name
    3. stop advertising
    4. config scan response and start advertising
    5. DUT2 do active scan
  expected result: |
    1. succeed
    2. succeed
    3. succeed
    4. succeed
    5. device name in scan result
  initial condition: None
  version: v1 (2017-05-19)
  cmd set:
  - ""
  - - "SSC SSC[1-2] reboot"
    - ['R SSC[1-2] C !!!ready!!!']
  - - "SSC SSC[1-2] ble -R"
    - ["R SSC[1-2] C +BLE:OK"]
  - *set_default_ble_name
  - *set_default_adv_data
  - *dut2_stop_adv
  - - "SSC SSC2 blescan -L -c 0"
    - ["R SSC2 C +BLESCAN:SetScanParam,OK"]
  - - "SSC SSC2 blescan -D -z start -t 3"
    - ["R SSC2 P <dut1_ble_name>"]
- ID: BTSTK_GAP_50001
  <<: *GAP_CASE
  category: Performance
  test point 1: performance + stress
  test point 2: BLE GAP performance test
  summary: BLE Connect and disconnect performance test
  steps: |
    1. DUT1 disconnect with DUT2
    2. DUT2 start advertising
    3. DUT1 connect to DUT2
    4. do service discovery
    5. loop step 1-4
    6. check connection fail ratio and average conn time
  expected result: |
    1. succeed
    2. succeed
    3. succeed
    4. succeed
    5. succeed
    6. meet pass standard
  initial condition: BLE_INIT2
  execution time: 6
  version: v1 (2017-05-19)
  CI ready: 'No'
  cmd set:
  - "BLEStress/BLEConnPerformance"
  - - "test_time = 420"
    - ""
  - - "average_conn_time = 3"
    - ""
  - - "fail_ratio = 0.01"
    - ""
  - - "fail_timeout = 10"
    - ""
- ID: BTSTK_GAP_51001
  <<: *GAP_CASE
  category: Performance
  test point 1: performance + stress
  test point 2: BLE GAP performance test
  summary: BLE adv and scan forever
  steps: |
    1. DUT1 do adv
    2. DUT2 do scan
  expected result: |
    1. succeed
    2. succeed
  initial condition: BLE_INIT2
  execution time: 10
  cmd set:
  - "BLEStress/BLEAdvScanPerformance"
  - - "test_time = 600"
    - ""
- ID: BTSTK_GAP_13001
  <<: *GAP_CASE
  test point 2: BLE GAP param packet data length test
  summary: gattc set packet data length at valid length (27-251)
  steps: |
    1. DUT1 connect DUT2
    2. DUT1 set packet data length
  expected result: |
    1. succeed
    2. succeed
  cmd set:
  - ""
  - - "SSC SSC1 bleconn -C -p 0x10 -a <dut2_bt_mac>"
    - ['R SSC1 C +BLE:GattcConnect,OK', 'R SSC2 C +BLE:GattsConnect']
  - - LOOP 3 1 "[27,200,251]" "[27,200,251]"
  - - "SSC SSC1 ble -S -z pktLen -a <dut2_bt_mac> -l {%d}"
    - ["R SSC1 C +BLECONN:UpdatePktLen,OK,{%d}"]
- ID: BTSTK_GAP_13002
  <<: *GAP_CASE
  test point 2: BLE GAP param packet data length test
  summary: gattc set packet data length at invalid length
  steps: |
    1. DUT1 connect DUT2
    2. DUT1 set packet data length
  expected result: |
    1. succeed
    2. succeed
  cmd set:
  - ""
  - - "SSC SSC1 bleconn -C -p 0x10 -a <dut2_bt_mac>"
    - ['R SSC1 C +BLE:GattcConnect,OK', 'R SSC2 C +BLE:GattsConnect']
  - - LOOP 2 1 "[26,252]" "[27,251]"
  - - "SSC SSC1 ble -S -z pktLen -a <dut2_bt_mac> -l {%d}"
    - ["R SSC1 C +BLECONN:UpdatePktLen,OK,{%d}"]
- ID: BTSTK_GAP_13003
  <<: *GAP_CASE
  test point 2: BLE GAP param packet data length test
  summary: gatts set packet data length at valid length (27-251)
  steps: |
    1. DUT1 connect DUT2
    2. DUT1 set packet data length
  expected result: |
    1. succeed
    2. succeed
  cmd set:
  - ""
  - - "SSC SSC1 bleconn -C -p 0x10 -a <dut2_bt_mac>"
    - ['R SSC1 C +BLE:GattcConnect,OK', 'R SSC2 C +BLE:GattsConnect']
  - - LOOP 3 1 "[27,200,251]" "[27,200,251]"
  - - "SSC SSC2 ble -S -z pktLen -a <dut1_bt_mac> -l {%d}"
    - ["R SSC2 C +BLECONN:UpdatePktLen,OK,{%d}"]
- ID: BTSTK_GAP_13004
  <<: *GAP_CASE
  test point 2: BLE GAP param packet data length test
  summary: gatts set packet data length at invalid length
  steps: |
    1. DUT1 connect DUT2
    2. DUT1 set packet data length
  expected result: |
    1. succeed
    2. succeed
  cmd set:
  - ""
  - - "SSC SSC1 bleconn -C -p 0x10 -a <dut2_bt_mac>"
    - ['R SSC1 C +BLE:GattcConnect,OK', 'R SSC2 C +BLE:GattsConnect']
  - - LOOP 2 1 "[26,252]" "[27,251]"
  - - "SSC SSC2 ble -S -z pktLen -a <dut1_bt_mac> -l {%d}"
    - ["R SSC2 C +BLECONN:UpdatePktLen,OK,{%d}"]
- ID: BTSTK_GAP_14001
  <<: *GAP_CASE
  test point 2: BLE GAP set randAddr as random address
  summary: adv with static random address and be connected
  steps: |
    1. DUT2 do set randaddr
    2. DUT2 start adv and DUT1 start scan
    3. DUT1 connect to DUT2
  expected result: |
    1. succeed
    2. succeed
    3. succeed
  cmd set:
  - ""
  - - "SSC SSC2 bleadv -D -z stop"
    - ["R SSC2 C +BLEADV:OK"]
  - - "SSC SSC2 ble -S -z randAddr -a <static_device_addr> -r 1"
    - ["R SSC2 C +BLECONN:SetRandAddr,OK"]
  - - "SSC SSC2 bleadv -D -z start -o 1"
    - ["R SSC2 C +BLEADV:OK"]
  - - "SSC SSC1 blescan -D -z start"
    - ['R SSC1 P <static_device_addr> C Complete']
  - - "SSC SSC1 bleconn -C -p 0x10 -a <static_device_addr>"
    - ["P SSC1 C +BLE:GattcConnect,OK", "P SSC2 C +BLE:GattsConnect"]
- ID: BTSTK_GAP_14002
  <<: *GAP_CASE
  test point 2: BLE GAP set as pablic address
  summary: BLE GAP set invalid randaddr FF:FF:FF:FF:FF:FF
  steps: |
    1. DUT1 set invalid randaddr FF:FF:FF:FF:FF:FF
  expected result: |
    1. failed
  cmd set:
  - ""
  - - "SSC SSC1 ble -S -z randAddr -a FF:FF:FF:FF:FF:FF -r 1"
    - ["R SSC1 C +BLECONN:SetRandAddr,ERROR"]
- ID: BTSTK_GAP_14003
  <<: *GAP_CASE
  test point 2: BLE GAP set as pablic address
  summary: BLE GAP set invalid randaddr 11:00:00:00:00:00
  steps: |
    1. DUT1 set invalid randaddr 11:00:00:00:00:00
  expected result: |
    1. failed
  cmd set:
  - ""
  - - "SSC SSC1 ble -S -z randAddr -a 11:00:00:00:00:00 -r 1"
    - ["R SSC1 C +BLECONN:SetRandAddr,ERROR"]
- ID: BTSTK_GAP_14004
  <<: *GAP_CASE
  test point 2: BLE GAP set as pablic address
  summary: BLE GAP set invalid randaddr 10:FA:67:25:AB:DA
  steps: |
    1. DUT1 set invalid randaddr 10:FA:67:25:AB:DA
  expected result: |
    1. failed
  cmd set:
  - ""
  - - "SSC SSC1 ble -S -z randAddr -a 10:FA:67:25:AB:DA -r 1"
    - ["R SSC1 C +BLECONN:SetRandAddr,ERROR"]
- ID: BTSTK_GAP_14005
  <<: *GAP_CASE
  test point 2: BLE GAP set as pablic address
  summary: BLE GAP set invalid randaddr 01:49:F0:AF:CA:DB
  steps: |
    1. DUT1 set invalid randaddr 01:49:F0:AF:CA:DB
  expected result: |
    1. failed
  cmd set:
  - ""
  - - "SSC SSC1 ble -S -z randAddr -a 01:49:F0:AF:CA:DB -r 1"
    - ["R SSC1 C +BLECONN:SetRandAddr,ERROR"]
- ID: BTSTK_GAP_14006
  <<: *GAP_CASE
  test point 2: BLE GAP set as pablic address
  summary: BLE GAP set invalid randaddr 00:AC:F6:36:A4:6B
  steps: |
    1. DUT1 set invalid randaddr 00:AC:F6:36:A4:6B
  expected result: |
    1. failed
  cmd set:
  - ""
  - - "SSC SSC1 ble -S -z randAddr -a 00:AC:F6:36:A4:6B -r 1"
    - ["R SSC1 C +BLECONN:SetRandAddr,ERROR"]
- ID: BTSTK_GAP_14007
  <<: *GAP_CASE
  test point 2: BLE set random address test
  summary: BLE set random address as resolvable private address
  initial condition: BLE_INIT_SMP
  steps: |
    1. SSC1 set adv params and config local privacy as true
    2. SSC1 bleadv and SSC2 blescan
  expected result: |
    1. succeed
    2. succeed
  cmd set:
  - ""
  - - "SSC SSC1 bleadv -D -z stop"
    - ["R SSC1 C +BLEADV:OK"]
  - - "SSC SSC1 bleadv -L -c 0 -t 3"
    - ["R SSC1 C +BLEADV:SetAdv,OK C +BLEADV:SetScanRes,OK"]
  - - "SSC SSC1 ble -S -z privacy -p 1"
    - ["R SSC1 C +BLECONN:SetResAddr,Success"]
  - - "SSC SSC1 bleadv -D -z start -o 1"
    - ["R SSC1 C +BLEADV:OK"]
  - - "SSC SSC2 bleadv -D -z stop"
    - ["R SSC2 C +BLEADV:OK"]
  - - "SSC SSC2 blescan -L -c 0"
    - ["R SSC2 C +BLESCAN:SetScanParam,OK"]
  - - "SSC SSC2 blescan -D -z start -t 3"
    - ["R SSC2 NP <dut1_bt_mac> C +BLESCAN:InquiryComplete"]
- ID: BTSTK_GAP_14008
  <<: *GAP_CASE
  test point 2: BLE set random address test
  summary: BLE set random address as resolvable private address
  steps: |
    1. SSC2 set AuthReqMode and IOCAP,set RspKey as Enc and IRK
    2. pairing
    3. SSC1 disconnect to SSC2
    4. SSC2 do local privacy
    5. SSC2 bleadv and SSC1 blescan
  expected result: |
    1. succeed
    2. succeed
    3. succeed
    4. succeed
    5. succeed
  initial condition: BLE_INIT_SMP
  cmd set:
  - ""
  - - "SSC SSC2 blesmp -S -z AuthReqMode -v 0x01"
    - ['P SSC2 C +BLESMP:OK']
  - - "SSC SSC2 blesmp -S -z IOCAP -v 0x03"
    - ['P SSC2 C +BLESMP:OK']
  - - "SSC SSC2 blesmp -S -z RspKey -v 0x03"
    - ['P SSC2 C +BLESMP:OK']
  - - "SSC SSC1 bleconn -C -p 0x10 -a <dut2_bt_mac>"
    - ['P SSC1 C +BLE:GattcConnect,OK', 'P SSC2 C +BLE:GattsConnect']
  - - "SSC SSC2 blesmp -E -r <dut1_bt_mac> -z Enc"
    - ['P SSC1 C +BLESMP:SecReq']
  - - "SSC SSC1 blesmp -R -a 1 -r <dut2_bt_mac>"
    - ['P SSC[1-2] C +BLESMP:AuthComplete,Success,0']
  - - "SSC SSC1 bleconn -D -z all"
    - ['P SSC1 C +BLE:GattcDisconnect,OK', 'P SSC2 C +BLE:GattsDisconnect,OK']
  - - "SSC SSC2 ble -S -z privacy -p 1"
    - ["R SSC2 C +BLECONN:SetResAddr,Success"]
  - - "SSC SSC2 bleadv -D -z stop"
    - ["R SSC2 C +BLEADV:OK"]
  - - "SSC SSC2 bleadv -L -c 0 -t 3"
    - ["R SSC2 C +BLEADV:SetAdv,OK C +BLEADV:SetScanRes,OK"]
  - - "SSC SSC2 bleadv -D -z start -o 1"
    - ["R SSC2 C +BLEADV:OK"]
  - - "SSC SSC1 blescan -D -z stop"
    - ["R SSC1 C +BLESCAN:OK"]
  - - "SSC SSC1 blescan -L -c 0"
    - ["R SSC1 C +BLESCAN:SetScanParam,OK"]
  - - "SSC SSC1 blescan -D -z start -t 3"
    - ["R SSC1 P <dut2_bt_mac>"]
- ID: BTSTK_GAP_14009
  <<: *GAP_CASE
  test point 2: BLE set random address test
  summary: BLE set random address as resolvable private address
  steps: |
    1. SSC2 set AuthReqMode and IOCAP,set RspKey as Enc and IRK
    2. pairing
    3. SSC1 and SSC2 reboot
    4. SSC2 do local privacy
    5. SSC2 bleadv and SSC1 blescan
  expected result: |
    1. succeed
    2. succeed
    3. succeed
    4. succeed
    5. succeed
  initial condition: BLE_INIT_SMP
  allow fail: 2/3
  cmd set:
  - ""
  - - "SSC SSC2 blesmp -S -z AuthReqMode -v 0x01"
    - ['P SSC2 C +BLESMP:OK']
  - - "SSC SSC2 blesmp -S -z IOCAP -v 0x03"
    - ['P SSC2 C +BLESMP:OK']
  - - "SSC SSC2 blesmp -S -z RspKey -v 0x03"
    - ['P SSC2 C +BLESMP:OK']
  - - "SSC SSC1 bleconn -C -p 0x10 -a <dut2_bt_mac>"
    - ['P SSC1 C +BLE:GattcConnect,OK', 'P SSC2 C +BLE:GattsConnect']
  - - "SSC SSC2 blesmp -E -r <dut1_bt_mac> -z Enc"
    - ['P SSC1 C +BLESMP:SecReq']
  - - "SSC SSC1 blesmp -R -a 1 -r <dut2_bt_mac>"
    - ['P SSC[1-2] C +BLESMP:AuthComplete,Success,0']
  - - "SSC SSC[1-2] reboot"
    - ['R SSC[1-2] C !!!ready!!!']
  - - "SSC SSC[1-2] ble -R"
    - ["R SSC[1-2] C +BLE:OK"]
  - - "SSC SSC2 ble -S -z privacy -p 1"
    - ["R SSC2 C +BLECONN:SetResAddr,Success"]
  - - "SSC SSC2 bleadv -D -z stop"
    - ["R SSC2 C +BLEADV:OK"]
  - - "SSC SSC2 bleadv -L -c 0 -t 3"
    - ["R SSC2 C +BLEADV:SetAdv,OK C +BLEADV:SetScanRes,OK"]
  - - "SSC SSC2 bleadv -D -z start -o 1"
    - ["R SSC2 C +BLEADV:OK"]
  - - "SSC SSC1 blescan -D -z stop"
    - ["R SSC1 C +BLESCAN:OK"]
  - - "SSC SSC1 blescan -L -c 0"
    - ["R SSC1 C +BLESCAN:SetScanParam,OK"]
  - - "SSC SSC1 blescan -D -z start -t 3"
    - ["R SSC1 P <dut2_bt_mac>"]
- ID: BTSTK_GAP_15001
  <<: *GAP_CASE
  test point 2: BLE GAP white list test
  summary: add white list and remove
  steps: |
   1. get white list
   2. DUT1 add DUT2 into white list
   3. remove DUT2 from white list
   4. remove DUT2 from white list
  expected result: |
   1. succeed
   2. succeed
   3. succeed
   4. succeed
  initial condition: BLE_INIT_REBOOT2
  cmd set:
  - "" 
  - - "SSC SSC1 ble -W -z get"
    - ['P SSC1 C +BLE:GetWhiteList,OK,12']
  - - "SSC SSC1 ble -W -a <dut2_bt_mac> -z add"
    - ['P SSC1 C +BLE:AddWhiteList,Success']
  - - "SSC SSC1 ble -W -a <dut2_bt_mac> -z remove"
    - ['P SSC1 C +BLE:RemoveWhiteList,Success']
  - - "SSC SSC1 ble -W -a <dut2_bt_mac> -z remove"
    - ['P SSC1 C +BLE:RemoveWhiteList,Success']
- ID: BTSTK_GAP_15002
  <<: *GAP_CASE
  test point 2: BLE GAP white list test
  summary: get white list test
  steps: |
   1. DUT1 add white list DUT2 DUT3 DUT4 DUT5
   2. DUT1 get white list
  expected result: |
   1. succeed
   2. succeed
  initial condition: BLE_INIT_REBOOT2
  cmd set:
  - ""
  - - LOOP 4 1 "[0,1,2,4]"
  - - "SSC SSC1 ble -W -z add -a c0:3e:72:bd:a8:c{%d}"
    - ['P SSC1 C +BLE:AddWhiteList,Success']
  - - "SSC SSC1 ble -W -z get"
    - ['P SSC1 C +BLE:GetWhiteList,OK,8']
- ID: BTSTK_GAP_15003
  <<: *GAP_CASE
  test point 2: BLE GAP white list test
  summary: add white list twice
  steps: |
   1. DUT1 add DUT2 into white list
   2. DUT1 add DUT2 into white list
   3. DUT1 get white list
  expected result: |
   1. succeed
   2. succeed
   3. succeed
  initial condition: BLE_INIT_REBOOT2
  cmd set:
  - ""
  - - "SSC SSC1 ble -W -a <dut2_bt_mac> -z add"
    - ['P SSC1 C +BLE:AddWhiteList,Success']
  - - "SSC SSC1 ble -W -a <dut2_bt_mac> -z add"
    - ['P SSC1 C +BLE:AddWhiteList,Success']
  - - "SSC SSC1 ble -W -z get"
    - ['P SSC1 C +BLE:GetWhiteList,OK,11']
- ID: BTSTK_GAP_15004
  <<: *GAP_CASE
  test point 2: BLE GAP white list test
  summary: add 12 device to white list
  steps: |
   1. DUT1 add 12 addresses into white list
   2. DUT1 get white list
   3. DUT1 add 13th address into white list
  expected result: |
   1. succeed
   2. succeed
   3. failed
  initial condition: BLE_INIT_REBOOT2
  cmd set:
  - ""
  - - LOOP 12 1 "['0','1','2','3','4','5','6','7','8','9','a','b']"
    - ''
  - - "SSC SSC1 ble -W -a c0:9b:0e:36:6d:7{%s} -z add"
    - ['P SSC1 C +BLE:AddWhiteList,Success']
  - - "SSC SSC1 ble -W -z get"
    - ['P SSC1 C +BLE:GetWhiteList,OK,0']
  - - "SSC SSC1 ble -W -a c0:9b:0e:36:6d:7c -z add"
    - ['P SSC1 C +BLE:AddWhiteList,Fail']
